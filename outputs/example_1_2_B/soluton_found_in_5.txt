PS C:\Users\gacekpau\OneDrive - Intel Corporation\Desktop\3 ROK ISI\genetyczne-vol2> python .\runGP.py
Inputs:  [[7, -9], [-4, -9], [5, -3], [1, -4], [8, -9], [7, 3], [4, -3], [7, -5], [8, 5], [1, -3], [2, -3], [2, -7], [7, -4], [3, -7], [0, -4], [2, 1], [-2, -3], [8, -3], [5, -6], [8, 2], [1, -9], [3, 2], [5, -7], [0, -8], [-4, -6], [1, -1], [8, -7], [-1, -4], [0, -2], [1, -2], [6, -9], [2, -6], [6, -7], [5, -5], [5, 3], [-2, -4], [3, -6], [7, 5], [7, -2], [4, -7], [-1, -7], [6, -8], [8, 4], [6, 3], [0, -1], [7, -3], [-3, -6], [2, -8], [4, 0], [4, -5]]
Outputs:  [[-2], [-13], [2], [-3], [-1], [10], [1], [2], [13], [-2], [-1], [-5], [3], [-4], [-4], [3], [-5], [5], [-1], [10], [-8], [5], [-2], [-8], [-10], [0], [1], [-5], [-2], [-1], [-3], [-4], [-1], [0], [8], [-6], [-3], [12], [5], [-3], [-8], [-2], [12], [9], [-1], [4], [-9], [-6], [4], [-1]]
0 :  LOOP(X1>X1)IF(14<79)X1=54;;print(X1);X1=11;;IF(9*65>23+86)print(56-27);X1=38;print(50);;
1 :  print(X1-X1*91);
2 :  print(read(2);-72+X1);print(X1+X1*61);IF((30==X1)AND(8!=X1))IF(21==X2)X2=0;;;
3 :  print(71/read(1););LOOP((71==X1)OR(37!=X1))print(X1-11);;
4 :  X1=70-read(1);;IF(83-X1==X2)IF(99<84)X2=63;;print(65/X2);;
5 :  IF(94+2==X1/X1)IF(69<X1)X1=89;;print(76);;
6 :  print(97);
7 :  IF(50+26==42*X1)X1=42;print(4+22);IF(3==85)X1=92;;;
8 :  print(X1-X1+59/X1);
9 :  X1=35;IF((X1<X2)OR(X2>39))X2=94;print(X1/82);IF(21>X2)X1=61;;print(30-X1);IF(34>100)X1=66;;;print(57+read(1););
10 :  print(X1);
11 :  print(read(2);-read(1););X1=17/44;LOOP(99<X1)print(41);print(27+X1);IF(X1!=19)X1=52;;X1=45;;
12 :  print(X1/X1);print(99);X1=read(2);;X1=read(1);;
13 :  IF((X1!=72)AND(X1>X1))print(22);;IF(X1-35>X1-X1)print(X2/36);print(9);;
14 :  X1=read(1);+2-43;print(53+99-65);print(75+read(1););LOOP(71*X1<45/X1)print(2+X1);print(X1+55);;
15 :  LOOP(X1/79!=23+42)print(55-X1);print(X1*X1);print(X2+X3);print(X1);;print(X1*X1);X1=read(2);;
16 :  IF(X1*X1!=89*X1)X1=50;X1=10;print(X1/X1);IF(49==42)X1=57;;print(X1*X1);;
17 :  print(X1-13);LOOP(X1+X1==34)X1=58;print(73*37);print(39/X1);X1=86;;X1=83+X1+1+76;print(15);print(X1*70);
18 :  IF(X1+X1>39-25)print(36);X1=52;print(99+X1);;print(84);print(X1);
19 :  LOOP(100==X1)print(36*83);print(34-X2);;print(X2*78);
20 :  print(read(2);*92/X1);LOOP(15>X1)X1=17;print(X1-X1);;IF(27==24)print(36+68);;print(56*X1);IF(8!=67)print(X1/68);LOOP(X1==51)X1=8;;print(X1*X1);;
21 :  print(72*5*X2);print(read(2);/14-X1);X1=read(2);;X2=35;print(read(2);-X2);
22 :  LOOP(X1/21<74)X1=81;LOOP(X1>X1)X1=37;;IF(X1!=83)X1=54;;;print(67*21/69);print(17+77+71);print(9);IF(X1*X1>95*55)X1=84;LOOP(X1!=76)X1=24;;X1=32;;
23 :  print(54-X1);print(X1);
24 :  X1=43-80;print(read(2);+X1*38);LOOP(95/53==X1+35)print(X1-93);print(X1);print(100*92);;
25 :  IF(X1<10)IF(X1<11)X1=64;;print(76);;
26 :  print(0-X2/85);X1=X1;IF(61-X2<67)print(38+X1);LOOP(25<10)X1=10;;;
27 :  print(X1/100);
28 :  LOOP(12<X1)print(70);;print(X1*X1/45);print(10-69);print(83/read(1););X1=81+X1-48;
29 :  IF(40*98<X1/X1)print(X1+X2);;IF(X1<54)IF(X2<X1)X1=25;;print(X2/3);IF(82<93)X1=41;;;print(11);
30 :  X1=62/65/22;X1=X1/29/14-79;print(read(1);-56/X1);print(89);print(read(1);-X1+X1);
31 :  print(71+X2);LOOP(5>83)IF(X2>90)X1=4;;X1=46;;X1=39;print(93);
32 :  print(57*45);LOOP(X1==80)print(X1-X1);IF(X1>X1)X2=100;;LOOP(58<X1)X1=61;;print(X1-X2);print(20/1);;
33 :  IF(90/X1<X1+36)print(X1*97);print(X1*X1);IF(X1!=X1)X1=38;;;
34 :  LOOP(X1<X2)LOOP(56>X1)X2=47;;IF(22==63)X2=48;;;
35 :  print(read(1);+X1*81);
36 :  IF(X1-X1!=97+0)LOOP(X1<X1)X1=81;;IF(X1>X1)X1=93;;;
37 :  print(X1/61);
38 :  LOOP(27==X1)IF(X1>64)X3=85;;X1=12;X2=75;print(75);X1=8;;print(74*42*13);
39 :  X1=85;print(41*34);
40 :  X1=read(1);;print(X1/6);print(53/81);IF(((27<19)OR(X1==X1))AND(19<X1))IF(0<X1)X2=51;;;print(91/read(2););
41 :  LOOP(X1>19)IF(81>X1)X1=20;;print(36-58);print(44);X1=1;print(X1+X1);;
42 :  LOOP(22==X1)print(X1+77);X1=90;;
43 :  LOOP(68+92<2)print(X1);X1=14;X1=40;X1=56;X1=35;;
44 :  IF(X1==69)print(96);print(X1-X1);print(X1/X1);;IF(X1-50==0-94)LOOP(X1>X1)X1=56;;IF(X1!=X1)X1=78;;print(63/11);;
45 :  LOOP(X1/X1<57-54)print(90/25);LOOP(X1!=45)X2=21;;print(X1*X1);;
46 :  print(28-X1-32-X2);X1=32-44*X1;IF(69>74)print(X2);LOOP(X1<X1)X1=91;;IF(83!=2)X2=66;;;print(X1);print(85-2);
47 :  print(20/59/98);print(X1/77-83);print(56);X1=85;
48 :  print(28-74*1);LOOP(X1<X1)print(29);;
49 :  IF(X1>X1)print(36+X1);print(X2-23);;print(X1*52+24);print(read(2);-15/X1);LOOP(27==56)print(99);;
50 :  print(11/60-18);X1=54;
51 :  X1=read(2);;print(57*73);print(X1);print(X1*X1-read(2););print(61*read(1););
52 :  LOOP(X1<90)X1=56;print(X1+X1);print(41*X1);;
53 :  IF(44+X1!=X1)X1=59;;LOOP(X1+X1==X1-X1)LOOP(91==X1)X1=9;;print(25*X1);IF(46!=X1)X2=83;;;IF(85!=17)X1=34;IF(87>24)X3=23;;print(27*X3);;
54 :  print(60/X1);print(20+X2/73);
55 :  LOOP(X1+X1!=37)LOOP(X2<95)X2=48;;X1=37;print(97/X3);;IF(38>X1)LOOP(X1<X2)X3=10;;;LOOP(X1+X1>23*36)print(X1);;
56 :  print(X1);print(X1);print(X1-73);X1=5;print(X1);
57 :  LOOP(48/15!=X2-X2)print(19);print(X1/X2);IF(85!=51)X2=8;;;LOOP(((X1==X2)AND(99>X2))OR(55<X1))print(9);LOOP(X2!=X1)X2=14;;LOOP(35<X1)X2=10;;;X1=read(2);;print(92);
58 :  print(78);
59 :  print(read(2);/X1);IF(92>X1)LOOP(87!=X1)X1=36;;;IF(11!=11)print(33);;IF(97==98)print(69);LOOP(X1!=75)X1=96;;print(X1);;
60 :  print(14-75);X1=80;print(55/8-read(1););
61 :  X1=25;
62 :  print(35*read(1););IF(11-X1!=X1/78)print(18/X1);;
63 :  LOOP(X1-X1==X1-X2)LOOP(6>X1)X2=31;;IF(X2==87)X1=11;;IF(3==19)X2=38;;;
64 :  print(93-44);
65 :  print(60+X1);
66 :  LOOP(94==97)LOOP(64>X1)X1=24;;print(X1+97);LOOP(16==0)X2=72;;;
67 :  print(X1+X1*read(1););print(80-31/33-92);
68 :  X1=X1+read(2);;
69 :  IF(88==8)X2=53;LOOP(X1!=11)X2=36;;print(42*47);print(13);LOOP(X1<X1)X2=98;;;print(read(2);-X1/X1);print(read(2);+23+X2);
70 :  IF((79==X1)OR(X1<74))LOOP(X2>X2)X2=18;;print(X2/97);print(X1);print(X1);print(X2/X1);;
71 :  X1=14;LOOP(X1-X1!=13+X1)print(X1-69);print(X1-89);;print(36-50-31);print(read(1);*read(1););
72 :  X1=read(2);;print(X1);
73 :  print(11*100);
74 :  print(86/26+X1);print(X1-32);X1=1;
75 :  print(74);IF(37!=X1)print(89-78);;
76 :  print(read(2);*91*18);
77 :  print(X1-58);print(37);LOOP(57-X1!=4)X1=1;;print(read(1);-X2+X1);X1=99;
78 :  X1=X1*54+54;LOOP(59/79>X1)LOOP(36==X1)X2=33;;IF(25!=X2)X2=81;;print(14);;
79 :  print(X1/92-11);
80 :  LOOP(X1/X1==X1)print(69);;LOOP(62/X1==77)LOOP(37==95)X2=56;;;print(100+read(1););print(X1);LOOP(29>X1)print(84/0);;
81 :  IF(X1!=6)print(X1);IF(X1!=X1)X1=28;;print(71/71);LOOP(X1<X1)X2=46;;;print(read(1);-read(1););print(read(1);-62-X1);LOOP(3<X1)IF(X2<X2)X2=65;;print(X1);print(X2*X2);print(X2/51);;
82 :  print(X1);print(X1*X1);X1=17;print(10);IF((X1!=X1)OR(X1==X2))print(0);LOOP(X1<51)X2=73;;LOOP(X1<86)X2=46;;;
83 :  X1=36;X1=82+96;print(23);X1=read(1);/83+X1;print(37*X1+X1);
84 :  print(X1);IF(22-20<81*X1)print(X1+X1);print(58/2);IF(42==X1)X1=44;;;
85 :  print(X1/X1-read(2););
86 :  print(57+X1/read(1););
87 :  print(X1/78/37-X1);LOOP(X1>31)IF(X1<76)X1=27;;IF(X1!=70)X1=20;;;
88 :  X1=read(2);;
89 :  print(X1/48);IF(79>X1)X1=68;print(12*22);;IF(X1!=9)print(64);IF(X1>X2)X1=34;;;
90 :  print(83*61);LOOP(X1!=47)print(X1-41);print(5+31);IF(X1==80)X1=100;;LOOP(13>47)X2=20;;LOOP(10==X2)X2=59;;;
91 :  print(41);print(36+70-X1);IF(X1/62==40)print(X1);;LOOP(51!=73)IF(7!=X1)X1=55;;X1=27;print(92);print(X1-X1);;
92 :  print(X1);
93 :  print(X1);X1=22;print(17);print(read(2);/X1+59);
94 :  print(X1*X1);
95 :  print(X1);
96 :  X1=read(1);/read(2);;print(X1);
97 :  LOOP(97+25<X1*X1)print(X1-X1);LOOP(23<88)X1=100;;print(X2/X1);print(X1+X1);;X1=22;print(39/50);
98 :  X1=85;
99 :  IF(82/X1!=X1*X1)X1=37;X1=75;IF(X1!=X1)X1=9;;;IF(41<43)X1=71;IF(X1>X1)X1=21;;;LOOP(42-98<26)X1=10;print(X1+X1);;
Max initial depth:  5
Population size:  100
Crossover rate:  0.6   Mutation rate:  0.7
Random population generated

Generation 0  ------------------------
Epochs without improvement: 0

Best fitness: -192  best indiv:
[0] [7, -9] [-2]
[-11] [-4, -9] [-13]
[-2] [5, -3] [2]
[-6] [1, -4] [-3]
[1] [8, -9] [-1]
[0] [7, 3] [10]
[-3] [4, -3] [1]
[0] [7, -5] [2]
[1] [8, 5] [13]
[-6] [1, -3] [-2]
[-5] [2, -3] [-1]
[-5] [2, -7] [-5]
[0] [7, -4] [3]
[-4] [3, -7] [-4]
[-7] [0, -4] [-4]
[-5] [2, 1] [3]
[-9] [-2, -3] [-5]
[1] [8, -3] [5]
[-2] [5, -6] [-1]
[1] [8, 2] [10]
[-6] [1, -9] [-8]
[-4] [3, 2] [5]
[-2] [5, -7] [-2]
[-7] [0, -8] [-8]
[-11] [-4, -6] [-10]
[-6] [1, -1] [0]
[1] [8, -7] [1]
[-8] [-1, -4] [-5]
[-7] [0, -2] [-2]
[-6] [1, -2] [-1]
[-1] [6, -9] [-3]
[-5] [2, -6] [-4]
[-1] [6, -7] [-1]
[-2] [5, -5] [0]
[-2] [5, 3] [8]
[-9] [-2, -4] [-6]
[-4] [3, -6] [-3]
[0] [7, 5] [12]
[0] [7, -2] [5]
[-3] [4, -7] [-3]
[-8] [-1, -7] [-8]
[-1] [6, -8] [-2]
[1] [8, 4] [12]
[-1] [6, 3] [9]
[-7] [0, -1] [-1]
[0] [7, -3] [4]
[-10] [-3, -6] [-9]
[-5] [2, -8] [-6]
[-3] [4, 0] [4]
[-3] [4, -5] [-1]
print(read(1);-7);  =  -192
AVG fitness:  -19453
Nr of point mutations:  299
Nr of subtree mutations:  64

Generation 1  ------------------------
Epochs without improvement: 0

Best fitness: -192  best indiv:
[0] [7, -9] [-2]
[-11] [-4, -9] [-13]
[-2] [5, -3] [2]
[-6] [1, -4] [-3]
[1] [8, -9] [-1]
[0] [7, 3] [10]
[-3] [4, -3] [1]
[0] [7, -5] [2]
[1] [8, 5] [13]
[-6] [1, -3] [-2]
[-5] [2, -3] [-1]
[-5] [2, -7] [-5]
[0] [7, -4] [3]
[-4] [3, -7] [-4]
[-7] [0, -4] [-4]
[-5] [2, 1] [3]
[-9] [-2, -3] [-5]
[1] [8, -3] [5]
[-2] [5, -6] [-1]
[1] [8, 2] [10]
[-6] [1, -9] [-8]
[-4] [3, 2] [5]
[-2] [5, -7] [-2]
[-7] [0, -8] [-8]
[-11] [-4, -6] [-10]
[-6] [1, -1] [0]
[1] [8, -7] [1]
[-8] [-1, -4] [-5]
[-7] [0, -2] [-2]
[-6] [1, -2] [-1]
[-1] [6, -9] [-3]
[-5] [2, -6] [-4]
[-1] [6, -7] [-1]
[-2] [5, -5] [0]
[-2] [5, 3] [8]
[-9] [-2, -4] [-6]
[-4] [3, -6] [-3]
[0] [7, 5] [12]
[0] [7, -2] [5]
[-3] [4, -7] [-3]
[-8] [-1, -7] [-8]
[-1] [6, -8] [-2]
[1] [8, 4] [12]
[-1] [6, 3] [9]
[-7] [0, -1] [-1]
[0] [7, -3] [4]
[-10] [-3, -6] [-9]
[-5] [2, -8] [-6]
[-3] [4, 0] [4]
[-3] [4, -5] [-1]
print(read(1);-7);  =  -192
AVG fitness:  -1586
Nr of point mutations:  200
Nr of subtree mutations:  48

Generation 2  ------------------------
Epochs without improvement: 1

Best fitness: -192  best indiv:
[0] [7, -9] [-2]
[-11] [-4, -9] [-13]
[-2] [5, -3] [2]
[-6] [1, -4] [-3]
[1] [8, -9] [-1]
[0] [7, 3] [10]
[-3] [4, -3] [1]
[0] [7, -5] [2]
[1] [8, 5] [13]
[-6] [1, -3] [-2]
[-5] [2, -3] [-1]
[-5] [2, -7] [-5]
[0] [7, -4] [3]
[-4] [3, -7] [-4]
[-7] [0, -4] [-4]
[-5] [2, 1] [3]
[-9] [-2, -3] [-5]
[1] [8, -3] [5]
[-2] [5, -6] [-1]
[1] [8, 2] [10]
[-6] [1, -9] [-8]
[-4] [3, 2] [5]
[-2] [5, -7] [-2]
[-7] [0, -8] [-8]
[-11] [-4, -6] [-10]
[-6] [1, -1] [0]
[1] [8, -7] [1]
[-8] [-1, -4] [-5]
[-7] [0, -2] [-2]
[-6] [1, -2] [-1]
[-1] [6, -9] [-3]
[-5] [2, -6] [-4]
[-1] [6, -7] [-1]
[-2] [5, -5] [0]
[-2] [5, 3] [8]
[-9] [-2, -4] [-6]
[-4] [3, -6] [-3]
[0] [7, 5] [12]
[0] [7, -2] [5]
[-3] [4, -7] [-3]
[-8] [-1, -7] [-8]
[-1] [6, -8] [-2]
[1] [8, 4] [12]
[-1] [6, 3] [9]
[-7] [0, -1] [-1]
[0] [7, -3] [4]
[-10] [-3, -6] [-9]
[-5] [2, -8] [-6]
[-3] [4, 0] [4]
[-3] [4, -5] [-1]
print(read(1);-7);  =  -192
AVG fitness:  -2357
Nr of point mutations:  43
Nr of subtree mutations:  25

Generation 3  ------------------------
Epochs without improvement: 2

Best fitness: -192  best indiv:
[0] [7, -9] [-2]
[-11] [-4, -9] [-13]
[-2] [5, -3] [2]
[-6] [1, -4] [-3]
[1] [8, -9] [-1]
[0] [7, 3] [10]
[-3] [4, -3] [1]
[0] [7, -5] [2]
[1] [8, 5] [13]
[-6] [1, -3] [-2]
[-5] [2, -3] [-1]
[-5] [2, -7] [-5]
[0] [7, -4] [3]
[-4] [3, -7] [-4]
[-7] [0, -4] [-4]
[-5] [2, 1] [3]
[-9] [-2, -3] [-5]
[1] [8, -3] [5]
[-2] [5, -6] [-1]
[1] [8, 2] [10]
[-6] [1, -9] [-8]
[-4] [3, 2] [5]
[-2] [5, -7] [-2]
[-7] [0, -8] [-8]
[-11] [-4, -6] [-10]
[-6] [1, -1] [0]
[1] [8, -7] [1]
[-8] [-1, -4] [-5]
[-7] [0, -2] [-2]
[-6] [1, -2] [-1]
[-1] [6, -9] [-3]
[-5] [2, -6] [-4]
[-1] [6, -7] [-1]
[-2] [5, -5] [0]
[-2] [5, 3] [8]
[-9] [-2, -4] [-6]
[-4] [3, -6] [-3]
[0] [7, 5] [12]
[0] [7, -2] [5]
[-3] [4, -7] [-3]
[-8] [-1, -7] [-8]
[-1] [6, -8] [-2]
[1] [8, 4] [12]
[-1] [6, 3] [9]
[-7] [0, -1] [-1]
[0] [7, -3] [4]
[-10] [-3, -6] [-9]
[-5] [2, -8] [-6]
[-3] [4, 0] [4]
[-3] [4, -5] [-1]
print(read(1);-7);  =  -192
AVG fitness:  -441
Nr of point mutations:  91
Nr of subtree mutations:  33

Generation 4  ------------------------
Epochs without improvement: 3

Best fitness: 0  best indiv:
[-2] [7, -9] [-2]
[-13] [-4, -9] [-13]
[2] [5, -3] [2]
[-3] [1, -4] [-3]
[-1] [8, -9] [-1]
[10] [7, 3] [10]
[1] [4, -3] [1]
[2] [7, -5] [2]
[13] [8, 5] [13]
[-2] [1, -3] [-2]
[-1] [2, -3] [-1]
[-5] [2, -7] [-5]
[3] [7, -4] [3]
[-4] [3, -7] [-4]
[-4] [0, -4] [-4]
[3] [2, 1] [3]
[-5] [-2, -3] [-5]
[5] [8, -3] [5]
[-1] [5, -6] [-1]
[10] [8, 2] [10]
[-8] [1, -9] [-8]
[5] [3, 2] [5]
[-2] [5, -7] [-2]
[-8] [0, -8] [-8]
[-10] [-4, -6] [-10]
[0] [1, -1] [0]
[1] [8, -7] [1]
[-5] [-1, -4] [-5]
[-2] [0, -2] [-2]
[-1] [1, -2] [-1]
[-3] [6, -9] [-3]
[-4] [2, -6] [-4]
[-1] [6, -7] [-1]
[0] [5, -5] [0]
[8] [5, 3] [8]
[-6] [-2, -4] [-6]
[-3] [3, -6] [-3]
[12] [7, 5] [12]
[5] [7, -2] [5]
[-3] [4, -7] [-3]
[-8] [-1, -7] [-8]
[-2] [6, -8] [-2]
[12] [8, 4] [12]
[9] [6, 3] [9]
[-1] [0, -1] [-1]
[4] [7, -3] [4]
[-9] [-3, -6] [-9]
[-6] [2, -8] [-6]
[4] [4, 0] [4]
[-1] [4, -5] [-1]
print(read(1);+read(2););  =  0
AVG fitness:  -1485
Nr of point mutations:  68
Nr of subtree mutations:  31

Generation 5  ------------------------
Epochs without improvement: 0
Solution found in generation 5