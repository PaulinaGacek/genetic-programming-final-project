Inputs:  [[1], [2], [3], [4], [5], [6], [8], [9], [10], [11], [15], [100]]
Outputs:  [[789], [789], [789], [789], [789], [789], [789], [789], [789], [789], [789], [789]]
Max initial depth:  5
Population size:  100
Crossover rate:  0.9   Mutation rate:  0.4
Random population generated
Generation 0  ------------------------
Epochs without improvement: 0

Best fitness: -6732  best indiv:
[228] [1] [789]
[228] [2] [789]
[228] [3] [789]
[228] [4] [789]
[228] [5] [789]
[228] [6] [789]
[228] [8] [789]
[228] [9] [789]
[228] [10] [789]
[228] [11] [789]
[228] [15] [789]
[228] [100] [789]
print(79*78/27);IF((77!=82)AND(((82!=72)AND(X1!=X1))AND(70!=29)))LOOP((57!=29)OR(X1==6))IF(X1==X1)X1=56;;;;  =  -6732
Generation 1  ------------------------
Epochs without improvement: 0

Best fitness: -6732  best indiv:
[228] [1] [789]
[228] [2] [789]
[228] [3] [789]
[228] [4] [789]
[228] [5] [789]
[228] [6] [789]
[228] [8] [789]
[228] [9] [789]
[228] [10] [789]
[228] [11] [789]
[228] [15] [789]
[228] [100] [789]
print(79*78/27);  =  -6732
Generation 2  ------------------------
Epochs without improvement: 1

Best fitness: -6732  best indiv:
[228] [1] [789]
[228] [2] [789]
[228] [3] [789]
[228] [4] [789]
[228] [5] [789]
[228] [6] [789]
[228] [8] [789]
[228] [9] [789]
[228] [10] [789]
[228] [11] [789]
[228] [15] [789]
[228] [100] [789]
print(79*78/27);  =  -6732
Generation 3  ------------------------
Epochs without improvement: 2

Best fitness: -6732  best indiv:
[228] [1] [789]
[228] [2] [789]
[228] [3] [789]
[228] [4] [789]
[228] [5] [789]
[228] [6] [789]
[228] [8] [789]
[228] [9] [789]
[228] [10] [789]
[228] [11] [789]
[228] [15] [789]
[228] [100] [789]
print(79*78/27);IF((77!=82)AND(((82!=72)AND(X1!=X1))AND(70!=29)))LOOP((X1-92==86)OR(72*X1>26))IF(X1==X1)X2=X2;X2=68;LOOP((34!=X2)AND(90!=X2))LOOP(X4==88)X2=90;;;LOOP((4>80)OR(X1>X2))IF(73!=X10)X2=96;;;X2=53;;;;  =  -6732
Generation 4  ------------------------
Epochs without improvement: 3

Best fitness: -6732  best indiv:
[228] [1] [789]
[228] [2] [789]
[228] [3] [789]
[228] [4] [789]
[228] [5] [789]
[228] [6] [789]
[228] [8] [789]
[228] [9] [789]
[228] [10] [789]
[228] [11] [789]
[228] [15] [789]
[228] [100] [789]
print(79*78/27);IF((77!=82)AND(((82!=72)AND(X1!=X1))AND(70!=29)))LOOP((57!=29)OR(X1==6))IF(X1==X1)X2=X2;X2=68;LOOP((34!=X2)AND(X2==X1))LOOP(X4==88)X2=90;;;LOOP((4>80)OR(X1>X2))IF(73!=X10)X2=96;;;X2=53;;;;  =  -6732
Generation 5  ------------------------
Epochs without improvement: 4

Best fitness: -6732  best indiv:
[228] [1] [789]
[228] [2] [789]
[228] [3] [789]
[228] [4] [789]
[228] [5] [789]
[228] [6] [789]
[228] [8] [789]
[228] [9] [789]
[228] [10] [789]
[228] [11] [789]
[228] [15] [789]
[228] [100] [789]
print(79*78/27);IF((X2!=82)AND(((82!=72)AND(X1!=X1))AND(70!=29)))LOOP((57!=29)OR(X1==6))IF(X1==X1)X1=56;;;;  =  -6732
45   generated again
Generation 6  ------------------------
Epochs without improvement: 0

Best fitness: -2832  best indiv:
[553] [1] [789]
[553] [2] [789]
[553] [3] [789]
[553] [4] [789]
[553] [5] [789]
[553] [6] [789]
[553] [8] [789]
[553] [9] [789]
[553] [10] [789]
[553] [11] [789]
[553] [15] [789]
[553] [100] [789]
print(79*7/X10);LOOP((77!=X2)AND(((82!=72)AND(X1<87))AND(70!=29)))IF((57!=29)OR(X1>6))IF(X9!=78)X2=X2;X2=68;LOOP((X5!=X2)AND(90!=X2))IF(X4==88)X2=10;;;IF((4>80)AND(X1>X2))IF(X4!=17)X2=96;;;X2=99;;;;  =  -2832
Generation 7  ------------------------
Epochs without improvement: 0

Best fitness: -2832  best indiv:
[553] [1] [789]
[553] [2] [789]
[553] [3] [789]
[553] [4] [789]
[553] [5] [789]
[553] [6] [789]
[553] [8] [789]
[553] [9] [789]
[553] [10] [789]
[553] [11] [789]
[553] [15] [789]
[553] [100] [789]
print(79*7/X10);LOOP((77!=X2)AND(((82!=72)AND(X1<87))AND(70!=29)))IF((57!=29)OR(X1>6))IF(X9!=78)X2=X2;X2=68;LOOP((X5!=X2)AND(90!=X2))IF(X4==88)X2=10;;;IF((4>80)AND(X1>X2))IF(X4!=17)X2=96;;;X2=99;;;;  =  -2832
Generation 8  ------------------------
Epochs without improvement: 1

Best fitness: -2832  best indiv:
[553] [1] [789]
[553] [2] [789]
[553] [3] [789]
[553] [4] [789]
[553] [5] [789]
[553] [6] [789]
[553] [8] [789]
[553] [9] [789]
[553] [10] [789]
[553] [11] [789]
[553] [15] [789]
[553] [100] [789]
print(79*7/X10);LOOP((77!=X2)AND(((82!=72)AND(X1<87))AND(70!=29)))IF((57!=29)OR(X1>6))IF(X9!=78)X2=X2;X2=68;LOOP((X5!=X2)AND(90!=X2))IF(X4==88)X2=10;;;IF((4>80)AND(X1>X2))IF(X4!=17)X2=96;;;X2=99;;;;  =  -2832
Generation 9  ------------------------
Epochs without improvement: 2

Best fitness: -2832  best indiv:
[553] [1] [789]
[553] [2] [789]
[553] [3] [789]
[553] [4] [789]
[553] [5] [789]
[553] [6] [789]
[553] [8] [789]
[553] [9] [789]
[553] [10] [789]
[553] [11] [789]
[553] [15] [789]
[553] [100] [789]
print(79*7/X10);LOOP((77!=X2)AND(((82!=72)AND(X1<87))AND(70!=29)))IF((57!=29)OR(X1>6))IF(X9!=78)X2=X2;X2=68;LOOP((X5!=X2)AND(90!=X2))IF(X4==88)X2=10;;;IF((4>80)AND(X1>X2))IF(X4!=17)X2=96;;;X2=99;;;;  =  -2832
Generation 10  ------------------------
Epochs without improvement: 3

Best fitness: -2832  best indiv:
[553] [1] [789]
[553] [2] [789]
[553] [3] [789]
[553] [4] [789]
[553] [5] [789]
[553] [6] [789]
[553] [8] [789]
[553] [9] [789]
[553] [10] [789]
[553] [11] [789]
[553] [15] [789]
[553] [100] [789]
print(79*7/X10);LOOP((77!=X2)AND(((82!=72)AND(X1<87))AND(70!=29)))IF((57!=29)OR(X1>6))IF(X9!=78)X2=X2;X2=68;LOOP((X5!=X2)AND(90!=X2))IF(X4==88)X2=10;;;IF((4>80)AND(X1>X2))IF(X4!=17)X2=96;;;X2=99;;;;  =  -2832
Generation 11  ------------------------
Epochs without improvement: 4

Best fitness: -2832  best indiv:
[553] [1] [789]
[553] [2] [789]
[553] [3] [789]
[553] [4] [789]
[553] [5] [789]
[553] [6] [789]
[553] [8] [789]
[553] [9] [789]
[553] [10] [789]
[553] [11] [789]
[553] [15] [789]
[553] [100] [789]
print(79*7/X10);LOOP((77!=X2)AND(((82!=72)AND(X1<87))AND(70!=29)))IF((57!=29)OR(X1>6))IF(X9!=78)X2=X2;X2=68;LOOP((X5!=X2)AND(90!=X2))IF(X4==88)X2=10;;;IF((4>80)AND(X1>X2))IF(X4!=17)X2=96;;;X2=99;;;;  =  -2832
50   generated again
Generation 12  ------------------------
Epochs without improvement: 0

Best fitness: -2832  best indiv:
[553] [1] [789]
[553] [2] [789]
[553] [3] [789]
[553] [4] [789]
[553] [5] [789]
[553] [6] [789]
[553] [8] [789]
[553] [9] [789]
[553] [10] [789]
[553] [11] [789]
[553] [15] [789]
[553] [100] [789]
print(79*7/X10);LOOP((77!=X2)AND(((X1!=92)AND(X1<87))AND(70!=29)))IF((57!=29)OR(X1>6))IF(X9!=78)X2=X2;X2=68;LOOP((X5!=X2)AND(79*7/X10!=X2))IF(X4==88)IF(X1<X4)X2=45;;;;IF((4>68)AND(X1>X2))IF(X4!=17)X2=96;;;X2=99;;;;  =  -2832
Generation 13  ------------------------
Epochs without improvement: 1

Best fitness: -2832  best indiv:
[553] [1] [789]
[553] [2] [789]
[553] [3] [789]
[553] [4] [789]
[553] [5] [789]
[553] [6] [789]
[553] [8] [789]
[553] [9] [789]
[553] [10] [789]
[553] [11] [789]
[553] [15] [789]
[553] [100] [789]
print(79*7/X10);LOOP(((82!=72)AND(X1<87))AND(70!=29))IF((57!=29)OR(X1>6))IF(X9!=78)X2=X2;X2=68;LOOP((X5!=X2)AND(90!=X2))IF(X4==X3)X2=10;;;IF((4>80)AND(X1>X2))IF(X4!=17)X3=96;;;X2=99;;;;  =  -2832
Generation 14  ------------------------
Epochs without improvement: 2

Best fitness: -1884  best indiv:
[632] [1] [789]
[632] [2] [789]
[632] [3] [789]
[632] [4] [789]
[632] [5] [789]
[632] [6] [789]
[632] [8] [789]
[632] [9] [789]
[632] [10] [789]
[632] [11] [789]
[632] [15] [789]
[632] [100] [789]
print(79*8/X6);IF((77<89)OR(((29>72)AND(X1<X4))AND(X6<0)))IF((7<X2)OR(X1>6))IF(X10!=89)X2=X2;X2=68;LOOP((X1>2)AND(X9>X2))IF(X5<88)X2=10;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X1;;;X2=99;;;;  =  -1884
Generation 15  ------------------------
Epochs without improvement: 0

Best fitness: -1884  best indiv:
[632] [1] [789]
[632] [2] [789]
[632] [3] [789]
[632] [4] [789]
[632] [5] [789]
[632] [6] [789]
[632] [8] [789]
[632] [9] [789]
[632] [10] [789]
[632] [11] [789]
[632] [15] [789]
[632] [100] [789]
print(79*8/X6);IF((77<89)OR(((29>72)AND(X1<X4))AND(X6<0)))IF((7<X2)OR(X1>6))IF(X10!=89)X2=X2;X2=68;LOOP((X1>2)AND(X9>X2))IF(X5<88)X2=10;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X1;;;X2=99;;;;  =  -1884
Generation 16  ------------------------
Epochs without improvement: 1

Best fitness: -1884  best indiv:
[632] [1] [789]
[632] [2] [789]
[632] [3] [789]
[632] [4] [789]
[632] [5] [789]
[632] [6] [789]
[632] [8] [789]
[632] [9] [789]
[632] [10] [789]
[632] [11] [789]
[632] [15] [789]
[632] [100] [789]
print(79*8/X6);IF((77<89)OR(((29>72)AND(X1<X4))AND(X6<0)))IF((7<X2)OR(X1>6))IF(X10!=89)X2=X2;X2=68;LOOP((X1>2)AND(X9>X2))IF(X5<88)X2=10;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X2;;;X2=99;;;;  =  -1884
Generation 17  ------------------------
Epochs without improvement: 2

Best fitness: -1884  best indiv:
[632] [1] [789]
[632] [2] [789]
[632] [3] [789]
[632] [4] [789]
[632] [5] [789]
[632] [6] [789]
[632] [8] [789]
[632] [9] [789]
[632] [10] [789]
[632] [11] [789]
[632] [15] [789]
[632] [100] [789]
print(79*8/X6);IF((77<89)OR(((29>72)AND(X1<X4))AND(X6<0)))IF((7<X2)OR(X1>6))IF(X10!=89)X2=X2;X2=68;LOOP((X1>2)AND(X2>X2))IF(X5<88)X2=10;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X1;;;X2=99;;;;  =  -1884
Generation 18  ------------------------
Epochs without improvement: 3

Best fitness: -1884  best indiv:
[632] [1] [789]
[632] [2] [789]
[632] [3] [789]
[632] [4] [789]
[632] [5] [789]
[632] [6] [789]
[632] [8] [789]
[632] [9] [789]
[632] [10] [789]
[632] [11] [789]
[632] [15] [789]
[632] [100] [789]
print(79*8/X6);IF((77<89)OR(((29>72)AND(X1<X4))AND(X6<0)))IF((7<X2)OR(X1>6))IF(57!=29)X2=X2;X9=68;LOOP((X1>2)AND(X9>X2))IF(X5<88)IF((4>80)AND(X1>X2))IF(X9!=78)X2=96;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X1;;;X2=99;;;;  =  -1884
Generation 19  ------------------------
Epochs without improvement: 4

Best fitness: -1884  best indiv:
[632] [1] [789]
[632] [2] [789]
[632] [3] [789]
[632] [4] [789]
[632] [5] [789]
[632] [6] [789]
[632] [8] [789]
[632] [9] [789]
[632] [10] [789]
[632] [11] [789]
[632] [15] [789]
[632] [100] [789]
print(79*8/X6);IF((77<89)OR(((29>72)AND(X1<X4))AND(X6<0)))IF((7<X2)OR(X1>6))IF(57!=29)X2=X2;X9=68;LOOP((X1>2)AND(X9>X2))IF(X5<88)IF((4>80)AND(X1>X2))IF(X9!=78)X2=96;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X1;;;X2=99;;;;  =  -1884
55   generated again
Generation 20  ------------------------
Epochs without improvement: 0

Best fitness: -1884  best indiv:
[632] [1] [789]
[632] [2] [789]
[632] [3] [789]
[632] [4] [789]
[632] [5] [789]
[632] [6] [789]
[632] [8] [789]
[632] [9] [789]
[632] [10] [789]
[632] [11] [789]
[632] [15] [789]
[632] [100] [789]
print(79*8/X6);IF((77<89)OR(((29>72)AND(X1<X4))AND(X6<0)))IF((7<X2)OR(X1>6))IF(57!=29)X2=X2;X9=68;LOOP((X1>2)AND(4==28))IF(X5<88)X2=10;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X1;;;X2=99;;;;  =  -1884
Generation 21  ------------------------
Epochs without improvement: 1

Best fitness: -1884  best indiv:
[632] [1] [789]
[632] [2] [789]
[632] [3] [789]
[632] [4] [789]
[632] [5] [789]
[632] [6] [789]
[632] [8] [789]
[632] [9] [789]
[632] [10] [789]
[632] [11] [789]
[632] [15] [789]
[632] [100] [789]
print(79*8/X6);IF((77<89)OR(((29>72)AND(X1<X4))AND(X6<0)))IF((7<X2)OR(X1>6))IF(57!=29)X2=X2;X9=68;LOOP((X1>2)AND(4==28))IF(X5<88)X2=10;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X1;;;X2=99;;;;  =  -1884
Generation 22  ------------------------
Epochs without improvement: 2

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 23  ------------------------
Epochs without improvement: 0

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 24  ------------------------
Epochs without improvement: 1

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 25  ------------------------
Epochs without improvement: 2

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 26  ------------------------
Epochs without improvement: 3

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 27  ------------------------
Epochs without improvement: 4

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
60   generated again
Generation 28  ------------------------
Epochs without improvement: 0

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 29  ------------------------
Epochs without improvement: 1

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 30  ------------------------
Epochs without improvement: 2

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<X4))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>X2)OR(X1>67))LOOP(X1>6)X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X6;;;X2=99;;;;  =  -348
Generation 31  ------------------------
Epochs without improvement: 3

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X1)OR(((29>22)OR(X1<X4))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X2<12)AND(X4!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X1=input;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 32  ------------------------
Epochs without improvement: 4

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((77!=27)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
65   generated again
Generation 33  ------------------------
Epochs without improvement: 0

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)IF((7<X2)OR(55>6))IF(X5<X8)X2=X7;;;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=87;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=62;X2=68;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP(4==80)LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;  =  -348
Generation 34  ------------------------
Epochs without improvement: 1

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X4=X3;X10=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=X2;LOOP(7<X2)LOOP(44==X2)X2=X3;;;LOOP((4>38)OR(X1>X1))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF(X4!=17)X2=X5;;;X2=99;;;;  =  -348
Generation 35  ------------------------
Epochs without improvement: 2

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((77>22)OR(X1<57))AND(X3!=75)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=33))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((7<X7)AND(X10>4))IF(57!=5)X2=X3;X2=68;LOOP((X1<27)AND(X9>X2))IF(X5<37)X2=4;;;IF((4==80)OR(X1>X2))LOOP(X7<X2)X1=X5;;;X2=99;;;X2=99;;;;  =  -348
Generation 36  ------------------------
Epochs without improvement: 3

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((77>22)OR(X1<57))AND(X3!=75)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=33))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((7<X7)AND(X10>4))IF(57!=5)X2=X3;X2=68;LOOP((X1<27)AND(X9>X2))IF(X5<37)X2=4;;;IF((4==80)OR(X1>X2))LOOP(X7<X2)X1=X5;;;X2=99;;;X2=99;;;;  =  -348
Generation 37  ------------------------
Epochs without improvement: 4

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((77>22)OR(X1<57))AND(X3!=75)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=33))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((7<X7)AND(X10>4))IF(57!=5)X2=X3;X2=68;LOOP((X1<27)AND(X9>X2))IF(X5<37)X2=4;;;IF((4==80)OR(X1>X2))LOOP(X7<X2)X1=X5;;;X2=99;;;X2=99;;;;  =  -348
70   generated again
Generation 38  ------------------------
Epochs without improvement: 0

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((77>22)OR(X1<57))AND(X3!=75)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;LOOP((59!=64)OR(50!=33))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;IF((7<X7)AND(X10>4))IF(57!=5)X2=X3;X2=68;LOOP((X1<27)AND(X9>X2))IF(X5<37)X2=4;;;IF((4==80)OR(X1>X2))LOOP(X7<X2)X1=X5;;;X2=99;;;X2=99;;;;  =  -348
Generation 39  ------------------------
Epochs without improvement: 1

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((77>22)OR(X1<57))AND(X3!=75)))IF((7>X2)AND(X1>0))IF(X10!=X4)IF(X1/47>X1)print(X1);;;;;  =  -348
Generation 40  ------------------------
Epochs without improvement: 2

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X4);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=X2;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP((4>38)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X3))AND(70>64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF((31<76)AND(42<X1))X2=X5;;;X2=29;;;;  =  -348
Generation 41  ------------------------
Epochs without improvement: 3

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X10>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(((X1>99)OR(8<X1))AND(X10!=X2))X2=X3;X2=68;LOOP((X5<12)AND(X1!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))X9=76;;;;IF((4>38)OR(X1>67))IF(X4!=17)X2=68;;;X2=99;;;;  =  -348
Generation 42  ------------------------
Epochs without improvement: 4

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);LOOP((X6!=66)AND(((29>X7)OR(X9<6))OR(X9>75)))IF((7>X2)AND(X1!=12))IF(17==X4)X2=34;X2=68;LOOP((X5==12)AND((X9==X7)OR(X2<X9)))LOOP(X7==88)LOOP((X4!=X8)OR(X5==45))IF(60==X2)X2=X5;X2=X2;IF(X9<X2)LOOP(44==96)X2=X8;;;IF((4>9)AND(43==67))LOOP((X6==X2)AND(((94==76)AND(45<X1))AND(70!=64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7<87))IF(X4!=58)X2=X5;;;X2=X9;;;;  =  -348
75   generated again
Generation 43  ------------------------
Epochs without improvement: 0

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);LOOP((X6!=66)AND(((29>X7)OR(X9<6))OR(X9>75)))IF((7>X2)AND(X1!=12))IF(17==X4)X2=34;X2=68;LOOP((X5==12)AND((X9==X7)OR(X2<X9)))LOOP(X7==88)LOOP((X4!=X8)OR(X5==45))IF(60==X2)X2=X5;X2=X2;IF(X9<X2)LOOP(44==96)X2=X8;;;IF((4>9)AND(43==67))LOOP((X6==X2)AND(((94==76)AND(45<X1))AND(70!=64)))X2=51;;;X2=17;;;;;IF((4==80)AND(X7<87))IF(X4!=58)X2=X5;;;X2=X9;;;;  =  -348
Generation 44  ------------------------
Epochs without improvement: 1

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF(X9>X4)IF((7>X2)AND(X1>0))X2=68;;;  =  -348
Generation 45  ------------------------
Epochs without improvement: 2

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X4);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF((7>X2)AND(X1>0))IF(X10!=X4)X2=X3;X2=68;LOOP((X5<12)AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=X2;LOOP((59!=64)OR(50!=72))LOOP(44==X3)X2=X3;;;LOOP(X1!=X10)LOOP((X6<X2)AND(X1>0))X2=51;;;X2=17;;;;;IF((4==80)AND(X7>X2))IF((31<76)AND(42<X1))X2=X5;;;X2=99;;;;  =  -348
Generation 46  ------------------------
Epochs without improvement: 3

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 47  ------------------------
Epochs without improvement: 4

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
80   generated again
Generation 48  ------------------------
Epochs without improvement: 0

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 49  ------------------------
Epochs without improvement: 1

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 50  ------------------------
Epochs without improvement: 2

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 51  ------------------------
Epochs without improvement: 3

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 52  ------------------------
Epochs without improvement: 4

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
85   generated again
Generation 53  ------------------------
Epochs without improvement: 0

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 54  ------------------------
Epochs without improvement: 1

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 55  ------------------------
Epochs without improvement: 2

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X2=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X3=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 56  ------------------------
Epochs without improvement: 3

Best fitness: -348  best indiv:
[760] [1] [789]
[760] [2] [789]
[760] [3] [789]
[760] [4] [789]
[760] [5] [789]
[760] [6] [789]
[760] [8] [789]
[760] [9] [789]
[760] [10] [789]
[760] [11] [789]
[760] [15] [789]
[760] [100] [789]
print(8*95/X6);IF((X9>X2)OR(((29>22)OR(X1<57))AND(X3!=0)))IF(((X3<22)AND(77>70))AND(X7==29))IF(X10!=X4)X2=X3;X2=68;LOOP((((79>X2)OR((56>16)AND(X2==X1)))OR(X1==47))AND(X7!=X2))IF(X10==88)LOOP((X4!=X10)OR(X5==45))IF(60==X7)X7=62;X2=68;IF(X1==10)IF(X1<88)X1=15;;;IF((X7!=X1)AND(X1<95))LOOP(7>97)X2=49;;;IF(17==X1)IF(89!=41)X6=35;;;print(8);LOOP((4>X2)OR(X1>67))LOOP((X6<X2)AND(((31<76)AND(42<X1))AND(70>64)))X2=51;;;X2=17;;;;;X2=68;X2=99;;;;  =  -348
Generation 57  ------------------------
Epochs without improvement: 4

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))IF(X7<X7)IF(7>X3)X1=76;;;X1=X1/18;print(X2*X1);;  =  -276
Generation 58  ------------------------
Epochs without improvement: 0

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))IF(X7<X7)IF(7>X3)X1=76;;;X1=X1/18;print(X2*X1);;  =  -276
Generation 59  ------------------------
Epochs without improvement: 1

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))IF(X7<X7)IF(7>X3)X1=76;;;X1=X1/18;print(X2*X1);;  =  -276
Generation 60  ------------------------
Epochs without improvement: 2

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X1<46)OR(X6>X2))AND(X2!=X10)))IF(X7<X7)IF(7>X3)X1=76;;;X1=X1/18;print(X2*X1);;  =  -276
Generation 61  ------------------------
Epochs without improvement: 3

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)AND(X6==X2))AND(X2!=X10)))IF(33==X7)IF(7>X3)X1=76;;;X1=X1/18;print(X10*X1);;  =  -276
Generation 62  ------------------------
Epochs without improvement: 4

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((98!=X3)OR(X6>X2))AND(X2!=X10)))IF((7>X2)AND(X1>0))IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))X2=X5;X2=68;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X3))X9=76;;;;IF((X2<57)AND(X3!=74))IF(X4!=17)X2=68;;;X2=99;;;;  =  -276
90   generated again
Generation 63  ------------------------
Epochs without improvement: 0

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((98!=X3)OR(X6>X2))AND(X2!=X10)))IF((7>X2)AND(X1>0))IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))X2=X5;X2=68;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X3))X9=76;;;;IF((X2<57)AND(X3!=74))IF(X4!=17)X2=68;;;X2=99;;;;  =  -276
Generation 64  ------------------------
Epochs without improvement: 1

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))IF((41<X2)AND(X1!=24))X1=X5;IF(X4!=17)X2=68;;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X3))X9=76;;;;IF((X2<57)AND(X3!=0))IF(X4!=17)X2=68;;;X2=99;;X1=X1/18;print(X2*X1);;  =  -276
Generation 65  ------------------------
Epochs without improvement: 2

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))IF((41<X2)AND(X1!=24))X1=X5;IF(X4!=17)X2=68;;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X3))X9=76;;;;IF((X2<57)AND(X3!=0))IF(X4!=17)X2=68;;;X2=99;;X1=X1/18;print(X2*X1);;  =  -276
Generation 66  ------------------------
Epochs without improvement: 3

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))IF((41<X2)AND(X1!=24))X1=X5;IF(X4!=17)X2=68;;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X3))X9=76;;;;IF((X2<57)AND(X3!=0))IF(X4!=17)X2=68;;;X2=99;;X1=X1/18;print(X2*X1);;  =  -276
Generation 67  ------------------------
Epochs without improvement: 4

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X1))AND(X2!=X10)))IF((41<X2)AND(X1!=24))LOOP(((X1!=58)AND(X9>X2))OR(X10!=X2))IF((7>X2)AND(X1==0))IF(X10>X4)X2=X5;X2=68;IF(X1<X2)IF(X2>88)LOOP((X1>19)OR(X5==X5))X9=X4;;;;IF((X7>59)AND(84==8))LOOP(X4!=X7)X2=68;;;X1=13;;;;;X1=X3/18;print(X2*X1);;  =  -276
90   generated again
Generation 68  ------------------------
Epochs without improvement: 0

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X1))AND(X2!=X10)))IF((41<X2)AND(X1!=24))LOOP(((X1!=58)AND(X9>X2))OR(X10!=X2))IF((7>X2)AND(X1==0))IF(X10>X4)X2=X5;X2=68;IF(X1<X2)IF(X2>88)LOOP((X1>19)OR(X5==X5))X9=X4;;;;IF((X7>59)AND(84==8))LOOP(X4!=X7)X2=68;;;X1=13;;;;;X1=X3/18;print(X2*X1);;  =  -276
Generation 69  ------------------------
Epochs without improvement: 1

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X1))AND(X2!=X10)))IF((41<X2)AND(X1!=24))LOOP(((X1!=58)AND(X9>X2))OR(X10!=X2))IF((7>X2)AND(X1==0))IF(X10>X4)X2=X5;X2=68;IF(X1<X2)IF(X2>88)LOOP((X1>19)OR(X5==X5))X9=X4;;;;IF((X7>59)AND(84==8))LOOP(X4!=X7)X2=68;;;X1=13;;;;;X1=X3/18;print(X2*X1);;  =  -276
Generation 70  ------------------------
Epochs without improvement: 2

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X1))AND(X2!=X10)))IF((41<X2)AND(X1!=24))LOOP(((X1!=58)AND(X9>X2))OR(X10!=X2))IF((7>X2)AND(X1==0))IF(X10>X4)X2=X5;X2=68;IF(X1<X2)IF(X2>88)LOOP((X1>19)OR(X5==X5))X9=X4;;;;IF((X7>59)AND(84==8))LOOP(X4!=X7)X2=68;;;X1=13;;;;;X1=X3/18;print(X2*X1);;  =  -276
Generation 71  ------------------------
Epochs without improvement: 3

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))IF((41<X2)AND(X1!=24))X2=X5;IF(X4!=17)X2=68;;LOOP(X1!=X2)IF(X10==88)X1=X1*3*X1-X2;;;IF((X2<57)AND(X3!=0))IF(X4!=17)X2=X1;;;X2=99;;X1=X1/18;print(X2*X1);;  =  -276
Generation 72  ------------------------
Epochs without improvement: 4

Best fitness: -276  best indiv:
[812, 1, 1] [1] [789]
[812, 1, 1] [2] [789]
[812, 1, 1] [3] [789]
[812, 1, 1] [4] [789]
[812, 1, 1] [5] [789]
[812, 1, 1] [6] [789]
[812, 1, 1] [8] [789]
[812, 1, 1] [9] [789]
[812, 1, 1] [10] [789]
[812, 1, 1] [11] [789]
[812, 1, 1] [15] [789]
[812, 1, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))X2=X5;IF(X4!=94+X1/55)X2=68;;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X1))X9=76;;;;IF((X2<57)AND(X3!=0))IF(X4!=17)IF((37!=X3)OR(((98!=X3)OR(X6>X2))AND(X2!=X2)))IF(X7<X7)IF(7>X3)X1=76;;;X1=X1/18;print(X2*X1);;;;X1=X2/18;X3=X1/18;print(X2*X1);;  =  -276
90   generated again
Generation 73  ------------------------
Epochs without improvement: 0

Best fitness: -276  best indiv:
[812, 1, 1] [1] [789]
[812, 1, 1] [2] [789]
[812, 1, 1] [3] [789]
[812, 1, 1] [4] [789]
[812, 1, 1] [5] [789]
[812, 1, 1] [6] [789]
[812, 1, 1] [8] [789]
[812, 1, 1] [9] [789]
[812, 1, 1] [10] [789]
[812, 1, 1] [11] [789]
[812, 1, 1] [15] [789]
[812, 1, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))X2=X5;IF(X4!=94+X1/55)X2=68;;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X1))X9=76;;;;IF((X2<57)AND(X3!=0))IF(X4!=17)IF((37!=X3)OR(((98!=X3)OR(X6>X2))AND(X2!=X2)))IF(X7<X7)IF(7>X3)X1=76;;;X1=X1/18;print(X2*X1);;;;X1=X2/18;X3=X1/18;print(X2*X1);;  =  -276
Generation 74  ------------------------
Epochs without improvement: 1

Best fitness: -276  best indiv:
[812, 1, 1] [1] [789]
[812, 1, 1] [2] [789]
[812, 1, 1] [3] [789]
[812, 1, 1] [4] [789]
[812, 1, 1] [5] [789]
[812, 1, 1] [6] [789]
[812, 1, 1] [8] [789]
[812, 1, 1] [9] [789]
[812, 1, 1] [10] [789]
[812, 1, 1] [11] [789]
[812, 1, 1] [15] [789]
[812, 1, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))X2=X5;IF(X4!=94+X1/55)X2=68;;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X1))X9=76;;;;IF((X2<57)AND(X3!=0))IF(X4!=17)IF((37!=X3)OR(((98!=X3)OR(X6>X2))AND(X2!=X2)))IF(X7<X7)IF(7>X3)X1=76;;;X1=X1/18;print(X2*X1);;;;X1=X2/18;X3=X1/18;print(X2*X1);;  =  -276
Generation 75  ------------------------
Epochs without improvement: 2

Best fitness: -276  best indiv:
[812, 1, 1] [1] [789]
[812, 1, 1] [2] [789]
[812, 1, 1] [3] [789]
[812, 1, 1] [4] [789]
[812, 1, 1] [5] [789]
[812, 1, 1] [6] [789]
[812, 1, 1] [8] [789]
[812, 1, 1] [9] [789]
[812, 1, 1] [10] [789]
[812, 1, 1] [11] [789]
[812, 1, 1] [15] [789]
[812, 1, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(((X4<46)OR(X6>X2))AND(X2!=X10)))X2=X5;IF(X4!=94+X1/55)X2=68;;LOOP(X1!=X2)IF(X10==88)LOOP((X4!=X10)OR(X5==X1))X9=76;;;;IF((X2<57)AND(X3!=0))IF(X4!=17)IF((37!=X3)OR(((98!=X3)OR(X6>X2))AND(X2!=X2)))IF(X7<X7)IF(7>X3)X1=76;;;X1=X1/18;print(X2*X1);;;;X1=X2/18;X3=X1/18;print(X2*X1);;  =  -276
Generation 76  ------------------------
Epochs without improvement: 3

Best fitness: -276  best indiv:
[812, 87] [1] [789]
[812, 87] [2] [789]
[812, 87] [3] [789]
[812, 87] [4] [789]
[812, 87] [5] [789]
[812, 87] [6] [789]
[812, 87] [8] [789]
[812, 87] [9] [789]
[812, 87] [10] [789]
[812, 87] [11] [789]
[812, 87] [15] [789]
[812, 87] [100] [789]
print(29*28/X4);LOOP((37>X3)AND(((X4<46)OR(X5>X1))AND(2!=X10)))LOOP((X2<X2)OR(X1!=24))LOOP(((X10!=58)AND(X9>X1))OR(13!=X2))IF((7<X2)AND(X1==1))IF(X2>X4)X2=X3;X9=68;IF(X1<X6)LOOP(X2>88)LOOP((X1>19)OR(X5==X2))X9=X4;;;;IF((X7>59)AND(X1==8))IF(X4<X2)X2=X2;;;X1=13;;;;;X1=X5/18;print(87*X1);;  =  -276
Generation 77  ------------------------
Epochs without improvement: 4

Best fitness: -276  best indiv:
[812, 87] [1] [789]
[812, 87] [2] [789]
[812, 87] [3] [789]
[812, 87] [4] [789]
[812, 87] [5] [789]
[812, 87] [6] [789]
[812, 87] [8] [789]
[812, 87] [9] [789]
[812, 87] [10] [789]
[812, 87] [11] [789]
[812, 87] [15] [789]
[812, 87] [100] [789]
print(29*28/X4);LOOP((37>X3)AND(((X4<46)OR(X5>X1))AND(2!=X10)))LOOP((X2<X2)OR(X1!=24))LOOP(((X10!=58)AND(X9>X1))OR(13!=X2))IF((7<X2)AND(X1==1))IF(X2>X4)X2=X3;X9=68;IF(X1<X6)LOOP(X2>88)LOOP((X1>19)OR(X5==X2))X9=X4;;;;IF((X7>59)AND(X1==8))IF(X4<X2)X2=X2;;;X1=13;;;;;X1=X5/18;print(87*X1);;  =  -276
90   generated again
Generation 78  ------------------------
Epochs without improvement: 0

Best fitness: -276  best indiv:
[812, 87] [1] [789]
[812, 87] [2] [789]
[812, 87] [3] [789]
[812, 87] [4] [789]
[812, 87] [5] [789]
[812, 87] [6] [789]
[812, 87] [8] [789]
[812, 87] [9] [789]
[812, 87] [10] [789]
[812, 87] [11] [789]
[812, 87] [15] [789]
[812, 87] [100] [789]
print(29*28/X4);LOOP((37>X3)AND(((X4<46)OR(X5>X1))AND(2!=X10)))LOOP((X2<X2)OR(X1!=24))LOOP(((X10!=58)AND(X9>X1))OR(13!=X2))IF((7<X2)AND(X1==1))IF(X2>X4)X2=X3;X9=68;IF(X1<X6)LOOP(X2>88)LOOP((X1>19)OR(X5==X2))X9=X4;;;;IF((X7>59)AND(X1==8))IF(X4<X2)X2=X2;;;X1=13;;;;;X1=X5/18;print(87*X1);;  =  -276
Generation 79  ------------------------
Epochs without improvement: 1

Best fitness: -276  best indiv:
[812, 87] [1] [789]
[812, 87] [2] [789]
[812, 87] [3] [789]
[812, 87] [4] [789]
[812, 87] [5] [789]
[812, 87] [6] [789]
[812, 87] [8] [789]
[812, 87] [9] [789]
[812, 87] [10] [789]
[812, 87] [11] [789]
[812, 87] [15] [789]
[812, 87] [100] [789]
print(29*28/X4);LOOP((37>X3)AND(((X4<46)OR(X5>X1))AND(2!=X10)))LOOP((X2<X2)OR(X1!=24))LOOP(((X10!=58)AND(X9>X1))OR(13!=X2))IF((7<X2)AND(X1==1))IF(X2>X4)X2=X3;X9=68;IF(X1<X6)LOOP(X2>88)LOOP((X1>19)OR(X5==X2))X9=X4;;;;IF((X7>59)AND(X1==8))IF(X4<X2)X2=X2;;;X1=13;;;;;X1=X5/18;print(87*X1);;  =  -276
Generation 80  ------------------------
Epochs without improvement: 2

Best fitness: -276  best indiv:
[812, 87] [1] [789]
[812, 87] [2] [789]
[812, 87] [3] [789]
[812, 87] [4] [789]
[812, 87] [5] [789]
[812, 87] [6] [789]
[812, 87] [8] [789]
[812, 87] [9] [789]
[812, 87] [10] [789]
[812, 87] [11] [789]
[812, 87] [15] [789]
[812, 87] [100] [789]
print(29*28/X4);LOOP((37>X3)AND(((X4<46)OR(X5>X1))AND(2!=X10)))LOOP((X2<X2)OR(X1!=24))LOOP(((X10!=58)AND(X9>X1))OR(13!=X2))IF((7<X2)AND(X1==1))IF(X2>X4)X2=X3;X9=68;IF(X1<X6)LOOP(X2>88)LOOP((X1>19)OR(X5==X2))X9=X4;;;;IF((X7>59)AND(X1==8))IF(X4<X2)X2=X2;;;X1=13;;;;;X1=X5/18;print(87*X1);;  =  -276
Generation 81  ------------------------
Epochs without improvement: 3

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF(((95==X7)OR(X1!=47))AND((X1==8)AND(X1!=25)))IF((X6<97)AND(X5!=82))IF(((29<X10)AND(X9>33))OR(X10<53))print(X4);print(X6);print(54);;;X1=71/X8;print(X6*X1);;  =  -276
Generation 82  ------------------------
Epochs without improvement: 4

Best fitness: -276  best indiv:
[812, 3621] [1] [789]
[812, 3621] [2] [789]
[812, 3621] [3] [789]
[812, 3621] [4] [789]
[812, 3621] [5] [789]
[812, 3621] [6] [789]
[812, 3621] [8] [789]
[812, 3621] [9] [789]
[812, 3621] [10] [789]
[812, 3621] [11] [789]
[812, 3621] [15] [789]
[812, 3621] [100] [789]
print(29*28/X7);IF((58!=47)OR(X1==8))IF((X6<X2)AND(X1!=82))IF(((29!=72)AND(X9>33))OR(X6!=X2))print(67);print(49);print(54);;;X1=71/X7;print(51*X1);;  =  -276
90   generated again
Generation 83  ------------------------
Epochs without improvement: 0

Best fitness: -276  best indiv:
[812, 3621] [1] [789]
[812, 3621] [2] [789]
[812, 3621] [3] [789]
[812, 3621] [4] [789]
[812, 3621] [5] [789]
[812, 3621] [6] [789]
[812, 3621] [8] [789]
[812, 3621] [9] [789]
[812, 3621] [10] [789]
[812, 3621] [11] [789]
[812, 3621] [15] [789]
[812, 3621] [100] [789]
print(29*28/X7);IF((58!=47)OR(X1==8))IF((X6<X2)AND(X1!=82))IF(((29!=72)AND(X9>33))OR(X6!=X2))print(67);print(49);print(54);;;X1=71/X7;print(51*X1);;  =  -276
Generation 84  ------------------------
Epochs without improvement: 1

Best fitness: -276  best indiv:
[812, 3621] [1] [789]
[812, 3621] [2] [789]
[812, 3621] [3] [789]
[812, 3621] [4] [789]
[812, 3621] [5] [789]
[812, 3621] [6] [789]
[812, 3621] [8] [789]
[812, 3621] [9] [789]
[812, 3621] [10] [789]
[812, 3621] [11] [789]
[812, 3621] [15] [789]
[812, 3621] [100] [789]
print(29*28/X7);IF((64!=47)OR(((X4<46)AND(X1!=91))AND(X2!=13)))IF((X6<X2)AND(X3!=82))IF(X3!=X4)print(67);print(49);print(54);;;X1=71/X7;print(51*X1);;  =  -276
Generation 85  ------------------------
Epochs without improvement: 2

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X1);IF((X4!=X3)OR(X8!=56))IF((41<X2)OR(X1>24))X2=X8;IF(X2!=94+X1/X9)X2=X10;;LOOP(X1!=X2)IF(X10!=67)IF((X2!=X8)AND(X5>17))X9=88;;;;X1=X6;X1=X2/18;;X1=X1/18;print(X2*X1);;  =  -276
Generation 86  ------------------------
Epochs without improvement: 3

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((58!=47)OR(X1==8))IF((X6<X2)AND(X1!=82))IF(((29!=72)AND(X7>33))OR(X6!=X2))print(67);print(49);print(54);;;X1=71/X7;print(X5);;  =  -276
Generation 87  ------------------------
Epochs without improvement: 4

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((58!=47)AND(X6>X2))print(59);IF((65>58)AND(X2>60))X2=52;;X1=71/X7;print(51*X1);;  =  -276
90   generated again
Generation 88  ------------------------
Epochs without improvement: 0

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((58!=47)AND(X6>X2))print(59);IF((65>58)AND(X2>60))X2=52;;X1=71/X7;print(51*X1);;  =  -276
Generation 89  ------------------------
Epochs without improvement: 1

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((58!=47)AND(X6>X2))print(59);IF((65>58)AND(X2>60))X2=52;;X1=71/X7;print(51*X1);;  =  -276
Generation 90  ------------------------
Epochs without improvement: 2

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((58!=47)AND(X6>X2))print(59);IF((65>58)AND(X2>60))X2=52;;X1=71/X7;print(51*X1);;  =  -276
Generation 91  ------------------------
Epochs without improvement: 3

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((58!=47)AND(X6>X2))print(59);IF((65>58)AND(X2>60))X2=52;;X1=71/X7;print(51*X1);;  =  -276
Generation 92  ------------------------
Epochs without improvement: 4

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((58!=47)AND(X6>X2))print(59);IF((65>58)AND(X2>60))X2=52;;X1=71/X7;print(51*X1);;  =  -276
90   generated again
Generation 93  ------------------------
Epochs without improvement: 0

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((58!=47)AND(X6>X2))print(59);IF((65>58)AND(X2>60))X2=52;;X1=71/X7;print(51*X1);;  =  -276
Generation 94  ------------------------
Epochs without improvement: 1

Best fitness: -276  best indiv:
[812] [1] [789]
[812] [2] [789]
[812] [3] [789]
[812] [4] [789]
[812] [5] [789]
[812] [6] [789]
[812] [8] [789]
[812] [9] [789]
[812] [10] [789]
[812] [11] [789]
[812] [15] [789]
[812] [100] [789]
print(29*28/X7);IF((58!=47)AND(X6>X2))print(59);IF((65>58)AND(X2>60))X2=52;;X1=71/X7;print(51*X1);;  =  -276
Generation 95  ------------------------
Epochs without improvement: 2

Best fitness: -276  best indiv:
[812, 1] [1] [789]
[812, 1] [2] [789]
[812, 1] [3] [789]
[812, 1] [4] [789]
[812, 1] [5] [789]
[812, 1] [6] [789]
[812, 1] [8] [789]
[812, 1] [9] [789]
[812, 1] [10] [789]
[812, 1] [11] [789]
[812, 1] [15] [789]
[812, 1] [100] [789]
print(29*28/X7);IF((37!=X3)OR(X1!=56))IF((41<X2)AND(X1!=24))X1=input;IF(X2!=94+X1/55)X2=68;;LOOP(X1!=X3)IF(X10==88)LOOP(((29!=72)AND(X9>33))OR(X6!=X2))X9=76;;;;X1=X9;X1=X2/18;;X1=X1/18;print(X2*X1);;  =  -276
Generation 96  ------------------------
Epochs without improvement: 3

Best fitness: -72  best indiv:
[783] [1] [789]
[783] [2] [789]
[783] [3] [789]
[783] [4] [789]
[783] [5] [789]
[783] [6] [789]
[783] [8] [789]
[783] [9] [789]
[783] [10] [789]
[783] [11] [789]
[783] [15] [789]
[783] [100] [789]
print(29*27/X4);LOOP((37!=X4)AND(((85<28)OR(X5>X7))AND(X2!=X10)))LOOP((X2==X2)OR(X9<X6))IF(((X10!=74)AND(X9>X8))OR(54!=X2))IF((85<X2)AND(74!=88))LOOP(X2==89)X2=6;X9=X8;IF(X1<X6)IF(25>88)LOOP((44>19)OR(X5==X7))X9=41;;;;IF((X7>51)AND(X10==X9))LOOP(X7!=X2)X2=X1;;;X2=X2;;;;;X1=X5/X6;print(3*X1);;  =  -72
Generation 97  ------------------------
Epochs without improvement: 0

Best fitness: -60  best indiv:










[784, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87] [15] [789]
[784, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87] [100] [789]
print(28*28/X4);LOOP((37>X3)AND(((X4<46)OR(X5>X1))AND(2!=X10)))LOOP((X2<X2)OR(X9>33))LOOP(((X10!=58)AND(X9>X1))OR(54!=X2))IF((7<X2)AND(X1==1))IF(X2>X4)X2=X3;X9=68;IF(X1<X6)LOOP(((29!=72)AND(X9>33))OR(X6!=X2))X9=76;;;IF((X7>59)AND(X3==8))IF(X4<X2)X2=X1;;;X1=13;;;;;X1=X5/18;print(87*X1);;  =  -60
Generation 98  ------------------------
Epochs without improvement: 0

Best fitness: -60  best indiv:











[784, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87] [100] [789]
print(28*28/X4);LOOP((37>X3)AND(((X4<46)OR(X5>X1))AND(2!=X10)))LOOP((X2<X2)OR(X9>33))LOOP(((X10!=58)AND(X9>X1))OR(54!=X2))IF((7<X2)AND(X1==1))IF(X2>X4)X2=X3;X9=68;IF(X1<X6)LOOP(((29!=72)AND(X9>33))OR((X10!=58)AND(X9>X1)))X9=76;;;IF((X7>59)AND(X3==8))IF(X4<X2)X2=X1;;;X1=13;;;;;X1=X5/18;print(87*X1);;  =  -60
Generation 99  ------------------------
Epochs without improvement: 1

Best fitness: -60  best indiv:











[784, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87] [100] [789]
print(28*28/X4);LOOP((37>X3)AND(((X4<46)OR(X5>X1))AND(2!=X10)))LOOP((X2<X2)OR(X9>33))LOOP(((X10!=58)AND(X9>X1))OR(28!=X2))IF((7<X2)AND(X1==1))IF(X2>X4)X2=X3;X9=68;IF(X1<X6)LOOP(((29!=72)AND(X4>33))OR(X6!=X2))X9=76;;;IF((X7>59)AND(X3==8))IF(X4<X2)X2=X1;;;X1=13;;;;;X1=X5/18;print(87*X1);;  =  -60
