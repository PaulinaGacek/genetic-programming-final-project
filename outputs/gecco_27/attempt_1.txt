C:\Users\Pawel\PycharmProjects\genetic-programming-vol2\venv\Scripts\python.exe C:\Users\Pawel\PycharmProjects\genetic-programming-vol2\runGP.py
Inputs:  [[7, -3, -5], [9, -2, 1], [-4, -10, 6], [9, -10, 9], [-7, 4, -3], [-8, -9, 0], [7, 9, 1], [-8, -9, 8], [-10, -8, -1], [5, 1, -4], [2, -8, 8], [-10, 8, -8], [-4, -10, 5], [9, 3, 2], [-7, 0, -3], [5, -5, -4], [9, -5, 1], [2, 2, -3], [-2, -4, 2], [2, -10, -10], [1, -10, -4], [-2, 0, 2], [-4, -3, -1], [-8, 5, 1], [-6, -2, 4], [-7, 9, 3], [2, -5, -9], [-9, -2, -1], [-10, -2, -7], [-6, -9, -5], [0, -2, -2], [9, -5, 4], [0, -4, -2], [5, 4, 4], [-1, 9, -10], [-2, 0, 6], [-9, 6, 7], [4, 3, -2], [-5, 3, -4], [9, 7, -9], [-1, 8, -3], [-8, -6, -7], [2, -9, 8], [-6, 8, -8], [7, 3, 1], [4, 5, 6], [-9, 4, -1], [9, -5, -6], [0, 2, 1], [-7, 5, 9], [5, 1, 3], [2, -10, 9], [-10, 3, 1], [-6, -8, 7], [9, 8, 8], [9, 5, -3], [-9, -10, 3], [-3, 5, 0], [-7, 6, -9], [2, -3, -1], [5, -4, 4], [3, 8, -4], [4, 3, -7], [-9, -10, 5], [0, -10, -1], [1, -7, 4], [0, 2, 4], [-5, 9, -3], [7, -5, -8], [-1, 1, 3], [-2, -3, 7], [1, 9, -2], [0, -3, 8], [-5, -3, -1], [0, -5, 8], [2, 6, -8], [-2, 8, -5], [-2, -2, -10], [7, 6, -4], [5, -4, 0], [-9, 7, -6], [4, -4, -9], [-6, -6, -9], [4, 6, -9], [1, 1, 3], [-10, -3, 7], [7, -5, -5], [8, -2, -8], [3, -8, -5], [8, -2, -2], [-8, -4, -5], [-10, 1, 7], [-3, -2, -3], [7, -10, 5], [8, 9, 0], [4, -5, 2], [6, -3, 2], [-9, 7, 6], [-3, 8, 9], [-3, -9, 4], [141, -580, 348], [495, -4, 223], [825, -700, -622], [-720, -86, -290], [857, 597, -359], [-393, 210, -461], [-977, 117, 482], [-191, 506, -981], [-473, -305, 137], [534, -198, 847], [-713, -29, -748], [-977, -374, -854], [-166, 714, 460], [-858, -64, 546], [-536, -378, -392], [864, 457, -172], [-297, 360, 95], [-969, -685, -441], [939, 696, 174], [198, -70, 851], [-373, 991, -430], [765, 782, -97], [708, -235, -238], [794, 194, -897], [-826, -733, -604], [879, -338, 868], [309, 814, -14], [-169, -2, -980], [856, -239, -206], [362, 574, -417], [-225, -681, -945], [896, -86, 279], [-349, 777, 260], [-785, -945, 555], [643, -754, 644], [-640, 874, 551], [-322, 36, 140], [-746, 269, 514], [-442, -224, 779], [593, 950, -41], [-336, -818, 652], [850, 926, 594], [801, -787, 656], [-670, 682, 980], [-227, 617, -430], [-103, -793, 50], [412, 92, 298], [-967, -151, -405], [-113, -441, -297], [-49, 702, -147]]
Outputs:  [[-3], [1], [-4], [9], [-3], [-8], [7], [-8], [-8], [1], [2], [-8], [-4], [3], [-3], [-4], [1], [2], [-2], [-10], [-4], [0], [-3], [1], [-2], [3], [-5], [-2], [-7], [-6], [-2], [4], [-2], [4], [-1], [0], [6], [3], [-4], [7], [-1], [-7], [2], [-6], [3], [5], [-1], [-5], [1], [5], [3], [2], [1], [-6], [8], [5], [-9], [0], [-7], [-1], [4], [3], [3], [-9], [-1], [1], [2], [-3], [-5], [1], [-2], [1], [0], [-3], [0], [2], [-2], [-2], [6], [0], [-6], [-4], [-6], [4], [1], [-3], [-5], [-2], [-5], [-2], [-5], [1], [-3], [5], [8], [2], [2], [6], [8], [-3], [141], [223], [-622], [-290], [597], [-393], [117], [-191], [-305], [534], [-713], [-854], [460], [-64], [-392], [457], [95], [-685], [696], [198], [-373], [765], [-235], [194], [-733], [868], [309], [-169], [-206], [362], [-681], [279], [260], [-785], [643], [551], [36], [269], [-224], [593], [-336], [850], [656], [682], [-227], [-103], [298], [-405], [-297], [-49]]
0 :  X1=read(2);;LOOP(X1>X1)X1=7;print(68/X1);X1=54;;LOOP(X1!=41)IF(X2>62)X1=12;;IF(37<X1)X2=9;;;print(X1);print(X1*53*read(2););
1 :  print(62);print(65*42+92);
2 :  print(54+63);
3 :  IF(18-X1!=X1*18)LOOP(47!=22)X1=34;;print(X1*X1);X1=68;X1=91;;
4 :  print(X1);X1=read(2);;print(X1*74);
5 :  print(read(1);*X1*X1);print(78/66);
6 :  print(48);LOOP(X1==38)LOOP(X1==8)X2=23;;;LOOP((X1==X1)AND(95==X1))X2=22;print(X2+53);print(58);LOOP(33==X2)X1=20;;print(X1-X2);;print(X1*91/42);
7 :  IF(96==92)print(X2+X3);;LOOP(X1>40)IF(11>99)X3=21;;LOOP(X2==66)X1=42;;;print(42*read(2););X1=read(2);;print(99);
8 :  print(89);IF(37>6)IF(13==X2)X1=82;;print(86);print(89+88);print(X1-86);;X1=54;
9 :  print(read(1);*X1+25);IF(61/X1!=X1/X1)X3=93;LOOP(94==X2)X4=23;;print(X2+58);print(88);;print(49-29+X1*X2);
10 :  LOOP(X2!=9)IF(65==X1)X1=68;;;IF(X2*X1==X3+X3)print(87+X3);print(X2*10);;X1=read(2);;
11 :  print(31);
12 :  X1=X1;print(read(2);/19-X1);print(94);
13 :  print(87+X1+read(2););print(X1-X2*57);
14 :  LOOP(X1-X1<19+93)X1=84;;print(82);print(21+read(2););IF(X1-23==X1*9)print(72);print(84);;
15 :  LOOP(48*X1==X1)LOOP(X1!=X1)X2=92;;X1=30;LOOP(78<85)X1=81;;IF(X3!=23)X1=36;;;LOOP(X1+X1==96)LOOP(X3==X3)X2=24;;print(42*77);;IF(47==X1)IF(41!=X2)X3=92;;print(8);LOOP(X4<X4)X2=6;;print(86+X4);;X1=75;IF(X1!=X1)LOOP(31<X1)X3=26;;LOOP(4<0)X1=32;;;
16 :  print(X1);print(4);IF(X1/X2>3*X1)X2=14;print(71*65);print(64/52);IF(24>X2)X1=61;;LOOP(0==X1)X1=66;;;X1=read(1);;X1=X1;
17 :  IF(65!=X1)LOOP(X2!=X2)X2=33;;;LOOP(X1>59)IF(98==11)X1=24;;print(0-62);;X1=read(2);/X2+X2;LOOP((25>52)OR(X1>X2))print(X2);print(X1*X1);print(92);IF(32!=45)X2=88;;;
18 :  LOOP(7-79==X1-79)print(46*X1);;
19 :  IF(X1-4==X1)LOOP(11<31)X1=36;;LOOP(90>42)X1=28;;;print(40);
20 :  print(read(1);/read(2););LOOP(X2-64<X1)print(X3+X3);;print(14/X1);IF(48/X1==19/X3)LOOP(67<32)X2=94;;LOOP(X2>X2)X4=14;;LOOP(X5==X3)X4=78;;LOOP(66<X2)X6=53;;print(73*X6);;
21 :  X1=read(1);;print(X2);print(39-X1/27);X3=40;
22 :  print(66);print(76/X1/70);IF(74*X1!=68+68)LOOP(X1!=X1)X1=85;;X1=86;LOOP(X1!=4)X1=63;;X1=73;LOOP(X2!=44)X2=94;;;IF((30<83)OR(X1>X1))print(43+14);;
23 :  print(55);IF(X1-32<X1+X1)IF(X1==X1)X1=91;;LOOP(X1>X1)X2=1;;print(X1+X1);print(70);IF(X1==X1)X3=71;;;
24 :  LOOP(89!=4)print(X1+84);IF(X2==2)X1=38;;;print(X1);
25 :  print(79*46);
26 :  LOOP(X2<X1)X1=12;print(X1*X2);print(X1*X1);;print(X1-X1+16);X1=read(2);+X2*5;print(X2*16);
27 :  print(96-read(2););LOOP(X1==X1)LOOP(X1>4)X1=55;;;print(59);
28 :  LOOP(X2-62!=X1)LOOP(2<72)X2=40;;print(X1/91);;
29 :  LOOP(59-X1<X1-41)print(X1*35);print(X1/0);;
30 :  X1=read(1);;
31 :  print(read(1);/read(1););LOOP(35-15==X1)print(65/X1);LOOP(X1>X1)X1=20;;IF(10==82)X1=44;;;IF(X1/58==73)print(X1+X1);;print(X1/46);IF(X1==X1)print(76);LOOP(19<X1)X1=52;;;
32 :  IF(71==45)print(X1*X1);X1=75;X1=9;IF(32==84)X1=45;;;print(60+read(2););print(55+read(2););print(100-X1);
33 :  print(read(2);+57/X1);LOOP(3-48==82)print(X3+8);print(34*25);X1=59;X2=38;;
34 :  print(54/X1-100);
35 :  print(X1/X1-read(1););IF(23-31<21*56)print(X1-X1);;
36 :  IF(X1+21>2)print(62-59);print(24-X1);;print(read(1);+read(1););LOOP((X1<X1)AND(44<87))print(75-15);LOOP(47!=X1)X1=33;;LOOP(X1<X1)X1=66;;X1=44;LOOP(X1<X1)X1=44;;;X1=93*27;print(X1);
37 :  print(56+X1);LOOP((49<X2)AND((97>X1)AND(X2<13)))LOOP(X1!=31)X3=27;;print(X2+X3);;X1=31;
38 :  LOOP((X1==X1)AND(80<53))LOOP(69>X1)X1=3;;IF(13<52)X1=96;;;print(X1);print(10-100+X1);IF(0*X1==X1/85)IF(X1==95)X1=63;;X1=79;;
39 :  IF(X2*68!=19+X2)print(X1/X3);print(57+71);print(39+X2);print(6/X1);;print(57);LOOP(X1<65)IF(X1>22)X1=23;;print(9+X1);print(58*X2);IF(57>X2)X2=5;;;LOOP((78<X3)AND(X3>68))print(39*12);print(33-X1);print(41-X2);;
40 :  print(30-51);X1=19;IF((87<X1)OR(X2>X1))print(17);IF(45==X2)X1=61;;print(27-X2);;LOOP((X1==X1)OR(X1!=X2))LOOP(38>X1)X1=68;;;IF(X2+24!=X1)LOOP(12!=11)X1=3;;print(X2*X1);;
41 :  LOOP(57==33)IF(20>X1)X2=41;;LOOP(50!=X2)X1=16;;LOOP(X1<75)X3=80;;print(X1-X2);;
42 :  LOOP(X1==33)print(75+37);LOOP(X1<95)X1=74;;;print(86+X1+read(1););print(2+27);print(26);
43 :  X1=read(2);;
44 :  LOOP((X1!=X1)AND(38<X1))print(40-X1);print(91);IF(5>X1)X1=99;;;print(89/X1);print(X1/40);print(X1);IF(46==X1)print(X1);IF(29<96)X1=70;;print(X1*X1);LOOP(25>X1)X2=98;;;
45 :  X1=read(2);;IF(58*X2!=X2/95)X1=51;;print(read(2);/X2+64);
46 :  LOOP((67==X2)OR(X1>X2))print(X2);;print(X1+62-read(1););print(47+X1);print(1);
47 :  print(X1/X1+X1);print(65);IF(38+X1==83*64)X1=22;print(X1+X1);;
48 :  LOOP((X1!=19)AND(X1>30))print(100-X1);;print(X1/X1/21);
49 :  print(25);
50 :  LOOP(51*16==12)X1=51;print(X1*2);print(28-77);;IF(X1==X1)LOOP(X1!=73)X1=73;;X1=38;print(X1/22);;print(read(1);-X1/20);
51 :  X1=46/88;print(42);
52 :  print(read(1);*X1);print(24*28);print(X1-32+read(2););
53 :  X1=71;X1=read(2);/X1-36;IF(58/29!=X1)LOOP(46!=40)X1=81;;print(99-86);print(X1/79);LOOP(84>31)X1=22;;;LOOP(X1>X1)print(24*X1);IF(X1>85)X1=73;;LOOP(43<X1)X2=7;;X1=3;;print(67*37/60);
54 :  IF(X1*X1!=64-48)print(76);print(X1);X1=59;X1=8;;LOOP(X1!=X1)print(X1*6);print(X1);IF(X1==X2)X1=85;;;X1=48;print(82);
55 :  LOOP(X1/X1>5-X1)LOOP(X1>72)X1=26;;X1=0;IF(54!=X1)X1=20;;IF(56!=X1)X1=23;;print(37);;IF(65-11==X1)print(X1*X1);;print(67*60);print(X1/77);LOOP(54==95)print(56+X1);LOOP(72!=X1)X1=89;;;
56 :  print(18);print(63+19);print(51-39-74);print(64);
57 :  print(read(1);*24/X1);print(3-25);IF(49==18)LOOP(86<X1)X1=51;;X1=32;IF(44>66)X1=24;;;print(60);
58 :  print(30);IF(80<85)print(X1+91);;print(X1);
59 :  X1=81;X1=68;
60 :  print(42);print(read(2);-read(1););print(14);X1=X1+X1*64;
61 :  print(7/X1);print(X1+86);
62 :  X1=78;LOOP(77*33==X1+18)IF(X1<60)X1=15;;LOOP(X1!=27)X1=96;;print(X2+79);;print(11-read(1););
63 :  print(X1*X1);
64 :  IF(X1<0)print(19+X1);LOOP(X1>79)X1=92;;;LOOP(90+53==X1-77)IF(72==29)X1=76;;;print(85-86);
65 :  X1=read(2);/read(1);;X1=read(1);;print(34+0);
66 :  LOOP(X1/X1!=95+X1)X1=1;;print(86*read(2););IF(42!=12)print(100-63);LOOP(X1!=30)X1=2;;print(85);;IF(61>X1)IF(92==26)X1=29;;print(X1-X1);IF(X1<X1)X1=40;;IF(22==18)X1=94;;;print(27-6);
67 :  print(70/read(2););print(X1*X1*read(2););IF(56==X1)LOOP(X1<64)X2=23;;X1=60;;
68 :  print(X1/58);
69 :  print(X1*84);X1=47/X1;print(X1*14);print(read(1);-read(1););print(38*X1);
70 :  print(X1-X1-13*X1);
71 :  print(99-65/7);LOOP(X1<8)IF(89!=X1)X1=69;;IF(X1==38)X1=24;;print(X1/X1);print(41+32);X1=26;;X1=X1-X1;
72 :  print(X1);X1=read(2);+read(1);;
73 :  print(X1/30/read(1););LOOP(43==X1)LOOP(X1!=22)X1=11;;;
74 :  IF(29!=90)X1=45;;print(X1);print(read(1);*read(2););LOOP(64-89==4)print(X1);print(34-X1);LOOP(59>17)X2=28;;print(X1);;
75 :  print(read(2);/56*X1);LOOP(24+X1==85*50)IF(90==77)X1=93;;;print(read(1);/read(1););
76 :  LOOP((X1>X1)OR(X1==X1))print(X1*X1);print(12);LOOP(65>29)X1=90;;print(63);;print(84+read(2););LOOP(62*13>93)print(X1+X1);X1=28;;
77 :  print(36);IF(X1+X1!=X1/X1)IF(X1!=X1)X1=80;;print(24);;print(read(1);/read(2););
78 :  print(X1-38*6);
79 :  print(X1-68*13);
80 :  print(X1/X1/read(1););print(read(1);+X1/X1);print(73/9/read(1););
81 :  LOOP(28*54!=32+75)print(14*X1);print(X2/X1);;LOOP(X1!=X1)print(4+X2);;
82 :  print(82+43);print(88);LOOP(71*39!=X1/61)print(X2-10);print(X3*88);;print(36/X1*3);LOOP((77>X1)AND(1<7))IF(78==17)X3=80;;;
83 :  print(15*18*read(2););print(76/40);LOOP(77>X1)X1=61;;print(26-31);
84 :  IF(97!=X1)X1=70;print(91);LOOP(6<92)X1=2;;IF(X1>27)X1=19;;X1=60;;
85 :  print(read(2);+read(2););print(54-X1/read(1););LOOP(X1+X1<99)print(X1*X1);LOOP(89==55)X1=93;;print(X1+X1);X1=75;;IF(X1+X1==X1*X1)print(X1);X1=40;LOOP(X1>X1)X1=3;;;X1=X1;
86 :  X1=X1;X1=57;LOOP(80<X1)print(96);print(X1+X1);;
87 :  LOOP(X1*X1>X1/X1)print(X1);IF(X1!=X1)X1=35;;;IF(X1!=18)print(X1-X1);;LOOP(X1<X1)X1=76;print(X1-X2);print(X1+X1);X1=56;;
88 :  print(7);IF(X1>30)print(X1-68);print(X1+51);;print(37);print(X1/21/3);X1=read(1);;
89 :  X1=30;LOOP(16==82)IF(X1!=51)X1=69;;;print(read(1);+99-37);print(X1+82);print(9+84+X1);
90 :  print(X1);
91 :  IF(83==49)print(X1);print(92/56);X1=89;print(X1*X1);;print(28);IF(X1<30)print(93+28);print(72/X1);IF(60<10)X1=30;;;LOOP(X1-41>44/X1)print(X1);print(X1+19);print(79);print(X1+X1);X1=30;;
92 :  IF(X1>85)print(61);print(57);print(X1/48);;print(26/43);
93 :  IF(X1+X1>95/67)LOOP(X1>X1)X1=76;;X1=93;print(X1/51);print(16-X1);;X1=16;print(48-X1/read(1););IF(X1+76==85+1)print(X1/X1);;print(2+42);
94 :  print(32+read(1););
95 :  print(98+67*54/87);print(X1+93);
96 :  print(32+X1+9);print(11);
97 :  print(read(1);*49*2);X1=read(1);;print(X1/X1);
98 :  print(X1);LOOP(X1!=60)print(17/X1);X3=16;;print(X2);LOOP(46<X1)print(X3*X1);print(61*X1);;LOOP(55*X3>X3*X2)IF(98!=63)X3=77;;print(X1*42);LOOP(X3>X3)X2=51;;;
99 :  X1=read(1);;IF(X1>75)print(X1*87);print(99-X1);print(X2*26);;
100 :  print(100*X2);print(X1);print(X2/5);
101 :  print(5-68);
102 :  print(22/X1);X1=44;
103 :  print(X1);
104 :  print(X1);X1=X1-X1*X1*29;print(X1);X1=41+80;
105 :  print(X1+X1-17*100);print(X1);
106 :  print(X1*X1);print(42-X1);LOOP(X1*81>76)IF(64<46)X1=8;;;
107 :  X1=92*read(1);;LOOP(56>57)LOOP(74!=18)X1=58;;print(60/17);print(40-X1);;print(X1);LOOP(X1>5)X1=19;LOOP(X1==X1)X1=43;;X1=85;LOOP(X1>X1)X1=31;;print(X1*25);;
108 :  print(X1);IF(X1*3<X1)print(X1+X1);IF(94!=41)X1=64;;;IF(75<X1)print(99+30);LOOP(83>24)X1=75;;;IF(X1<X1)print(98);print(X1-31);;
109 :  X1=read(1);*X1-78;
110 :  LOOP(X1-87>X1)print(X2/X1);LOOP(X2!=99)X1=15;;;print(81*read(1););
111 :  print(38+X2);LOOP((X1<X2)OR((15<43)AND(X4==100)))LOOP(X3>60)X5=21;;;X1=X2;IF(X3/X2>81/X3)print(X6/X2);;
112 :  X1=15/X1*60;print(47/43*49);
113 :  LOOP(61+80==88)LOOP(X1!=X1)X1=62;;;
114 :  print(49*29+read(1););
115 :  print(60-X1*read(1););
116 :  print(20);X1=X1/X1;print(read(1);*read(1););
117 :  print(17);LOOP(82>64)X1=91;print(X1-100);print(X1+X1);print(33);;
118 :  print(X1+83);
119 :  IF(X1-X1==95*75)print(X1);print(27+67);;
120 :  print(X2-X2*19);print(1*47);print(X1);IF(22!=X1)X2=22;LOOP(83==X3)X3=63;;print(96+9);print(86-66);;X1=1;
121 :  X1=read(1);;IF(70!=X1)print(1+X1);print(X1);IF(X1<87)X1=48;;;print(96+X1);IF(54!=54)print(X1*81);print(4*46);;print(45/read(2););
122 :  print(X1);X1=read(1);;IF(21-52<X1*71)X1=85;print(93+X1);LOOP(X1==X2)X1=29;;;
123 :  print(33);IF((9>X1)AND(42<77))LOOP(57<X1)X1=55;;;X1=read(1);;
124 :  LOOP(X1==X1)LOOP(35==X1)X1=93;;LOOP(X1>63)X1=100;;X1=57;;print(X1);
125 :  print(100*X1+X1);print(28-read(1););
126 :  IF(X1<X1)print(49);print(41/X1);;
127 :  LOOP(95/X1>X2-X2)X2=67;X1=52;LOOP(X2>X1)X1=35;;print(5-15);IF(X2!=X1)X3=37;;;LOOP(10/X2!=72+36)LOOP(87<X1)X1=63;;IF(1!=X3)X1=92;;;
128 :  X1=read(2);;print(X1/78);LOOP(X2+X3<X3/X2)X2=19;print(89/96);IF(76>77)X2=46;;X3=14;;print(38+X2);
129 :  print(X1*39/53);LOOP(31*X1>49)print(87+84);IF(35<X1)X1=33;;IF(84!=75)X1=98;;;print(X1+36*read(1););
130 :  IF((65<X1)OR(X1==67))X1=81;print(X1);;print(30);IF(66*X1<1-X1)LOOP(X2>X2)X1=73;;LOOP(62!=3)X1=16;;IF(9<8)X3=35;;X1=41;print(62/X1);;IF(52>11)print(X1);IF(X3==97)X2=82;;;
131 :  IF(X1-X2!=X1)print(52);;print(95*62*9);LOOP(92+79==X1)print(X2-61);print(X1/48);print(X3-X1);;
132 :  print(71*read(1););print(X1*80);print(76*98/X1);
133 :  X1=26;print(X1);
134 :  LOOP(20-X1!=X1+X1)print(X1*61);X1=23;;
135 :  print(read(2);+X1+21);print(read(2);+read(1););
136 :  IF(X1/29!=X1/X1)print(89);print(X1+75);X1=67;print(X1/53);print(53/77);;IF(X1*1!=X1/X1)X1=93;print(25+X1);print(X1*X1);;print(47);
137 :  LOOP(X1!=26)X2=72;;
138 :  X1=X1;print(44/read(2););X1=read(2);/X2*X2;
139 :  print(X1-X1+read(1););print(read(1);+X1/65);print(56*X1+94);print(25);print(X1-12*read(2););
140 :  LOOP(10!=21)IF(X1==X2)X2=14;;;print(X1*X1+69);IF(34==X1)print(X1*X1);LOOP(X2>X2)X2=50;;print(12);;LOOP(79-51<X1+87)IF(X3>86)X2=41;;X2=24;print(2);X1=49;print(27);;LOOP(X1/X2>X1)IF(X2!=X1)X3=28;;IF(37<89)X3=30;;X1=28;print(2*90);;
141 :  print(52/read(2););print(X1*82);IF(95==X1)print(85/X1);;
142 :  IF((26!=74)OR(18==43))print(53-X1);;
143 :  print(11*12);
144 :  LOOP(25*X1<27-X1)print(29);;X1=read(1);;
145 :  print(55);
146 :  IF(X1+X1!=39/X1)IF(5>X2)X1=88;;X1=14;;IF(X1<X1)IF(X1!=X2)X1=23;;LOOP(1!=44)X3=18;;print(X2);LOOP(68==8)X3=19;;;print(74);
147 :  print(X1-X2);print(X1);IF(X1>X2)X1=0;print(67);;
148 :  IF(56!=45)print(X1+3);;LOOP(69/X1==56+14)LOOP(79>X1)X1=48;;IF(0==X1)X2=98;;;print(X1-77-0/X1);X1=X1-X1+26;IF(X1*41!=X1/25)print(X1);print(81-68);print(21/X2);X1=97;LOOP(X2>10)X2=55;;;
149 :  print(78-X1+X1-X1);LOOP(X1<41)print(X1-38);;print(read(1);+read(1););LOOP(X1!=X1)IF(84!=X1)X1=7;;X1=13;;print(read(1);+26-X1);
150 :  LOOP(14*0<37+71)print(39);print(72+X2);print(X1-X2);IF(X1<7)X2=4;;print(84*28);;LOOP(37<X1)IF(X2>X1)X1=97;;print(13);print(X3-100);print(X1*X2);;X1=X1+35;print(X1-X1);
151 :  IF((66>X1)AND(X1>84))X1=86;print(X1*23);print(X1*X1);;X1=20;print(read(2);/read(2););
152 :  print(63+31-47);X1=72-X1*X1;print(81+30);print(X1/X1/74*82);
153 :  print(X1-17/X1);
154 :  IF(X1>47)LOOP(X1==50)X1=42;;LOOP(X1!=X1)X1=59;;print(19+13);;
155 :  LOOP(X2<X1)LOOP(X2==27)X1=37;;print(94*43);LOOP(X3>X4)X3=46;;;print(95);print(read(1);/X3-40);LOOP(75<68)print(X1);print(91*X4);;X1=X1+X2;
156 :  LOOP(X1!=X1)print(77-64);;IF(72*X1>85)print(X1-12);LOOP(X1<72)X2=17;;IF(X2==28)X2=19;;print(47/X2);LOOP(28!=84)X2=95;;;print(read(2);*X1-37);print(92);X1=read(1);;
157 :  LOOP(29<20)print(X1);X1=95;print(71+X1);print(X1/27);print(99+45);;
158 :  print(17);print(72+22);
159 :  print(11);print(89-read(1););print(33-67-read(1););LOOP(X1>19)print(23*X1);print(67/X1);IF(X1!=84)X1=73;;print(42);print(59);;
160 :  print(85/read(1););X1=88;X1=17;
161 :  X1=1;
162 :  LOOP(61!=X1)X1=30;;print(X1/69*read(1););print(X1+19+read(1););
163 :  LOOP((X1<40)AND(77>14))print(85*80);print(80-X2);print(20+X1);print(X3);;IF(30*93==X1-X2)print(17-81);print(30);LOOP(X3>47)X2=67;;print(10*X2);print(X2);;IF(X1<X1)print(83);X1=36;print(X3-27);print(X2);;
164 :  LOOP((X1<59)OR(94!=12))LOOP(82==X1)X1=54;;LOOP(X1>77)X1=55;;LOOP(31>2)X1=11;;print(X1-X2);print(X1);;print(36+X1/X1);
165 :  print(read(2);-read(1););print(10*X1+read(1););IF(33+X1!=18*X1)LOOP(29==94)X1=65;;IF(X1==3)X1=84;;print(X1+X1);IF(X1==X1)X1=40;;;
166 :  LOOP(27+X1>34-X1)print(56-X2);;print(100*read(1););print(68);
167 :  IF(X1/X1<X1)LOOP(X1>X1)X1=28;;print(X2/2);LOOP(X3>51)X3=100;;;
168 :  LOOP(X1*45<32)LOOP(X1==14)X1=66;;IF(X1!=X1)X1=84;;;
169 :  print(36);print(97*X1-54);
170 :  print(read(2);/69+1);print(64-55);print(57-71);LOOP(46<39)print(31-X1);;print(X1/X1*11);
171 :  print(45+read(1););IF(X1*67==78/31)print(20+X1);print(X1);LOOP(X1!=X2)X1=39;;LOOP(45!=X2)X2=41;;print(27);;X1=27;print(41);print(read(1);-99/X1);
172 :  IF(7!=X1)IF(X2>X1)X2=44;;;print(80-read(1););LOOP(X1!=X1)IF(20<X1)X3=95;;IF(X2==X2)X2=96;;X1=3;IF(X1==X3)X3=62;;print(X1*X1);;print(X1);IF(43!=X1)print(X3*X1);print(X1);;
173 :  print(12);
174 :  IF(X1!=X1)print(82/17);X1=28;;
175 :  print(42-read(1););print(100);
176 :  IF((96!=1)OR(X1==X1))IF(X1>98)X1=2;;X1=72;LOOP(X1!=83)X2=57;;print(10);;
177 :  LOOP(X1!=X1)print(X1/X1);print(41+X1);print(X1*40);print(X2/4);print(X2+X2);;LOOP(39<X1)IF(65<X2)X2=58;;X1=46;;print(3);print(100);LOOP(92<49)print(X2/X1);print(X1+50);;
178 :  LOOP((X1!=31)AND(70!=X1))print(76);LOOP(29!=X2)X2=54;;IF(X2>80)X1=45;;;
179 :  IF(22!=89)IF(4<X1)X1=48;;X1=24;;X1=read(2);-72-X1;X1=20/91;
180 :  IF(X1!=8)print(97);;print(X1-71*86-X1);IF(X1==84)X1=10;print(99*X1);X1=87;;print(X1-X1+X1*X1);
181 :  print(X1/58);print(99);print(9);
182 :  print(26*32);print(97);LOOP(6+34==99/X1)X2=95;;print(69*read(2););print(94+73+15);
183 :  LOOP(X2*36>X1)LOOP(6<43)X3=49;;print(67-10);;print(42/read(1););IF(X1<78)IF(X3==X1)X2=10;;;print(61);
184 :  LOOP((X1<11)OR((74<28)AND(X1==30)))LOOP(51==X1)X1=46;;;
185 :  IF(10>X1)print(70*87);IF(X2!=53)X2=11;;X2=40;;LOOP(39==X2)IF(X2>24)X2=80;;LOOP(X2!=63)X2=96;;print(32);LOOP(X2<X2)X1=36;;;print(X1);print(read(2);*65+96);
186 :  print(X1+12*32);print(X1);
187 :  print(72);IF(34/93==X1)print(X1+45);print(70);LOOP(X1==70)X1=69;;IF(73>X1)X1=71;;IF(X1>6)X1=76;;;
188 :  LOOP(X1*X1!=6+X2)X2=63;print(26*X2);IF(X2!=X2)X1=28;;print(10);;X1=read(2);;print(57+56/9);LOOP(25<X1)IF(50<X1)X1=42;;;X1=12+23+100;
189 :  LOOP(X1>X2)IF(52>X3)X2=97;;X1=87;print(X3-X2);IF(X3<X1)X1=73;;;
190 :  IF(X1/X1==42)X1=15;print(X1);print(25);;LOOP(X1/21!=X1/X1)X2=95;IF(53!=X1)X1=81;;IF(43!=20)X2=98;;LOOP(X3==X4)X4=71;;LOOP(71!=18)X3=7;;;LOOP(X1/X1>X1)IF(X4>X4)X4=88;;print(X4-X2);X2=54;;
191 :  print(31*X1/22);
192 :  IF(58+60<69+66)print(84);IF(83!=98)X1=32;;X1=64;print(X1);;IF((X1>X1)OR(87==73))print(59);X2=36;;print(X1);print(97-read(2););X2=67;
193 :  X1=51;print(83*X1/9);X1=32;X1=53;print(read(2);+67/X1);
194 :  print(read(1);*X1-50);LOOP((X1>45)AND(X2==4))IF(X3<17)X3=90;;print(X1);;
195 :  IF(X1+X1<98+78)IF(18!=X1)X1=82;;;print(read(2);-35*X1);
196 :  IF(X1+48<0)LOOP(5==X2)X2=27;;LOOP(89>X1)X3=91;;IF(66>X2)X4=30;;IF(50<24)X2=25;;print(X1+X4);;print(89*1);
197 :  print(30);
198 :  print(30*X1-X1);
199 :  X1=25;print(69+X1/98);LOOP(X1<0)X1=38;print(X1+X1);X1=66;LOOP(31==63)X1=80;;LOOP(X1<27)X1=71;;;IF(78*39==76)X1=46;;print(17);
200 :  print(98/90);X1=1/19*85;IF(70/24>X1+32)IF(X1==X1)X1=90;;LOOP(32==51)X1=30;;;print(12*X1/read(1););
201 :  print(X1);
202 :  IF(X1!=X2)LOOP(6>29)X3=62;;IF(10!=X1)X1=51;;print(87);;print(read(1);*read(1););IF(27==X1)LOOP(52==X3)X1=15;;;X1=read(2);;
203 :  LOOP(50-73!=72/66)X1=39;X1=34;print(18-4);;print(X1);X1=76;LOOP(4>X1)X1=25;;print(X1);
204 :  print(30*54);
205 :  print(X1*68/X1);LOOP(X1!=45)LOOP(X1==15)X1=68;;X1=18;IF(X1!=X1)X1=96;;print(X1-71);;X1=9+28;
206 :  IF(44/X2<75/X2)IF(47>X1)X1=46;;IF(79!=79)X2=53;;print(78-54);LOOP(X1==X2)X3=32;;print(28*X2);;LOOP((X2==92)OR(X2<29))print(X2/62);X1=48;print(X4-60);X2=48;IF(68!=X2)X3=22;;;IF(X1<35)X1=71;X1=32;print(81*96);IF(81!=X5)X3=22;;;print(86);
207 :  LOOP(X1/X2<X2-12)print(X1/X2);X1=73;;IF(X1+X2!=X2+14)print(44);LOOP(X1<X1)X2=53;;;X1=41;print(X1);IF(X1==84)LOOP(X1>67)X2=44;;;
208 :  X1=79/X1*49;X1=77-X1;LOOP((87>X1)OR(35>X1))print(X2*57);print(80-2);X1=67;;
209 :  X1=71;X1=49;
210 :  print(read(2);/X1+X1);print(23);
211 :  LOOP(41/X1>66)print(X1-36);X1=92;;print(72*read(2););
212 :  X1=78/read(2);;X1=55-X1*5;print(44/read(1););LOOP(23!=11)print(X1);;
213 :  print(X1/X1+88);X1=read(2);;X1=54;print(9*76/read(2););
214 :  X1=90;
215 :  X1=X1/read(2);;print(49);X1=read(1);;IF(X1>67)X2=15;X2=29;;print(73*X1/50-X1);
216 :  print(71/24);IF(98==X1)IF(35<X1)X1=66;;X1=79;LOOP(X1>X1)X1=13;;IF(X1>X1)X1=95;;print(18);;print(X1);print(read(1);*X1+X1);LOOP(46-79==21+7)X1=33;;
217 :  print(52-read(1););
218 :  print(X1);LOOP(94==79)X1=89;X1=59;X1=6;LOOP(41>X1)X1=37;;;print(X1/X1+41);
219 :  LOOP(X1*66>95-X2)LOOP(83>X2)X2=37;;print(53);;X1=X1;
220 :  print(read(2);-read(2););print(read(1);+X1);print(read(1);/read(2););print(X1+X2*X1);
221 :  print(read(2);*read(1););
222 :  print(87+50);
223 :  X1=99*X2;LOOP(((X1>73)OR(16!=X1))OR((X2<28)OR(99>25)))IF(X2==X1)X2=87;;LOOP(X1!=X1)X1=13;;IF(89<X1)X3=54;;print(43+X3);X1=69;;X1=9;
224 :  X1=61;LOOP(X1-X1==X1)LOOP(X1!=17)X2=67;;LOOP(X2>X3)X2=58;;;print(64*read(2););print(7);
225 :  print(X1);print(55);LOOP((X1>X1)OR(X1==94))LOOP(X1<39)X1=6;;print(X1-X1);print(X1-X1);IF(9>X1)X1=84;;;
226 :  print(X1);print(1-6);print(read(2);-read(1););
227 :  print(69*X1);IF(1==0)print(X1*X1);LOOP(12!=X1)X1=22;;print(X1-X2);IF(25==X1)X1=21;;;
228 :  print(read(2);*96+3);
229 :  print(read(2);/read(2););print(read(2);-96*35);X1=read(1);;
230 :  print(X1);IF(X1!=24)print(22+X2);;print(X1);print(6*31);
231 :  LOOP(X1-65==X1)print(X1);IF(20>X1)X1=46;;print(8-X1);LOOP(X1<X1)X1=76;;IF(38>69)X1=2;;;IF(75!=X1)print(88/X1);;LOOP(88>81)IF(85==66)X1=13;;print(70);X1=91;IF(X1==74)X1=33;;;
232 :  IF(72/X1<23*66)print(1*72);;IF((X1!=55)OR(41!=46))print(46*X1);LOOP(X1!=67)X1=10;;X1=61;print(X1-85);;
233 :  X1=X2+25;print(X1/65-read(2););print(read(1);*read(2););LOOP(X1!=79)print(X2-84);print(X1/49);;LOOP(4==97)X1=65;;
234 :  X1=99;print(X1+X1/X1*X1);
235 :  X1=99/read(2);;
236 :  print(0+X1);X1=read(2);;
237 :  print(47/73*X1);
238 :  print(read(1);+X1-X2);IF(X2/54!=X1+X1)IF(18==34)X1=98;;print(87*X2);X1=9;IF(79<X1)X2=8;;;
239 :  print(read(1);+read(2););print(32+98);X1=read(1);;print(42*X1*X1);
240 :  print(24);
241 :  IF(19+4<46)print(66/X2);print(68+13);;LOOP(X1<X1)LOOP(X1>X1)X1=35;;;IF(38>35)print(X1);;
242 :  print(X1+87+read(1););print(70-read(2););
243 :  IF(65/66>92)print(X1+X1);X1=23;;print(30*read(2););print(X1);print(X1+55);
244 :  LOOP(X1>6)IF(43>X1)X1=26;;IF(10==8)X1=11;;LOOP(35>43)X1=7;;;LOOP(78/52<X1-X1)X1=4;IF(X1<X1)X1=84;;;IF(X1*X1!=X1*X1)IF(20==X1)X1=43;;LOOP(X1==19)X1=35;;;
245 :  IF(29*X1>5)X1=74;LOOP(X1==X2)X2=97;;print(X2-97);X2=54;print(X2+X1);;print(X1-X2+X1-59);print(X2/34+read(1););
246 :  LOOP(X1==49)print(X1-69);print(X1-64);print(X1-X1);print(X1-64);IF(23>27)X1=21;;;print(16*99+X1);print(X1-read(2););
247 :  IF(X1!=X1)print(100);;
248 :  IF((80<53)OR((X2==58)OR(X2<16)))X2=84;;X1=X1;
249 :  X1=read(1);-X1;X1=96;
250 :  print(65/X2);LOOP(X1+58!=19-X1)print(X3);print(X3*X3);;X1=20;
251 :  LOOP(X1/16<X1)LOOP(X1==22)X1=57;;IF(X1>58)X1=60;;print(X1);;print(74/X1);
252 :  print(X1+62-read(1););IF(83+34!=79)IF(81>X1)X1=92;;print(0);LOOP(X1!=14)X1=40;;X1=38;X1=64;;IF(X1/2==41)LOOP(67==85)X1=46;;;print(X1-X1);X1=X1;
253 :  IF(X2+12<X1-X2)X3=29;;X1=63+read(1);;
254 :  print(X1/X1*read(1););X1=read(2);;print(X2/77-58);print(67);print(X1*70+X1*71);
255 :  print(87*X1*98);LOOP(54>X1)print(X1+X1);;
256 :  IF(X2==34)print(X3);IF(X2!=X2)X2=28;;LOOP(90!=88)X1=43;;;print(read(2);-39+X3);print(X2/68);print(X1);
257 :  LOOP(23-63>87+26)print(63);;
258 :  X1=15;print(read(1);/read(1););print(65*X1);
259 :  print(X1+X1/read(1););print(28);IF(42==35)print(74);X2=80;print(77);print(X3-X2);;print(read(2);*X1);LOOP(0<17)print(74);print(X1);print(81*X1);IF(X1==46)X3=0;;;
260 :  print(70*read(2););print(X1-X1/54);print(13);print(read(1);/X1+90);
261 :  X1=read(1);;print(read(1);*X2);
262 :  IF((X1==44)OR(X1<X2))print(X3-52);X3=40;;print(73-37);
263 :  LOOP(X1*X2<0)print(37);;IF(96>X1)X2=63;X1=0;print(X2);;X1=X2-25/read(2);;
264 :  print(87/60);print(42-X1*read(2););LOOP(X1-X1==78*18)LOOP(X1==X1)X1=74;;LOOP(X1==60)X1=65;;;print(38+read(1););
265 :  print(X1*20);print(X2*70);print(48+38-50);
266 :  X1=61*X1/X1;
267 :  IF(X1==4)LOOP(71!=27)X1=12;;LOOP(X2>15)X1=0;;LOOP(53<28)X2=92;;;IF(25==X2)LOOP(X2<X2)X2=56;;;print(58-24/X2);IF(X2*82!=24-44)print(47);print(57+0);print(X2+71);;
268 :  print(74*68);LOOP(X1!=15)print(84+28);print(X1+X1);X1=77;;
269 :  print(18/24);
270 :  IF(66/X1!=X1)print(X2-26);;IF(X1/X1!=77/54)LOOP(86==X1)X1=85;;print(96/80);LOOP(81==63)X1=48;;print(50+X2);;IF(X2*8==X1*2)print(24);X2=20;;LOOP(X2*13==7/X2)LOOP(4>24)X1=75;;X2=78;LOOP(X1!=32)X2=70;;;
271 :  print(X1+X1*66-X1);print(X1);print(100);
272 :  IF(X1>X1)IF(43==X1)X2=95;;;IF(21*X3!=7)print(34+54);print(X3);print(X1/X4);print(7/X1);;print(44*X1);IF(X1*15<X2)print(58*X4);print(50-79);IF(63!=X2)X2=45;;print(65);;
273 :  print(X2-X2-X1);
274 :  IF(X1*X1<35)LOOP(96<7)X1=18;;print(89/X1);LOOP(69!=X2)X2=42;;print(X1);LOOP(60!=45)X1=55;;;X1=read(1);;print(31);
275 :  LOOP(93/X1<X1)X1=23;print(70);;print(read(2);+12-X1);
276 :  print(24);print(41+14*24+85);IF(80-X2!=X2*X2)print(X2+X1);X1=5;IF(12>18)X1=87;;print(8);;X1=82;X2=read(2);;
277 :  print(2+X1);
278 :  print(X1*38*33/44);
279 :  print(read(2);+read(1););print(51);IF(X1>17)X1=4;X1=87;;print(50+10);print(97-read(1););
280 :  print(X1+X1/read(2););IF(64>X1)print(79-X1);print(X1);print(X1+X1);;
281 :  print(X1);LOOP(X1!=13)LOOP(X1>20)X1=72;;IF(X2!=X1)X1=73;;print(X1+18);;
282 :  X1=read(1);;print(X1*X1-read(1););
283 :  X1=91*64;print(read(2);/79+47);IF(((98>X1)OR(X1==69))AND(X1==93))X1=71;print(13);;
284 :  print(X1);print(89-X1/0);
285 :  print(X1);IF(26<4)X1=33;;print(38);print(90+X1+95/X1);
286 :  IF(X1<24)print(92+59);;
287 :  print(X1+30+96);IF((39<16)AND(50>38))print(20-94);print(X1-97);;
288 :  X1=X1*55-X1;
289 :  print(19);IF(X1>44)IF(X1>X1)X1=2;;print(X1/X1);print(53+X1);;
290 :  LOOP(57+3>75/93)print(X1+74);;LOOP(44==X1)print(X2*X1);print(62+X1);X1=97;X1=88;;IF((8>97)AND(X1>45))print(86/X1);LOOP(44!=X2)X1=28;;print(X2-41);;IF((13!=X1)AND(2>X1))IF(X1!=27)X2=9;;print(68/X1);;print(7*X1/53+X1);
291 :  LOOP(X1+X1==X1)print(X2+X1);print(X3-51);;print(1);print(97/read(2););IF(16<X1)IF(X1<X2)X3=95;;X1=62;print(X1-100);print(96-X2);;
292 :  print(4-read(1););print(X1);print(41-79/read(2););print(read(2);*read(2););IF(X1==2)X1=26;;
293 :  IF((68!=85)OR((23!=3)OR(X1==52)))X1=10;X1=35;print(39/67);print(75/89);print(97+16);;print(3);print(87-12);
294 :  X1=46;
295 :  LOOP(64-X1==33*X1)LOOP(X1>X1)X1=91;;print(23);print(20);X1=10;print(X1);;print(73);print(20*57-X1);
296 :  X1=81;
297 :  X1=read(1);-66-X1;IF(X1<83)LOOP(X1==X1)X1=86;;X1=30;;X1=read(2);;LOOP((92==X1)OR(X1!=X1))IF(X2==14)X2=11;;print(X1+2);;
298 :  print(read(1);*X1+X1);
299 :  print(26*read(1););LOOP(31*X1<61)X1=8;;LOOP(X1+X1>X1+X1)print(X2+97);;print(read(2);/read(1););print(X1-X1+X1*X1);
300 :  print(67*10);IF(60!=X1)LOOP(X1==X1)X2=89;;print(1);LOOP(X2>X2)X2=49;;X1=33;;IF(X1-X1<25)print(1+30);print(X2-X1);print(71-71);;
301 :  X1=X1+14/59;
302 :  print(52-90*89+56);X1=X1;
303 :  print(26);print(88/4);
304 :  LOOP(94<3)print(22-X2);;X1=86;print(61/read(1););
305 :  LOOP(7+50>X1*X1)print(42/90);print(53-X1);print(X2/X1);X2=9;LOOP(71==7)X2=8;;;X1=X1-X1/66;IF(X1*X1!=X1*X1)print(X2*X3);print(X2/22);;print(82+read(2););LOOP(0/X2==2)print(72*X1);LOOP(X3!=X2)X1=19;;LOOP(55>X2)X2=70;;print(X4*X2);LOOP(22>X5)X2=41;;;
306 :  print(81+73);print(X1-60*8);
307 :  print(28);
308 :  print(15+X1+X1);
309 :  print(read(1);-read(2););print(15+15+91);
310 :  print(37);
311 :  print(read(2);*read(2););
312 :  IF(X1>88)IF(20==X1)X2=32;;X1=43;X1=48;;
313 :  IF(X1*X1>46)X1=23;LOOP(20!=98)X1=3;;LOOP(22==X2)X1=7;;X2=39;;
314 :  print(X1/X1);
315 :  print(85*X2+read(2););LOOP(72<X1)print(98+58);;IF(X2==X2)X1=41;X2=63;print(X2*X2);;
316 :  print(X1*3*X1/X1);print(9/read(1););
317 :  print(28/73*X1+38);print(X1+X1/36);
318 :  LOOP(X1*X1==X1/39)print(48/X1);;print(65-X1);
319 :  print(X1+X1/X1);
320 :  IF(94>100)IF(X1<X1)X1=74;;print(X1/X1);IF(64>5)X1=4;;print(X1);;IF(15!=47)print(15/79);;
321 :  print(read(1);*read(1););X1=X1;
322 :  print(3);
323 :  IF(X1-53==X1)print(88+49);IF(56>72)X1=51;;print(X1-X1);print(X1+10);print(71/32);;print(61-92);
324 :  print(read(1);*X1);X1=79*X1+X1;print(read(2);+read(1););IF(57==X1)X2=54;;
325 :  X1=read(2);;
326 :  X1=X1;X1=read(2);+read(1);;print(X1*X1);IF(X1<30)LOOP(60>73)X1=39;;X1=97;;print(36+78*read(1););
327 :  print(X1+14);X1=34;
328 :  print(19*98);
329 :  print(92+29*X1);IF(X1<3)LOOP(92!=85)X1=99;;;print(28/88+91);
330 :  print(97-13+19);
331 :  print(14+X1*read(1););LOOP((X1>X1)AND(0==62))print(1+71);;IF(X1/X1!=X1+X1)LOOP(X1<92)X1=68;;print(79);;print(X1*X1-read(1););
332 :  print(9-read(1););IF(22!=X2)X2=4;print(98);IF(71!=86)X2=10;;X1=19;print(X2);;print(X1);IF(X1<68)X1=8;LOOP(78!=X1)X2=38;;;X1=read(2);;
333 :  LOOP(78<13)LOOP(67==X1)X1=60;;;LOOP(X1/74==66+X1)LOOP(46>34)X2=73;;print(X1/X3);X1=46;LOOP(X2<45)X3=34;;LOOP(X1<34)X3=33;;;
334 :  print(X1);X1=84;X1=X1;print(69-88);
335 :  print(7/X1/19);X1=96;print(read(1);/27-X1);
336 :  IF((59!=X1)OR(62<89))print(39+20);IF(X1>39)X1=5;;print(X1+X1);;print(X1*read(1););
337 :  print(44);print(X1);print(X1-44-78*X1);
338 :  print(12*X1-63);
339 :  print(37*53);
340 :  print(80+83*read(2););LOOP(X1!=39)X1=36;IF(67==87)X1=89;;print(45*52);;LOOP((X1>65)OR(5<X1))X1=70;print(3);;
341 :  print(read(1);/X1-7);X1=8;LOOP((X2!=X2)AND((31>X1)OR(2!=20)))print(X1/54);;
342 :  print(X1/91);print(X1+40);IF(58+X1>X1+3)IF(80>X1)X1=5;;LOOP(60<X1)X1=77;;LOOP(X1>X2)X1=5;;LOOP(X3>45)X2=93;;IF(X2<13)X1=46;;;
343 :  print(78-6);LOOP(49<X1)print(0+X1);;print(44/X1+read(1););print(25-read(1););IF(31>79)LOOP(35==X1)X1=1;;print(22+78);print(X1);;
344 :  X1=29;
345 :  IF((X1==27)OR(58==X1))print(X1*74);IF(X1==35)X1=35;;print(71);;
346 :  LOOP(81+X1<X1)X1=23;IF(X1<X1)X1=72;;IF(0>58)X1=10;;print(X1*86);print(X1);;
347 :  X1=59+X4+X3;print(X2);
348 :  LOOP(X1-X1<28*75)LOOP(29>51)X1=91;;;print(88);
349 :  X1=22-read(2);;
350 :  LOOP(59+X1!=12-X2)print(72);IF(4!=X1)X1=72;;;
351 :  print(X1*X1-read(2););IF(46>33)X1=71;;print(63*68/1);
352 :  IF(X1<4)LOOP(X1<32)X2=70;;IF(X2<60)X1=38;;X2=18;LOOP(X1==X1)X2=2;;print(47/X1);;print(13/read(2););
353 :  IF(69==X1)print(X1);print(X1*44);;print(X1-X1-17*48);X1=55/X1*88;print(X1);print(62);
354 :  print(50);print(X1);
355 :  print(X1+4);LOOP(X1<0)print(99);print(52*X1);;X1=read(1);;
356 :  print(read(1);-read(2););LOOP(44+X1!=X1-79)IF(43>93)X2=88;;X2=69;;IF((85>X1)OR(X1!=X1))IF(X1!=57)X3=3;;print(49/X3);print(91+17);print(11+X2);print(37+X2);;print(92+read(2););X1=read(1);;
357 :  print(16);LOOP(19==85)IF(100>X1)X1=68;;print(X1/15);print(15*44);print(X2-42);LOOP(X2==41)X1=69;;;
358 :  print(read(2);-read(1););print(X1-57*read(2););
359 :  print(41);print(89);
360 :  LOOP(14-87==53-91)IF(X2==X3)X3=52;;print(X1-X2);;print(X1);X1=X1-77*read(2);;print(X1/X1);
361 :  LOOP(X1-X1!=40-X1)print(X1-X2);LOOP(X2!=72)X1=37;;IF(X3!=X3)X2=43;;X2=80;LOOP(23<77)X2=95;;;
362 :  print(X1);
363 :  print(X1+56);X1=29;print(61+X1*43+X2);IF((24!=55)AND(X2!=X2))print(X2/3);IF(X1==X2)X1=59;;LOOP(X2<X1)X2=28;;print(58+9);LOOP(X2<X1)X1=20;;;
364 :  print(X1*71*X1);LOOP(X1/98>26)print(80);;IF(4>36)print(X1/65);print(X1*1);print(13);;LOOP(79<49)print(65*72);print(30+24);print(16/82);LOOP(X1>X1)X2=13;;;IF(X1*4<84+X1)print(31/93);;
365 :  print(32+read(2););LOOP(X1>2)print(X1);IF(X2<X1)X2=93;;X1=64;LOOP(53!=36)X2=96;;;
366 :  IF(23>X1)LOOP(X2>X1)X2=38;;print(38*39);;LOOP((X1==X2)AND(55==X1))LOOP(81>X2)X3=39;;LOOP(39>83)X1=73;;IF(13!=X1)X1=76;;;
367 :  print(91*7);X1=X2;print(X2);
368 :  print(91);IF(X1*X2!=57)X1=61;print(X2*32);print(60);print(16+67);LOOP(X1!=31)X1=37;;;
369 :  print(X1*100);print(X1-21);
370 :  print(71+42);IF(X1<64)LOOP(76<X1)X1=54;;IF(8==X1)X1=59;;;print(X1+97);
371 :  LOOP(49!=X1)print(88*X2);X2=33;LOOP(X1<83)X1=91;;;X1=read(1);*X2-40;print(X1);
372 :  IF(96/X1>51/99)IF(78>38)X1=80;;;
373 :  print(8);
374 :  print(78*X1-read(1););print(X1-read(1););X1=61-read(1);;IF((X1>X1)OR(71<X1))print(42-12);;
375 :  X1=X1;
376 :  print(30+X2-read(1););LOOP(77<37)LOOP(98>X1)X2=96;;IF(X2>X3)X3=12;;;print(86/93);print(X1-39);IF(X2*84==X1-74)IF(X1==56)X1=38;;print(X1+X3);;
377 :  LOOP(X1!=X1)X2=89;IF(74<X2)X1=53;;LOOP(X1<1)X1=43;;;
378 :  print(88);
379 :  X1=read(1);;X1=read(2);;print(4/27);print(X1-96);LOOP(46==98)IF(89<X1)X1=94;;;
380 :  LOOP(20/92==92/X1)print(11/X1);;
381 :  X1=read(2);;
382 :  X1=X1-X1/8;LOOP((X1!=X1)AND(X1==29))print(X1*X1);print(X1+58);X1=5;;
383 :  LOOP(X1*X2>24-X1)LOOP(5>61)X2=88;;print(X1+X2);X1=59;print(7);LOOP(11==20)X1=31;;;
384 :  print(read(2);-read(1););print(X1);LOOP(X1!=X1)print(74*66);print(X1/18);print(X1/X1);LOOP(X1<87)X1=85;;;
385 :  print(X1+10+13);print(read(1);/read(1););LOOP(39<72)print(X1*X1);X1=7;print(X1*X1);;X1=50;
386 :  LOOP(35<X1)print(X1);IF(66==X1)X1=26;;print(X2);;print(X1*read(2););IF(X1+20!=77*76)print(19*X2);;
387 :  print(51-75/read(1););print(X1);
388 :  print(40*X1*100);print(53);print(X1);print(62/X1);X1=44;
389 :  LOOP(5>X1)X1=52;IF(57==73)X1=5;;print(53*16);;IF(X1+X1!=20-X1)print(44-51);print(X1);LOOP(X1>X1)X1=46;;;print(X1*97);X1=read(1);*29*X1;
390 :  print(3);print(X1-77);
391 :  LOOP((X1>X1)OR(X1!=X1))IF(43>26)X1=33;;LOOP(100==X1)X1=69;;;print(73+read(1););IF(84!=29)IF(X1==92)X1=40;;;
392 :  print(X2/56-80);LOOP(66!=X1)print(70);print(X1);;print(X1);
393 :  print(71);
394 :  LOOP((X1!=45)AND(57>85))print(11);;print(21);
395 :  print(51+read(1););
396 :  print(read(1);*47-X1);print(X1*62-X2-15);print(8/read(2););
397 :  print(read(1);+read(2););print(100/X1);print(52*X1/X1*48);LOOP(79!=69)print(X1/95);print(X2-56);IF(16<X1)X1=68;;print(X2*X2);X1=11;;LOOP(16-X2>X1+47)print(X1*27);;
398 :  print(99-51);X1=11+81*read(2);;
399 :  print(X1);LOOP(X1-23<X1)print(X2-X1);X2=48;print(X2);;
400 :  print(X1-65/read(1););
401 :  IF(X1!=X1)LOOP(35<77)X3=14;;;print(100+42+read(1););print(read(1);/X3+20);LOOP((78<82)AND(X2!=X3))print(X1);X3=24;;IF(62<X2)X1=26;;
402 :  print(24+20/X1);LOOP((66>32)OR(50!=7))print(X1*X2);print(49*X2);X1=67;LOOP(X1!=25)X1=44;;LOOP(36>X2)X2=73;;;print(X1-19/X1);X1=85+78;
403 :  print(X1);
404 :  print(8);IF(X1!=34)print(2/X1);IF(X1<35)X1=64;;print(50*99);X1=11;LOOP(96==X1)X1=73;;;print(read(2);/63*100);X1=31;
405 :  IF(46>X1)IF(X1<X1)X1=95;;print(30);print(X1+100);print(X1/X1);;LOOP(43<X1)print(X1);;print(1/read(2););print(X1);print(9/29);
406 :  print(11-6);print(X1+24*35);IF(X1!=13)IF(X1>X1)X1=37;;;
407 :  IF((21<35)AND(23>81))print(X1+X1);;X1=read(2);*89/75;print(56);IF(X1>53)print(3/X1);print(64-X1);print(71);;X1=read(2);;
408 :  IF(25<X1)IF(X1==X1)X2=54;;X1=27;;LOOP(X1==77)LOOP(97!=X1)X2=37;;LOOP(X2!=64)X2=55;;;print(65-32+5);
409 :  X1=read(2);/17/X1;print(X1-60);
410 :  print(16-read(1););
411 :  LOOP(X1/X1==67)print(X1-57);IF(X2>X1)X1=61;;LOOP(X2!=22)X2=99;;X1=97;X1=44;;
412 :  IF(86==64)print(X1*X1);print(X1/X1);;IF(X1*22<X1)IF(42>78)X1=48;;IF(71==X1)X1=77;;X1=92;X1=38;print(64);;IF(34-58<69)IF(38>X1)X1=47;;print(13*38);print(X1);X1=12;IF(54<54)X1=75;;;
413 :  print(X1+84/30);print(47*38+30);LOOP(93/X1>X1/69)LOOP(89==80)X1=40;;print(11+13);print(X1*20);IF(X1!=X1)X1=38;;print(24-X1);;print(50/X1-51);
414 :  print(86/93*X1);
415 :  print(X1);X1=X1*X2*read(2);;print(X2/X1-X2);print(read(1);*read(1););
416 :  X1=44;IF(X1<X1)print(53/X1);;print(18-X1);print(X1+X1);LOOP(31>X1)print(95*X1);;
417 :  print(read(1);-read(2););print(32-read(1););print(X1);print(96/X1*56);IF((X1==X1)OR(68!=X1))X1=94;;
418 :  print(44);print(1+X1-read(1););print(read(1);-X1);
419 :  X1=0;IF(40*X1!=X1*X1)IF(X1<X1)X1=100;;LOOP(83!=15)X1=18;;;print(65);LOOP(X1*X1==X1)print(97*X1);print(13-X1);;print(X1-69+read(1););
420 :  print(X1*X1);print(74+38);
421 :  print(85);
422 :  IF(74+X1==X1)LOOP(X2>X1)X1=12;;LOOP(24<X2)X1=12;;print(50+61);;print(12);print(82-X2+X2);print(X1-X1*24);
423 :  IF(X1==91)IF(60<66)X1=81;;print(15);;print(43);print(X1+X2-56);print(X1);IF(X1+90!=9)print(X1+X1);IF(60!=X2)X2=99;;;
424 :  X1=read(1);;print(20*41);print(read(2);/read(2););
425 :  LOOP(10<X1)print(X1);;print(X1);
426 :  LOOP(X1==93)IF(X1<X1)X1=66;;print(6);IF(X1!=X1)X1=11;;X1=22;;
427 :  print(X1);X1=27;print(X1-read(1););print(61+84);print(74-33);
428 :  print(8-X1);print(8/65*49);IF(34+X1==X1/77)LOOP(X1<X1)X1=94;;LOOP(81==X1)X1=93;;print(23-72);;print(X1);
429 :  LOOP(X1==X1)IF(96>63)X1=95;;print(63/X1);print(X1*72);IF(31<X1)X1=57;;print(8);;
430 :  IF(X1+X1>20)LOOP(35<X1)X2=18;;print(X3*X4);;print(X1/X1*91);print(X1-X2+18+X1);print(65/15*80);
431 :  IF(X1!=X1)print(20);print(33+100);;print(X1+27);print(1*81-16);print(X1/73);
432 :  print(78-X1*X1);print(36+33*read(1););print(96*82+16+X1);IF(X1/10>X1-52)X1=99;;
433 :  print(24);IF(58-X1!=X1+X1)X1=62;LOOP(39!=3)X1=50;;;LOOP(27+X1>79)print(X1/83);print(36+60);print(X1/X1);print(91);;X1=87;
434 :  print(48-100*X1);print(47*read(1););X1=read(1);;print(98+42);print(65/read(1););
435 :  LOOP(75-1!=39/X1)X1=93;print(85);;LOOP(X1-X1>X1)LOOP(X1>X2)X1=20;;LOOP(X2!=92)X2=53;;print(X1);IF(74>X2)X1=61;;print(X2/X3);;
436 :  print(X1);IF(88>X1)print(74*X1);;print(63+52);print(91+X1*71);print(48);
437 :  IF(X1==X1)print(10);print(X1/X1);print(17/31);print(92);print(2-67);;LOOP(53+40<68)print(X1+X2);print(57-X3);;LOOP(38>X1)print(29+X3);print(8);X1=11;IF(X2>31)X1=79;;print(X2+45);;
438 :  IF(X1==X1)print(44);;IF(18<100)print(X1);print(X1*X1);print(X1/X1);LOOP(89!=X1)X1=64;;print(X1+X1);;X1=88;print(89-98);print(read(2);/7-39);
439 :  X1=read(1);;print(31*31-X1);
440 :  IF(49!=X1)print(X1/4);print(X1*20);;
441 :  print(X1/29-X1);LOOP(22!=38)IF(8>X1)X1=56;;;print(0/15+X1);X1=read(1);;X1=read(1);;
442 :  IF(X1/X1==82-30)print(35+X1);;print(32*X1-read(1););print(81*read(2););
443 :  print(X1);IF(51>69)print(X1-X1);LOOP(X1==97)X1=14;;print(19-59);print(X1+X1);print(16);;print(X1);print(read(1);-read(2););
444 :  LOOP(X2+X2>X1)LOOP(86==X1)X2=93;;;print(35);
445 :  X1=80;
446 :  LOOP(84<X1)print(X1);X1=89;LOOP(X1>X1)X1=8;;;
447 :  print(read(2);+read(1););IF(89>42)print(26);print(97);print(X1+73);IF(89<1)X1=24;;;print(98);
448 :  print(X1+23);print(90*read(1););
449 :  print(93*X1-95);
450 :  print(4+read(1););IF(X1/X1==X1)LOOP(X1==X1)X1=90;;print(56);;
451 :  IF(X1==X1)print(X1);X1=91;print(78-X1);;LOOP(((91<X1)AND(X1>X1))OR(X1>31))X1=73;X1=21;print(X1/X1);;print(read(2);+read(1););print(55+70+X1/96);
452 :  IF(X1-X2<X2*X1)X1=4;print(18/43);IF(X1<68)X2=61;;;
453 :  IF(X1!=X1)IF(X1==X1)X1=54;;print(82/46);print(X1-97);print(X1/22);;print(64*79);print(X1-10*X1);
454 :  X1=read(1);;X1=18/69/X1;
455 :  IF(0!=39)LOOP(94<X1)X1=44;;print(40);;X1=85;print(26);print(14+X2-read(2););print(read(1);+X2/23);
456 :  print(X1/94+100);LOOP(81<53)print(17+X1);print(X1+95);print(40+X1);print(32-X1);print(43/X1);;LOOP(X1-X1>X1)X1=20;print(62+X1);X1=98;;print(read(1);+read(2););
457 :  print(X1);LOOP(X2!=15)print(X1-15);;LOOP(90<X1)print(X2*49);X1=3;print(X2*X2);X1=41;print(88/X2);;X1=55;print(36*30/read(2););
458 :  LOOP(83!=X1)print(17);;
459 :  print(9*X1+read(2););print(68*49);IF(X1!=83)X1=74;;
460 :  LOOP(86==X1)X1=84;;print(16+1*X1);print(read(1);+X1+37);LOOP(73==28)IF(81<X1)X2=63;;X2=56;IF(44!=X1)X2=51;;;print(68);
461 :  X1=read(1);;print(X1);print(17*44);
462 :  X1=read(1);;
463 :  X1=36;print(X1/27+X1);X1=read(1);+read(1);;
464 :  print(0/90*95);X1=13/45;
465 :  X1=read(1);/22-X1;LOOP(X1==X1)print(44);;X1=2;
466 :  IF(((X1!=41)OR(42==2))OR(49<77))X2=60;IF(X1<40)X1=27;;print(X3-X2);;print(51);
467 :  X1=86;IF(X1>92)print(X2*X2);;print(78*85);print(69*73);
468 :  X1=read(2);;
469 :  X1=33-15/76;
470 :  print(69*read(2););
471 :  IF(X1<X1)print(50/62);IF(12>X1)X1=47;;;
472 :  print(X1-52);print(X1-X1);print(6*59+82);LOOP(X2>51)LOOP(96==X1)X1=6;;print(45*X1);IF(X2==48)X1=37;;;
473 :  print(67);
474 :  print(51-read(2););print(71*X1*X1);LOOP(1+80!=0)X1=36;print(87-X1);;
475 :  LOOP(82<X1)print(61+X1);print(71);;print(read(2);-81-39);X1=read(1);;print(23+X1/read(1););print(X1/X1);
476 :  LOOP(X1!=63)print(72*X1);print(41+9);;
477 :  IF(41/92!=99+6)IF(X1>X1)X1=44;;print(40-X1);LOOP(7==X1)X1=80;;;print(95);
478 :  print(X1);
479 :  LOOP(69<21)print(X1);print(10);IF(X2==X1)X2=13;;print(55-X2);;
480 :  print(73/X2/X2);X1=X1;print(92);X1=55;print(89+30);
481 :  print(X1);
482 :  print(59+97/X1);
483 :  print(read(2);/read(1););IF(X1<59)print(X1);LOOP(X1>X1)X1=68;;print(X1/X1);X1=47;;
484 :  X1=read(2);;
485 :  print(X1/36);
486 :  print(X1);print(24*X1/11+X1);LOOP((8!=X1)AND(99>X2))print(X2/52);print(X2-X1);LOOP(90>X1)X2=85;;IF(X1!=77)X1=15;;IF(41!=X1)X2=82;;;LOOP(13-X1==X1)IF(20==100)X2=89;;LOOP(X1==X1)X3=51;;;
487 :  X1=X1;print(49);
488 :  print(87);LOOP(14/78==X1*X1)X1=33;print(X1-X2);;IF(67*X1>65+31)print(74*97);print(28/X2);LOOP(X2>57)X2=59;;;print(X1*X1-read(1););IF(82+X1!=56-78)print(X1);LOOP(X2<X3)X3=15;;;
489 :  print(X1);
490 :  print(85+47);X1=94;
491 :  X1=71;
492 :  print(X1);print(55);X2=38*35;print(read(1);/X1);
493 :  IF(X1!=15)IF(61>X1)X1=11;;print(X1/X1);LOOP(39==91)X1=46;;;print(44+5);
494 :  print(72);X1=read(2);+read(2);;LOOP(41==21)LOOP(X1!=X1)X2=13;;;print(75/X1+X1-67);
495 :  print(read(2);*read(1););LOOP(X1*70==X1+58)print(96/X1);print(39);print(X1);;LOOP(X1==94)LOOP(69==X1)X1=81;;X1=14;X1=61;print(98/X1);;IF(2>89)IF(X1==79)X1=97;;LOOP(X1>X1)X1=87;;;print(45*1);
496 :  print(X1);IF(88>10)X1=33;print(X1-X1);print(27+X1);print(X1);;print(17);print(X1+44-1);
497 :  print(21-37);LOOP(62/X1==87-87)X1=77;LOOP(X2<X1)X2=85;;;X1=read(1);;
498 :  print(95*X1/X1/X1);IF(21==62)X1=22;X1=29;;print(65);IF(X1>13)print(X1-X2);IF(83!=94)X1=54;;;
499 :  print(78/5);print(72/X1*43);
500 :  X1=read(2);;X1=30;print(50);X1=47;print(42+read(1););
501 :  LOOP(60+X1!=X1)print(X1*17);;IF(40==X1)print(86+88);;print(6+29-67);print(12);
502 :  print(51*12);print(read(1);*X1);
503 :  print(20*X1);LOOP(X1/25<X1+84)LOOP(14!=90)X2=59;;;print(X1/X1);print(43-73/X1);
504 :  IF(70/X1==X1-68)print(X1);print(26*X1);print(X1/X1);print(52-X1);;
505 :  print(X1+83*20);LOOP((X1==X1)AND(X1==23))print(98*77);IF(33!=X1)X1=24;;X1=41;;X1=read(2);;IF(X1*X1!=87)print(X1);print(X1+X1);;print(read(1);*84-X1);
506 :  IF(68!=9)LOOP(82==X1)X1=92;;X1=22;print(X2+X2);;
507 :  IF(87==X1)print(X1-45);IF(50!=X2)X2=34;;print(32*X2);print(16/X3);;IF(57!=X1)LOOP(76==89)X3=75;;print(26);print(X1);X1=64;X1=3;;print(38);
508 :  print(X1);IF(X1/X1==X1)IF(X1>X1)X1=34;;print(18-X1);;print(36/read(1););IF(84>X1)print(X1+99);print(87*X1);;
509 :  IF(X1!=4)print(76-X1);LOOP(65==X1)X1=36;;print(83);print(36*X1);X1=11;;IF(84!=72)IF(97!=X1)X1=28;;;
510 :  IF(37==X1)print(X1*70);;
511 :  print(read(1);-read(2););print(19);print(X1);
512 :  print(X1+X1/X1);print(43*X1);print(X1);
513 :  X1=26;X1=X1-63;print(81/95-read(2););LOOP((31>X1)OR(91>77))print(61/16);;
514 :  print(X1);print(X1);
515 :  LOOP(14==19)LOOP(X1!=X1)X2=10;;print(67+37);print(53);print(X1);LOOP(X2>21)X2=86;;;LOOP(54+X2<X1/X1)X2=93;print(0*73);LOOP(88==X2)X1=100;;X1=50;print(14*88);;X1=48/X2+53;X1=45;X1=read(2);/read(1);;
516 :  IF(77>48)print(X1+X1);IF(X1==X1)X2=73;;;print(64);X1=86;
517 :  X1=81;print(100+90);IF(11>X1)print(X1+X1);print(X1);print(X1*X1);;
518 :  LOOP(76<90)IF(X1>86)X1=14;;LOOP(14<X1)X2=19;;;print(89+76);X1=33/X1+read(2);;LOOP(X1/X1>35/58)IF(26!=X2)X1=48;;print(23+63);;IF((21>24)AND((89==X2)AND(96==60)))X2=50;X2=32;print(X2*X2);;
519 :  LOOP(X1==X1)print(X1);print(39*56);LOOP(X1>X1)X1=12;;;
520 :  X1=86+read(2);;print(X2);IF((79>44)OR(71<80))print(79+X1);LOOP(23<40)X3=59;;;print(X3);print(read(2);*read(1););
521 :  print(X1/30/X1-X2);print(X1-50*read(1););print(read(2);-X1-26);
522 :  print(14-X2-41/50);LOOP(X2>4)LOOP(44>X2)X2=64;;print(X1);IF(61>X3)X1=78;;LOOP(3==X2)X1=62;;;X1=read(1);;
523 :  IF(X2/5!=95)IF(73>X2)X1=97;;;print(X1);
524 :  print(X1-X1*37);print(70+15*41);
525 :  IF((77!=1)OR(X1<X1))print(49+X1);LOOP(X1>45)X1=37;;;
526 :  print(X1);print(X1);
527 :  print(64+22);
528 :  print(85-read(1););print(45/40);IF(85<X1)IF(63!=78)X1=44;;LOOP(44!=X2)X3=21;;print(69/95);;print(91-X1);print(X1);
529 :  IF(X1*11==3)print(82-76);print(X1+X1);print(X1+X1);;X1=read(2);;
530 :  IF(X1<26)print(75/76);X1=1;IF(X1!=63)X1=83;;;
531 :  LOOP(4!=X1)print(19+19);;IF(X1==X1)X1=56;print(X1-0);print(55/X2);IF(69>19)X1=42;;X1=59;;
532 :  print(4);
533 :  IF(97>X1)IF(X1>X1)X1=6;;LOOP(X1>61)X2=52;;print(82/X3);print(X1);;print(54);LOOP(X1-37<X1+X1)X1=14;LOOP(64!=75)X2=69;;LOOP(86!=53)X2=94;;;print(76);
534 :  LOOP(30/63==99*39)LOOP(X1==84)X1=75;;print(X1/84);X1=66;;IF(33/X1==10)print(X1+90);;
535 :  LOOP(17/X1!=28)X1=15;LOOP(X1!=54)X1=36;;X1=46;X1=1;print(79);;
536 :  print(read(2);*X1);
537 :  IF(28+59!=X1)X1=7;print(X2*6);print(X1);print(84+98);print(74/75);;LOOP(23<22)print(49);IF(38==87)X4=15;;IF(X2>20)X3=61;;X1=48;print(66*0);;IF(27==31)LOOP(X3!=X4)X1=40;;X2=65;print(X3);;print(X1-X1-read(1););
538 :  X1=88;IF(X1!=93)print(65+27);X1=65;print(20-25);print(93+X1);print(42/5);;X1=25;
539 :  print(X1-X1);
540 :  LOOP(5+X1>X1)print(91/X1);LOOP(X1>X1)X1=95;;X1=54;print(X1*X1);X1=92;;LOOP(51*X1>X1-X1)print(71*X1);;print(61);
541 :  print(read(2);-read(1););print(X1);IF(X1/54!=X1*X1)print(15);print(20*X1);print(X1);X1=35;;
542 :  print(76);
543 :  X1=77;
544 :  X1=92-54;
545 :  print(80-58);LOOP(X1+2==X1+X1)X1=40;;IF(X1>X1)X1=43;;
546 :  print(read(2);+X1);print(16-65);
547 :  print(X1);print(46);
548 :  LOOP(X1!=X1)print(45);print(X1/85);X1=37;LOOP(56!=X1)X1=50;;;print(X1);
549 :  print(25*79);IF(18==X1)X1=93;print(15);;
550 :  print(6/26-read(1););LOOP(32/X1==98+X1)print(89);print(X1/57);IF(81==5)X1=22;;print(6/57);;X1=77;LOOP(60<X1)print(21+20);print(87*84);X1=16;LOOP(93==39)X1=50;;print(X1-92);;LOOP(60<58)print(12/74);X1=80;print(X1*X1);;
551 :  print(71);print(read(1);/read(2););X1=read(2);;
552 :  X1=77;print(22);
553 :  X1=read(1);+read(2);;IF(X1*93>X1-100)print(X1-X1);;X1=read(2);;LOOP((X1>95)AND(17==96))print(33+28);;X1=X1;
554 :  print(read(2);*42-57);LOOP(((X1<X2)AND(32<X1))AND((X3>48)AND(11<44)))X3=41;LOOP(X2>11)X3=14;;print(X2+X1);;
555 :  print(45-34+20);X1=read(1);+X1+X1;print(X1-12);
556 :  print(X1);
557 :  print(11/82);IF(X1==72)LOOP(X2<54)X3=2;;print(24*X3);;print(read(1);-read(1););LOOP(X2!=37)print(96+X3);;
558 :  X1=read(2);;LOOP(X1<X1)LOOP(92<X1)X1=81;;LOOP(67>5)X1=4;;LOOP(X1==43)X1=91;;X1=69;;
559 :  IF(X1-X1!=43*32)print(X1);print(73+67);print(24*20);X2=75;X3=26;;LOOP(98>X1)print(X3-82);X1=57;print(X3*X3);print(X3*86);X1=85;;print(29);print(27);print(58/read(1););
560 :  print(32);IF(46>X1)print(34);print(64);LOOP(X1==X1)X1=73;;;IF(47+X1!=65)X1=65;LOOP(18==34)X1=25;;;print(X1+X1-read(1););
561 :  LOOP(65*15>24*54)print(X1*75);;LOOP(63+X1==73)IF(99==X2)X2=26;;;print(8+X1/12+4);print(read(2);/read(1););
562 :  print(1-9);
563 :  X1=65;X1=42;X1=X1;LOOP(X1>95)IF(X1>X2)X2=75;;X1=41;IF(55<60)X2=88;;IF(96!=X3)X2=95;;print(X2-X2);;
564 :  X1=45/X1;print(X1/8);print(99);
565 :  LOOP(X1/62<X1*X1)X1=67;X1=73;;print(X1+52);
566 :  print(14+X1+53);print(92-3*39);
567 :  IF(75<49)IF(9>90)X1=67;;IF(81==52)X1=97;;print(82);X1=7;;X1=18*10;print(read(2);-X1);
568 :  IF(42<X1)LOOP(X1<26)X1=99;;;print(79*33);
569 :  IF(((94!=X1)AND(X1==41))OR(X1<49))X1=25;IF(X1<X1)X1=95;;LOOP(X1==X1)X1=7;;;print(7+read(1););X1=X1-26;print(96);X1=16;
570 :  LOOP(X1/X1<X1/37)IF(X1!=2)X1=18;;print(X1/X1);print(26);;
571 :  print(X1);LOOP(X2==74)print(X1+X1);;
572 :  IF(X1==91)print(19);print(X1-65);print(X3*X2);IF(71>51)X2=24;;;print(99+X3+X3);X1=65;LOOP(X4+6<X1+45)print(3+14);;print(X2-50/X1);
573 :  LOOP(2>X1)IF(65!=44)X1=48;;print(73-89);LOOP(X1!=X1)X1=43;;;X1=61;print(76+58);
574 :  print(72*read(1););print(12);
575 :  LOOP(28==X1)print(65);;print(X2*67+read(2););print(22-read(1););
576 :  print(50);print(read(2);*X1+12);
577 :  IF(X1<69)LOOP(X1>62)X2=97;;print(X2-X3);print(99/X4);print(62/67);;
578 :  print(52+66-X1);IF(51!=49)print(X1-X1);LOOP(49==52)X1=69;;;print(82-read(1););IF(33/X1!=26/X1)print(X1);;IF(54!=X1)print(X1/73);print(88-60);;
579 :  LOOP(67*X1!=X1*64)print(X1);X1=48;X1=99;;LOOP(61==X1)X2=0;IF(80==73)X1=30;;;
580 :  print(X1-X1/47/25);print(72-read(2););
581 :  print(read(1);+read(1););print(read(2);/X1);
582 :  X1=92;X1=read(1);+36-X2;X2=read(1);/read(2);;print(63);LOOP(X1+75>75-71)LOOP(X1==52)X1=87;;X2=60;IF(87<30)X2=30;;LOOP(X2<X2)X1=36;;;
583 :  print(read(1);*read(2););print(read(2);/read(1););X1=read(2);;print(read(2);/X1/60);LOOP(X1>55)LOOP(X1<X1)X1=26;;X1=77;X1=66;print(90/X1);;
584 :  X1=read(1);;
585 :  X1=X1;print(read(2);/read(2););X1=X1;print(read(1);/X1/X1);IF(X1!=X1)X2=20;print(42);;
586 :  print(X1);X1=read(2);;
587 :  print(52/X1);
588 :  print(94);
589 :  LOOP(30<89)LOOP(X1<85)X2=2;;IF(63>10)X2=42;;print(X3-77);print(X1*X1);LOOP(20!=X2)X4=14;;;LOOP(X1-X1!=X1+X1)IF(44<X5)X3=47;;;print(58);
590 :  X1=56-read(1);;LOOP((X1<X1)AND(8<41))print(45*73);print(X1);;
591 :  print(read(2);*X1+89);
592 :  print(70+65+X1);
593 :  print(7);print(7);print(92+read(2););
594 :  print(21/42+X1);print(45);LOOP(84+27!=X1-X1)print(61-X1);IF(X1==X1)X1=69;;;print(24*X1+read(2););print(X1);
595 :  print(82);print(read(1);/X1/X1);print(68+84);print(X1+X1);
596 :  print(read(1);-read(1););IF(35==74)LOOP(X1!=51)X1=72;;;X1=91;X1=read(1);;
597 :  LOOP(97-X1==75-88)print(90);print(46/78);LOOP(X1==X1)X1=53;;print(X1);;print(33*92);
598 :  IF(100<X1)print(X1*69);LOOP(X1>X1)X1=59;;print(X1);;X1=read(1);;IF(61/15==66)IF(26>X1)X1=87;;;
599 :  print(read(2);*X1/X1);X1=5-read(2);;print(X1*76-X1);
600 :  X1=41+54;LOOP(68/91<X1-88)IF(5!=55)X1=21;;X1=27;;
601 :  print(63-36);print(62);
602 :  print(96-40);print(X1/X2+86+81);print(38*X1);
603 :  print(X1-11*57-X1);X1=X1*X1;X1=22;IF(X1!=21)IF(X1>X1)X1=41;;X1=31;IF(49!=32)X2=40;;IF(X1!=X1)X1=93;;LOOP(50!=42)X2=36;;;LOOP(X1>19)print(X2-40);print(X1+X2);LOOP(X1>X3)X3=13;;;
604 :  print(52-read(2););
605 :  print(34+X1);print(X1);
606 :  X1=43;print(read(1);-29-X1);print(66*X1/56);LOOP(59*56<X1*51)print(80/X1);print(X1*60);IF(96!=X1)X2=49;;X1=65;print(X1-X2);;
607 :  print(9-0/read(1););
608 :  IF(46>X1)LOOP(X1==X1)X1=58;;print(26-33);IF(52>X1)X1=79;;IF(46!=41)X1=97;;;print(14-read(1););X1=53/X1/68+15;print(X1-91);
609 :  print(read(1);/X1/X1);LOOP(62<28)X1=52;LOOP(X1!=X1)X1=67;;;print(read(2);+X1+X1);print(83);print(22);
610 :  IF((X1==X1)AND(X1==66))X1=22;X1=52;;print(read(2);+read(1););LOOP(63-X1==59)IF(3!=X1)X1=70;;print(X1+5);print(5-X2);X1=90;;
611 :  IF((39==X1)AND(X1>6))X1=12;print(X1);;X1=57-read(2);;
612 :  LOOP(22==X1)print(X1-20);;LOOP(X1/80==59+53)print(21);X1=15;IF(88==89)X1=32;;;
613 :  LOOP(38!=17)print(39+41);LOOP(X1>98)X1=32;;LOOP(48>X1)X1=100;;print(93);;print(X1+8);IF(X1/4==X1*X1)print(19);print(X1-78);IF(56<X1)X1=90;;;
614 :  print(75*48+X1);print(32-X1+98);
615 :  IF(X1-45==97)print(76/13);IF(X1==60)X1=37;;print(56*X1);;print(X1/X1*read(2););
616 :  print(92+read(1););LOOP(X1-X1==19)LOOP(34<X2)X2=9;;;
617 :  IF(19*X2==33/81)print(X2*X2);;LOOP(X2-X1==67*X2)X2=10;print(X2+X1);;X1=X1-94-read(2);;
618 :  print(X1*X1+X1);IF(15==X2)LOOP(X2<X2)X1=88;;LOOP(0==X3)X4=66;;X1=7;;print(read(1);/read(1););
619 :  print(71/44+X1);print(X1/31);
620 :  LOOP(X1*74<88)LOOP(X1==X1)X1=49;;;
621 :  IF(X1<X1)print(X1+X1);print(X1+X1);print(X1-8);print(X1-X1);;X1=X1;X1=2/read(2);;print(31/89);print(89-73/34+X1);
622 :  X1=read(1);;LOOP(61<50)print(X2-X2);print(63*X1);;print(1/X2+20);LOOP(X1!=50)print(X1+21);print(20);;
623 :  print(X1);
624 :  print(read(2);-30/X1);print(38);X1=read(2);;IF(X1>56)print(X1);print(X1+X1);IF(X1!=X1)X1=90;;print(14/X1);;IF(4!=X1)print(69-1);LOOP(X1>X1)X1=35;;print(9+22);X1=75;print(38/40);;
625 :  LOOP(83==X1)print(50-30);X1=73;X1=73;print(X1/X1);;print(X1*94);
626 :  print(54-63+X1);print(68*X1);print(X1*31);IF(X1>28)X1=44;print(85);;print(X1/25);
627 :  LOOP(X1<X1)LOOP(X1==X1)X1=65;;LOOP(X1==5)X1=17;;print(X1-100);;
628 :  print(13/X1+read(1););
629 :  print(X1*X1);print(X1+33/62);
630 :  LOOP(14==0)IF(24<X1)X1=88;;;LOOP(X1*X1<X1)LOOP(62!=38)X1=49;;;print(50+72);
631 :  print(read(1);-X1);LOOP(X1*X1<28/96)IF(96<X1)X2=31;;print(44-X1);print(43);IF(14>77)X1=80;;;
632 :  LOOP(25>X1)print(46/57);print(X1/X1);;X1=61;print(7);
633 :  print(64);print(98);
634 :  print(74);print(46+1);print(X1-read(1););
635 :  IF((59==X1)OR(33!=X1))LOOP(X1!=23)X1=100;;;IF((35==83)OR(1==X1))print(81+X1);print(X1*40);print(16/52);LOOP(93<X1)X1=100;;IF(7==4)X1=73;;;
636 :  print(read(1);/read(2););IF(99-88!=26*X1)X1=72;print(X1-45);;
637 :  print(70);print(13/29/X1);
638 :  X1=95;
639 :  print(X1);IF(X1!=X1)print(56/74);IF(X1<62)X1=0;;;X1=X1+77;X1=read(2);-read(2);;print(40*X1-39);
640 :  IF((X1>X1)AND(X1<X1))LOOP(53!=86)X1=51;;print(X1/X1);print(33-43);;print(read(1);-X1-17);IF(12==52)X1=20;;
641 :  X1=55;print(31+read(2););
642 :  print(50*X1);
643 :  print(X1+X1/97);print(16);print(46-65);
644 :  LOOP(50+X1!=X1)LOOP(29>19)X1=86;;print(19);IF(38!=49)X1=93;;IF(X1>25)X1=1;;LOOP(X1>X2)X1=91;;;X1=24;print(41);print(51+38);print(X1);
645 :  IF(87!=X2)print(39/22);IF(X2!=X2)X3=74;;LOOP(X2>X3)X2=90;;print(95/28);;print(50-read(2););X1=16;print(28);
646 :  print(95-read(2););X1=87+X1;
647 :  LOOP(57+2!=34/94)LOOP(55>X1)X1=74;;;print(61*X1+X2);IF(49>X1)print(X2/42);IF(12==X2)X1=55;;X2=66;print(X2/X2);;
648 :  LOOP(X1+X2<X3/X2)X1=45;IF(X2!=56)X4=60;;;
649 :  IF(X1*X1>19)print(X1/X1);LOOP(58!=X1)X1=11;;print(74);IF(24!=X1)X1=73;;X1=32;;
650 :  print(read(1);*0-X1);
651 :  X1=read(2);+X1/X1;X1=read(2);;X1=19;print(X1-87-X1*56);IF(16<12)print(28/9);X1=22;IF(X1>X1)X1=75;;LOOP(50!=41)X1=27;;LOOP(X1!=84)X1=10;;;
652 :  print(X1/read(2););
653 :  IF(X1/55<65+76)LOOP(X1==54)X1=32;;print(X1*62);LOOP(3!=56)X1=15;;print(53);print(X1+56);;print(40/17);print(63);print(98/57+X1);
654 :  print(66+88*read(1););IF(X1<25)print(97*X1);;
655 :  print(73-64);print(45/81);print(11*56);
656 :  print(3);print(71/X1);
657 :  X1=57;X1=X2/92;
658 :  IF(X1<74)X1=49;;IF(X1<X1)print(21+47);print(44*60);print(X1);;X1=42/25+46;
659 :  LOOP(X1-X1>18*41)print(X1+X1);print(57*99);;
660 :  print(34/read(2););print(read(1);/X1+80);print(6-19);print(read(1);*X1*X1);
661 :  print(X1-73-read(1););IF(X1==44)IF(49==X1)X1=94;;;print(91-read(1););print(100-read(2););
662 :  print(X1);IF(X1-X1<22-X1)print(32*50);print(X1/35);LOOP(24!=X1)X1=56;;IF(X1==X1)X1=89;;;X1=X1+8+read(1);;
663 :  print(67-X1);
664 :  print(73+30);print(28);print(92*91);
665 :  print(33/X1*read(1););print(X1);IF(53>X1)print(11);IF(X1==X1)X1=7;;;print(47-X1);
666 :  IF(15-95<59+81)X2=84;LOOP(X1!=X2)X1=44;;print(X3-X2);;LOOP(X1*45==8-X1)IF(97==X2)X4=76;;IF(X4==X1)X4=70;;print(X1-X1);LOOP(X3<44)X4=10;;print(13/1);;X1=48;
667 :  print(61*99/X1+51);
668 :  IF(84==11)print(67);;IF(29+93<98)print(X1+X2);IF(52!=X2)X2=91;;print(X2*95);;
669 :  X1=X1*66;print(read(2);/17/X2);IF(X1!=37)LOOP(51<80)X1=72;;IF(61>80)X1=21;;X2=96;IF(18!=X3)X1=5;;;print(36+47);
670 :  X1=X1/71;
671 :  IF(X1!=X1)print(X1-27);print(88);print(87);IF(69>X1)X1=61;;print(26+43);;IF(44!=24)print(X1*84);print(25);print(20);;LOOP(X1*X1<35)LOOP(X1<64)X2=55;;LOOP(22>21)X1=45;;print(47*X2);;
672 :  X1=21-X1-X1;IF(41+77!=37-69)print(83+45);print(X1+25);X1=10;print(66-40);;print(X1);
673 :  IF(42*2>X1+7)LOOP(X1>X1)X1=50;;X1=82;print(14);LOOP(X1>X1)X1=46;;;print(read(1);+read(1););print(96+X1/78);print(X1/10);print(X1*53*100);
674 :  print(74-86/X1);print(X1);X1=63;
675 :  print(X1);X1=X1*X1;IF(62+X1>27)print(X1);;
676 :  LOOP(X1<X1)print(60-56);X2=31;X3=15;IF(X1>11)X1=91;;;print(94-read(2););print(18-X2);X1=94;print(11*X2);
677 :  print(X1);print(0*read(1););print(79*X2);
678 :  print(read(2);+X1-26);print(15*13/97);LOOP(58==29)X1=51;;print(80*read(2););IF(98+X1!=75+X1)LOOP(X1>77)X1=61;;X1=70;print(93/X1);print(X1);;
679 :  IF(41/87!=21)print(X1-X1);;IF(X1<0)print(17+84);LOOP(X1<77)X1=67;;print(X1+X1);;print(63/74-X1);
680 :  print(X1+59/74);
681 :  print(1/X1);
682 :  print(46+X1-88);print(58);print(38);print(X1);LOOP(X1!=0)X2=37;;
683 :  print(read(1);*X1);
684 :  print(57-37);IF(54!=X1)print(28-86);;
685 :  print(77*X1/X1);IF(X1!=100)print(X1+X1);print(57+X1);LOOP(37!=X1)X2=51;;;print(10*read(1););
686 :  X1=read(1);;IF(25/39>X1/4)print(66+X2);;
687 :  LOOP(X1>26)LOOP(40!=X1)X1=13;;LOOP(83!=51)X1=54;;IF(X1!=X1)X1=40;;print(X1);;print(X1*X1*X1);print(16);print(X1+X1/79);
688 :  print(read(1);+read(1););X1=read(1);;print(23+read(1););
689 :  print(read(1);*X1/X1);
690 :  print(read(2);+read(1););print(26+80);print(36*73);print(read(2);/X1-X1);
691 :  IF((X1<X1)OR(X1>59))print(36/0);;IF(37!=35)IF(34==99)X1=84;;print(X1-83);;IF(40<X1)IF(40>49)X1=42;;;
692 :  X1=read(2);;X1=23;
693 :  LOOP(X1+84==58-87)print(73*X2);IF(X1==X1)X2=2;;print(X1*20);;
694 :  LOOP(((34==X1)AND(X1<X2))AND((X2==X3)OR(94<X2)))X3=5;print(52-X2);;LOOP((41==X1)OR(X1<29))IF(1!=X2)X1=28;;X3=43;;
695 :  IF(94+X1>X1-38)LOOP(X1==49)X1=22;;X1=85;print(X1);IF(54==68)X1=38;;LOOP(X1<6)X1=96;;;
696 :  LOOP((23!=X1)OR(X1>X1))IF(47==14)X1=80;;;print(X1/12);
697 :  print(34-77-89);IF(X1*X1!=40+35)IF(X3>X2)X3=22;;print(67+X4);;print(X1-X2-read(2););
698 :  print(75+read(1););print(55+X1);print(86);X1=75*X1;
699 :  LOOP(25-X1!=X2-X3)IF(X2==X4)X2=45;;print(X3-X3);X4=27;;IF(24>X1)IF(44!=X1)X2=48;;IF(X5<X3)X2=39;;;
700 :  print(27);print(41-read(2););print(35*X1-read(1););
701 :  print(read(1);+read(1););X1=read(2);;IF(90!=X1)print(X2);print(73);;
702 :  print(43*33-read(1););IF(27*32>X2+90)print(46/58);;LOOP(X1!=X1)print(X2);print(54*65);LOOP(42==X1)X3=99;;;
703 :  IF(X1>83)LOOP(60==X1)X1=98;;print(70-89);;print(70-X1-47);
704 :  X1=46-74/X1;print(X1/21);
705 :  print(X1/45);print(read(1);-X1/X1);print(read(1);/read(1););
706 :  IF(75==X1)IF(75>X1)X1=99;;;LOOP(48>X1)print(X1);print(X1*61);print(92/X1);;
707 :  IF(14>14)print(8);print(X1+X1);;LOOP(X1!=95)IF(35!=43)X1=69;;IF(X1!=X1)X1=91;;LOOP(X1==50)X1=37;;;
708 :  IF(97<37)X2=37;;X1=X1-read(2);;print(X1*X1);
709 :  X1=read(1);;
710 :  LOOP(78/34>59*49)print(99/X1);print(31);print(33/X1);print(X2*X1);;IF(27>X1)LOOP(20==X2)X2=59;;IF(X1!=78)X2=67;;LOOP(X2!=46)X2=90;;print(X3*X3);X1=43;;print(94);
711 :  X1=57;print(5+X1+80);print(47);
712 :  print(98/88-43-49);
713 :  print(X1+71-read(2););
714 :  print(71);
715 :  X1=1+read(1);;X1=read(2);;print(read(2);-X1/83);
716 :  X1=read(2);;print(30-X1/X1);
717 :  print(X1+read(1););print(28);X1=X1/X1;
718 :  IF(71+67!=X1-1)IF(80!=X1)X1=28;;;X1=read(1);/X1-X1;print(X1);
719 :  LOOP(4/75<81/18)print(X1/X1);;LOOP(X1*91>94-32)print(59+12);print(X1*80);print(X1*86);print(X1+66);X1=63;;
720 :  X1=read(2);;
721 :  X1=34;X1=read(1);;print(55*44/27);
722 :  print(73+72);IF(X1-X1!=X1*X1)LOOP(93==77)X1=32;;;
723 :  IF(X1*X1!=X1*70)LOOP(X1!=X1)X1=66;;print(74*94);IF(72==34)X1=17;;;print(1/76);
724 :  print(71/X1-92);print(1*read(2););LOOP(4==94)LOOP(50!=X1)X1=22;;print(X1);LOOP(10==X1)X1=17;;;
725 :  print(X1);print(20-X1*X1);
726 :  print(X1*X1/read(2););
727 :  print(X1*X2+read(1););
728 :  print(X1);print(59);LOOP(X1/63>98)print(X1*X1);X1=15;;print(X1/13);LOOP(X1+X1>16)X1=15;X1=69;print(X1-44);;
729 :  print(X1+X1/X1+X1);X1=read(1);;
730 :  print(53+read(1););IF(X1<X1)LOOP(89!=X1)X1=9;;print(23);print(X1*30);;
731 :  print(34/read(1););print(X1*11-read(1););print(32+16);X1=read(1);;
732 :  print(63-85);print(2/50*X1);
733 :  LOOP(X1>X1)print(95+87);print(95+59);print(6/X2);;print(26*read(1););X1=read(1);;IF(X1*X1!=100)IF(X1<X1)X2=17;;IF(X1>X1)X1=15;;;
734 :  print(11*58);
735 :  X1=83+20*40;
736 :  LOOP((18>17)OR(X1<69))print(X2-X2);;print(read(1);-read(1););IF(32<96)print(X1);print(34/9);X1=60;LOOP(48>X2)X1=33;;;
737 :  X1=X1;print(X1);print(49/read(2););print(66);
738 :  print(15-read(1););print(96);
739 :  LOOP(71/X1>53*84)LOOP(X1!=X1)X1=53;;print(X1*X1);print(X1);;
740 :  X1=X1;print(89-38);LOOP(16+63>X1-X1)print(X1-33);;
741 :  print(read(2);+X1+18);print(85/13);
742 :  X1=20/X1;LOOP(X1/9!=61)X1=62;;
743 :  X1=32;print(X1);print(read(1);-X2);LOOP(34*X2!=11+36)print(3+X1);print(24/80);;X2=39;
744 :  X1=read(1);;print(68-read(1););LOOP((78<80)AND(82<X1))print(42-21);LOOP(X1==9)X1=45;;;print(27+25);print(59/54-36);
745 :  X1=X1-X1+67;IF(45*24<X1*X1)print(X1);X1=51;print(91-28);;
746 :  print(X1/X1-88);print(X1+98-X1);
747 :  print(7+X1-X1);print(77*39);IF((4!=78)OR(43==90))X1=50;print(X1*34);IF(X1<62)X1=71;;;IF((12!=68)OR(30<X1))print(X1+27);IF(14==X2)X1=76;;print(20+6);LOOP(X1>37)X1=68;;print(X2*9);;LOOP(99>70)print(X2*96);;
748 :  print(X1/X1/51);LOOP(X1*X1<14/X1)print(40-14);LOOP(78==51)X1=6;;IF(61!=30)X2=91;;print(X1-64);;IF(X1+X1!=73)print(0+X3);X1=69;;
749 :  print(14);print(89);
750 :  print(75*read(2););LOOP(X1/83!=51/X1)print(X2+X1);print(93-76);print(40-X2);;IF(X1<72)print(59/X2);X1=81;print(95);;LOOP(5/69==67/X1)print(X2-X1);LOOP(X1==56)X1=99;;print(X1);print(X2);print(X2+X2);;
751 :  LOOP(X1/X1==66)print(X1+X1);IF(2>X1)X1=10;;IF(X1<99)X1=4;;print(X1);;print(84);
752 :  X1=read(2);;print(X1-70);IF(6*X1<X1+X1)IF(X1==70)X1=13;;IF(X1<47)X1=29;;;
753 :  X1=read(2);;print(X2);LOOP(79*16==66)print(X2/88);X2=23;X1=82;;IF(88-15>X3-100)LOOP(X2!=74)X2=57;;print(7*89);;
754 :  LOOP(X2<X2)print(X3/83);print(X3+92);;X1=53;
755 :  LOOP((3!=47)AND(X1==X1))LOOP(X1<X1)X1=70;;LOOP(X1>X1)X1=66;;;print(X1/X1);IF(X1<X1)print(13-71);print(80/13);print(X1);IF(64>X1)X1=92;;;print(77);print(44);
756 :  print(42-X1*X1);
757 :  LOOP(93-67==X1*55)LOOP(66==33)X1=79;;;
758 :  print(29*read(1););X1=42;LOOP(50*X1!=X2/X2)print(52-33);print(42*X1);X2=37;LOOP(58==40)X3=90;;print(22/X1);;
759 :  LOOP(X1<X1)LOOP(X1<X1)X1=94;;;
760 :  print(read(1);/X1);
761 :  print(X1*88);print(91*X1+read(1););IF(X1!=71)print(X1/X1);LOOP(39!=40)X1=90;;;
762 :  IF(63/100>3/X1)print(13);;LOOP(31>X1)IF(X1==X1)X1=42;;;
763 :  IF(X1!=68)print(X1);LOOP(X1==X1)X2=40;;LOOP(X2<X1)X2=16;;;
764 :  print(X1*89*X1);print(X1/78+read(1););LOOP(X1==X1)print(20);print(36);LOOP(X1!=76)X2=66;;;LOOP(X1<X1)print(63*X1);X1=30;;IF(X1>X2)X2=46;IF(0!=X1)X1=8;;;
765 :  X1=52;print(X1-read(1););X1=read(2);;IF(X1!=X1)print(1+X1);print(X1/82);IF(X1>78)X1=14;;print(X1);;print(X1+X1+read(2););
766 :  print(4);IF(74>56)print(X1*X1);;print(read(1);-17+X1);
767 :  IF(X1/X1!=X1)LOOP(X1>94)X2=75;;IF(85!=64)X2=74;;print(X1*6);LOOP(65<62)X2=89;;IF(71>X1)X1=95;;;print(44+read(1););print(X2/X2/read(1););print(56);LOOP(17==X1)LOOP(68<X2)X2=92;;;
768 :  print(55);print(18/68);
769 :  IF(81*X1!=X1/X1)print(X1/88);print(X1);print(26+X1);;
770 :  print(23/read(1););IF((X1!=X1)OR(96<X1))X2=48;IF(38==X2)X3=17;;;print(50-X2+X2);X1=read(1);;
771 :  X1=read(2);;
772 :  print(X1/X1*30*13);LOOP(X1/59==X1*30)print(41-X1);;IF(47-X1==X1/X1)print(49*X1);X1=34;IF(13<X1)X1=19;;print(0/43);;print(31*24);
773 :  IF(X2/50!=78-X1)X1=28;print(74-11);LOOP(X3!=22)X2=40;;X1=59;print(35+X3);;X1=read(1);;IF(X1*2>65)print(3);;print(20/X1-59);
774 :  LOOP((X1==X2)OR(77<18))print(X3*X4);print(67);print(X3-X3);;LOOP(53!=62)print(76+X1);IF(X1<X3)X3=15;;;print(64*0);IF(X1<X2)IF(X3==28)X5=77;;LOOP(X6<X7)X7=97;;X1=33;;X1=read(2);;
775 :  X1=X1/X1-read(2);;
776 :  LOOP((X1>92)AND(X1>5))print(X1);print(X1/44);print(24/X1);print(90/X1);;X1=read(2);;
777 :  print(X1);X2=X2+X2/read(2);;X1=X1/X3;print(71/23/read(2););X3=read(2);;
778 :  IF(18-59>X1)print(X1);print(23);;print(94);print(X1);
779 :  IF(20+X1==X1)X1=53;print(X1-X1);;
780 :  X1=read(2);;print(54-X2);print(37+72);IF(X1+99<X1*48)IF(X2<42)X2=91;;print(67+9);print(X2);;
781 :  X1=read(1);;print(X1/84);
782 :  LOOP(41*62>11)print(X1/X1);IF(X1!=X1)X1=29;;print(54/X1);;
783 :  X1=59;IF(X1/X1==X1)LOOP(X1!=X1)X1=23;;LOOP(22>X1)X1=87;;;LOOP((97<X1)AND(70!=55))print(84*X1);;
784 :  IF(82-32<50+100)X1=77;X1=76;print(X1+X1);X2=51;IF(X3!=96)X3=95;;;
785 :  LOOP(X1+100!=71)print(20/X1);;LOOP((3<86)OR(X1!=56))print(X1-40);;
786 :  LOOP(66-X1==51+X1)print(X1);print(X1/89);print(53);print(X1-X1);print(X1);;print(67+44);print(read(1);*read(2););X1=2;
787 :  LOOP(X1>X1)LOOP(X1==98)X1=58;;X1=30;IF(18==39)X1=12;;;print(12+94);
788 :  print(31+read(1););LOOP((X1==X2)AND(24==69))print(X1);;IF(X1>40)IF(90>X2)X3=74;;X2=55;print(22*33);print(79/95);;
789 :  X1=X1*3;print(X1);
790 :  X1=X2;IF(X2+96>5/X1)X2=60;IF(72!=X3)X2=48;;;LOOP(18>62)IF(28>X3)X3=0;;;print(38/read(1););
791 :  IF(X2<63)print(100);LOOP(31>20)X2=79;;;print(X1);
792 :  print(60+17);
793 :  LOOP(((X1>X1)OR(X1==X1))AND(X1==88))X1=99;IF(X1<19)X1=64;;print(X1*X1);;X1=read(1);;
794 :  LOOP(X1>X1)X1=83;;print(61);LOOP(5/15!=X1)print(X1-X1);print(96+X1);print(7);print(0/40);;
795 :  print(X1/read(2););print(read(2);+28+75);
796 :  print(14+33+X1);X1=read(2);;IF(X1>100)IF(X1<51)X1=70;;;LOOP(67<X1)print(23);;print(X1);
797 :  X1=31;
798 :  LOOP(X1-X1>95+X1)IF(X2>X2)X1=1;;;print(read(1);+27+X1);LOOP(28/13!=78-5)IF(X1<6)X2=34;;X2=90;LOOP(30!=X1)X2=67;;;IF(15+7==50+12)IF(51<X1)X1=92;;X1=28;print(29);IF(X1<X2)X3=50;;;
799 :  IF(15!=38)print(68+X1);print(0);print(24*X1);print(72/X1);;
800 :  print(read(2);-X1+X1);
801 :  X1=58;
802 :  print(3+46);
803 :  print(read(2);-read(2););
804 :  print(X1/39*read(1););print(12);print(X1*X1+0);IF(27-68==20*74)print(95);LOOP(X1==29)X1=40;;LOOP(20==40)X1=42;;;
805 :  LOOP(57/58<35/18)print(X1/X1);;print(X1+30*X1);IF(16-X1!=X1)print(X1+59);print(X1-6);print(X1*X1);X1=96;;
806 :  print(18-66);X1=77;print(X1);
807 :  IF((5==X1)AND(83==62))IF(X1>X2)X2=9;;;print(92+X1*50/X1);IF(X1==X1)print(16+51);X1=93;;
808 :  print(22);
809 :  print(X1-18);IF(11-9==33)print(25);LOOP(44!=X1)X1=57;;;IF(X1/X1>X1-13)LOOP(53!=X1)X1=19;;print(X1+X1);;
810 :  print(X1+X1+read(1););print(read(2);-read(2););
811 :  print(100+X1);LOOP(X1*X1>X1-X1)X1=18;print(100);LOOP(X1>11)X1=34;;LOOP(X1!=X1)X1=15;;print(X2-62);;X1=82;
812 :  X1=read(2);*read(2);;
813 :  print(46*96);print(29*90);print(33);LOOP(X1==X1)LOOP(X1<X1)X1=59;;;
814 :  LOOP((X1>31)AND(33!=33))print(48);LOOP(90!=X1)X1=35;;LOOP(45<X1)X1=5;;print(59/X1);IF(X1>X1)X1=34;;;LOOP(X1!=72)IF(88>16)X1=19;;;IF(X1/44!=4/X1)print(X1);IF(X1>X1)X1=39;;;
815 :  print(25*read(1););
816 :  X1=80*34;print(22);
817 :  print(29/77);print(89/11);
818 :  LOOP((X1<60)AND(52<X1))IF(X1!=54)X1=26;;;print(50);print(read(1);/57-X1);
819 :  X1=21;LOOP((X1>X1)OR(70<X1))print(90-52);X1=62;LOOP(61<36)X2=58;;print(X2/71);;IF(3-X1<X1/91)print(86/X1);print(47+84);LOOP(33==18)X2=26;;;print(90-100*read(1););
820 :  IF(0!=9)IF(57==X1)X1=90;;print(X1+62);IF(X1<30)X2=3;;IF(X2<30)X2=99;;;print(X1/81+read(2););print(0);
821 :  print(59);print(read(1);-read(2););print(X1*X1);LOOP((X1>93)OR(27>X1))print(31/57);X1=89;print(9/X1);X1=73;X1=60;;
822 :  LOOP(X1<93)print(X1+71);;print(50);
823 :  IF(70*68<86/15)LOOP(58<X1)X1=1;;;print(27);X1=read(1);;
824 :  print(51);print(read(1);-X1);print(22+read(2););IF(19-53==X1)IF(X2>85)X2=69;;print(X2-38);X2=66;IF(90==9)X2=31;;print(X1);;print(read(2);+X1);
825 :  X1=X1*100;X1=12+91*59;
826 :  X1=36+X2*17;X1=read(1);;print(60);
827 :  X1=read(2);;IF(X1+X1!=78/47)print(X1+40);print(X1);IF(65>X1)X1=64;;print(46);print(X1/75);;LOOP(40/62<42)print(80/37);;IF(7*10==33)X1=79;print(37);;
828 :  IF(X1*82<X1)X1=4;IF(9>X1)X1=14;;;LOOP((31!=44)AND(47==84))IF(X1!=74)X1=22;;print(X1/X1);print(X1*X1);;
829 :  print(4);LOOP(99!=X1)IF(71<X1)X1=49;;;
830 :  print(X1);X1=read(1);;X1=X2*X2-read(2);;
831 :  print(50-X1);
832 :  LOOP(70*20==14)print(40);LOOP(71!=X1)X1=11;;print(X1-72);print(0-57);;LOOP((99==63)OR(X1>X1))print(87/43);;print(X1/22/X1-85);print(X1/27/100);X1=50*28*0-20;
833 :  print(24*X1-26);
834 :  print(96*71/77);print(81*read(2););LOOP(46<97)print(20*X1);;print(93/97);
835 :  print(8);IF(11>X1)print(21-X2);print(X1);print(72+69);LOOP(19<X1)X2=22;;;print(0);print(X1);
836 :  print(X1/X1);print(44);print(read(1);+29*13);
837 :  IF(77<30)print(95*37);X1=9;;
838 :  X1=read(2);;print(47-read(2););LOOP(96==57)print(89*86);;IF(27*60!=57+73)X2=20;print(X1);print(95-X2);IF(X1<78)X2=39;;;
839 :  print(X1);X1=X1+X1+X2+34;print(56);LOOP(X1<X1)X2=67;print(85/X2);IF(X2<X3)X4=91;;LOOP(51>X1)X3=54;;;print(X2*58);
840 :  print(39);
841 :  LOOP(X1+X1<66*X1)X2=62;;LOOP(X1*X1>X1/X1)LOOP(53>7)X2=7;;print(X2-X1);LOOP(19>X2)X1=38;;;
842 :  print(59);IF(29==61)IF(60==60)X1=69;;print(82/X1);IF(X1<X1)X1=83;;X1=40;;
843 :  print(95/X1);LOOP(((X1<X2)OR(80>34))AND(85>X1))X2=39;X3=94;print(X2);print(X1+56);;
844 :  IF((X2!=X2)OR(X3!=X3))X3=6;print(87);;IF(35!=X1)LOOP(4==99)X3=25;;;IF(X1<0)print(62*X1);print(89+72);;print(X1/62);IF(43==X1)print(X4*46);X2=33;X2=3;LOOP(X4==X1)X5=28;;IF(X1>0)X5=43;;;
845 :  LOOP(X1<51)X1=31;IF(28>87)X1=80;;print(X1/80);X1=13;IF(X1!=X2)X1=5;;;IF((X1!=X1)OR(70==56))X1=94;;LOOP(X1!=X1)print(32);;
846 :  X1=read(2);+X1/X1;print(77*read(2););LOOP(X1<30)print(56*40);print(X1-X1);print(X1+X1);print(60);print(X2-93);;
847 :  print(read(1);*X1/34);LOOP(93==X1)print(4);print(8*62);;LOOP(64>X1)print(87);X1=31;print(63);print(92);print(74*X1);;print(18);print(64+46);
848 :  print(read(2);-X1);X1=read(2);;print(X1+19);
849 :  LOOP((19==86)AND(95>X1))print(95*X2);IF(30<X1)X2=30;;;print(89-10);
850 :  LOOP(X1==36)X1=51;print(X2);;LOOP(X1+37==X1)print(75);print(X1-64);;print(read(2);/26-85);print(64);IF(81/X1==83+X1)X2=75;;
851 :  print(X1*X1+read(2););print(72+36+X1-X1);
852 :  print(X1+87);
853 :  IF(3<5)print(21-6);print(X1);;X1=X1;IF(83+67!=49)print(X3);;IF(X2-X2<X1*X2)print(X1/60);LOOP(X1>X1)X1=68;;LOOP(X1!=X1)X2=34;;;print(read(1);+7-76);
854 :  print(80);print(82*read(1););print(14);print(37);print(71-read(1););
855 :  print(X1/37);
856 :  IF(X1*X1<66-44)print(49);print(38-X1);;
857 :  IF(61>9)LOOP(11>X2)X1=99;;IF(X1<67)X2=86;;print(24);;LOOP(X1==X1)print(1);print(X2/97);print(X2+40);print(43*X1);IF(X2<X2)X2=60;;;print(37-X1);
858 :  IF(X1*X2<X2*97)print(X2+10);LOOP(X3!=18)X4=15;;LOOP(X2==62)X1=4;;LOOP(X2!=65)X4=17;;;print(X1-44*98+X2);print(55);LOOP(0>X1)X1=77;print(46);;
859 :  print(X1);
860 :  print(X1/X2);LOOP(95>57)print(61/X3);;IF(X1+27==2-82)X1=5;IF(2!=95)X1=93;;IF(25==17)X1=58;;;X1=30/read(2);;
861 :  print(10);
862 :  print(read(2);-79/X1);print(X1);print(X1);X1=85;
863 :  LOOP(24+X1==X1)print(43-X1);IF(3>X1)X1=43;;LOOP(X1>12)X1=14;;print(X2/21);;print(25);print(21-47-32);LOOP(33<76)print(X1);print(X1/60);X1=67;IF(X2==73)X2=43;;;
864 :  print(96);IF(90>98)X1=78;print(57-X1);;print(48);X1=read(2);;
865 :  print(52/X1/X1/X1);print(9+70);
866 :  print(95*read(1););IF(16-19>X1)IF(99>84)X1=74;;print(X1*4);;
867 :  X1=2;
868 :  IF(78==47)X1=48;;IF(X1==94)print(X1);;
869 :  X1=X2+84/33;
870 :  print(X1);IF(8>32)LOOP(3<11)X1=32;;print(X2*38);;
871 :  X1=X1;
872 :  LOOP(X1==2)print(X1);print(81);print(X1/X1);X1=46;X1=65;;X1=29/X1;
873 :  LOOP((X1>3)OR((25<X1)AND(X1<X1)))LOOP(82!=X1)X1=5;;;IF(X1!=1)IF(52<X1)X1=35;;LOOP(X1!=X1)X1=82;;LOOP(17>49)X1=98;;LOOP(69==83)X1=70;;;print(78+X1);print(96+19);
874 :  print(68-90);print(X2*23/read(1););print(X1);
875 :  X1=81;print(76);
876 :  print(5);
877 :  print(6/73);
878 :  X1=X1;IF(100/99<93-X1)IF(75>70)X1=58;;print(X1);print(X1-X1);LOOP(84>X2)X1=69;;X1=2;;X1=read(2);*read(2);;
879 :  print(X1);print(37*X1);print(62-89);IF(X1>X1)print(10*X2);IF(X1>X2)X1=67;;print(X2-9);;
880 :  print(read(1);/read(2););print(read(2);*X1+X1);print(X1);X1=64;
881 :  print(100+98);print(X1/2);
882 :  LOOP(86==X1)print(0);LOOP(X1<45)X1=93;;print(X1/3);;print(read(2);*read(1););
883 :  IF(37*78<X1*X1)LOOP(86==X1)X1=16;;;print(37+X1+read(1););
884 :  LOOP(5*54>X1-X1)print(1+12);print(55);;X1=6;IF(X1==X1)print(87);;LOOP((4<97)OR(62>46))print(X1);X1=18;X1=12;print(28);print(87/X1);;X1=78-12;
885 :  X1=read(1);-27/X1;IF(1<21)IF(X1==74)X1=69;;IF(34>X1)X1=36;;print(94);X1=44;;X1=25;print(X1);print(5/read(2););
886 :  print(51);print(read(1);-X1-X1);IF(69-X1==27)print(X1/X1);X1=30;LOOP(X1==X1)X1=24;;IF(50==38)X1=26;;;
887 :  IF(89>53)IF(X1>76)X2=49;;IF(62!=X1)X2=35;;;
888 :  LOOP(70<X1)print(X1+X1);X1=90;print(X1);X1=22;X1=98;;print(X1);
889 :  print(38);
890 :  LOOP(98>X1)print(45);X1=97;X1=86;print(63*X1);;IF(X1*66!=24/8)print(80/66);;IF(((X1==4)OR(X1==X1))AND((X1<X1)OR(33==X1)))print(X1*54);;
891 :  print(26+X1-X1);
892 :  print(73+X1*read(2););
893 :  IF(X1*14!=X1)X1=35;;
894 :  print(9);print(59);X1=63;print(87*read(2););
895 :  print(73*X1);IF(98<X1)IF(X1>10)X1=83;;print(59/24);;
896 :  print(100);
897 :  print(X1+75*84);print(79-12+96);print(X1+X1);
898 :  IF(90<46)print(X1);;IF(13/10==96/83)print(2/X1);print(X1);print(42*X1);X1=90;;LOOP(X1-X1==X1+X1)LOOP(X1==X1)X1=97;;LOOP(X1!=X1)X1=51;;;
899 :  LOOP(6/33<60)LOOP(X1<15)X1=51;;print(X2/X1);;print(X1-read(1););print(20-68+X1);print(47/4);
900 :  X1=70;
901 :  print(2-read(1););print(45);LOOP((X1<16)OR(95>16))X1=16;;
902 :  print(66);
903 :  X1=4;X2=48*read(2);;X2=X2/85+10;
904 :  IF(2!=67)print(X1-X1);print(93/X1);IF(X1!=X1)X1=10;;;LOOP(X1+2<51-14)IF(70==2)X1=51;;;
905 :  print(read(1);-X1*X2);
906 :  print(X1*77/6);X1=24*X1/read(1);;print(84);
907 :  LOOP((X1!=0)AND(23==34))LOOP(13>47)X1=55;;;X1=10+X1-X1;LOOP(86>X1)IF(X1>57)X1=6;;LOOP(X1!=X1)X1=29;;print(X1);print(18);;print(16+X1/read(1););
908 :  IF(X1!=37)X1=13;print(X1*53);;IF(62*X1<68/X1)print(X1);print(48+70);X1=16;X1=29;;
909 :  print(X1/X1*32);
910 :  print(X1-6+2);
911 :  print(17*76);
912 :  LOOP(67/18>X1/56)IF(X1>X1)X2=72;;LOOP(X1==X1)X2=42;;;print(read(1);+51+0);print(89);print(1);
913 :  X1=71;IF(55!=6)print(40-X1);;X1=68*read(2);;print(X1+26-87);X1=read(1);;
914 :  print(62+read(2););
915 :  print(46);
916 :  print(X1*X1+read(2););IF(25*96>X1/15)print(62);print(33/77);print(X1*X1);;
917 :  LOOP((X1<43)OR(27!=X2))IF(X3==X4)X1=86;;X1=27;IF(X1!=X4)X4=72;;print(3);;print(91);
918 :  IF(X1+73<X1)print(57-X2);print(X1-7);;print(X1-63/39/57);LOOP(X1*38>X1)LOOP(X3==97)X1=60;;X1=4;X2=79;;print(92);
919 :  print(84-25);print(84+X1*14);
920 :  LOOP((65<X1)AND(32!=X1))IF(30!=X1)X1=87;;print(X1*X1);IF(X1!=84)X1=65;;LOOP(X1!=71)X1=34;;IF(99<36)X1=47;;;
921 :  LOOP(X1-X1<X1)print(74/38);IF(82==22)X1=83;;;
922 :  X1=52;LOOP((33==0)OR(21<31))print(X1*X1);print(91);;
923 :  LOOP(60!=51)LOOP(X1>X1)X2=10;;LOOP(X2>9)X1=95;;IF(X2<82)X2=11;;;IF(5==X1)LOOP(X2==X1)X1=5;;;print(99/95);X1=40;print(86*X1);
924 :  X1=9;print(54);print(X1+21+X1*46);X2=read(2);;X1=X2-76*77;
925 :  IF(43==X1)print(X1+X1);print(58);IF(71<X1)X2=44;;print(24);print(65/X2);;LOOP(X1<99)LOOP(X1<X1)X1=9;;print(53*22);;
926 :  print(12);IF(X1*X1!=X1/X1)print(27);;
927 :  print(X1/X1+read(2););print(X1-0-read(2););
928 :  LOOP(20*X1>X1*X1)LOOP(98!=12)X1=59;;LOOP(X1==X1)X1=28;;IF(X1>56)X1=68;;X1=14;;X1=read(2);;
929 :  LOOP(30/X1==X1)IF(96>33)X1=78;;print(X1+46);print(X1-X2);print(79/15);;print(X1/36);print(X1*87);X1=23/0*48;
930 :  LOOP(X1*X1!=X1*X1)IF(X1>16)X1=82;;IF(X2<31)X2=70;;;print(9);
931 :  print(0*X1*X1);LOOP(X1*82<87+X1)IF(88==38)X1=51;;;
932 :  print(93+49/45+X1);
933 :  print(X1-63/X1+X1);print(74+X1-20);
934 :  print(38/12);print(33+73*X1);print(read(2);-39-X1);print(read(2);+58/X1);
935 :  LOOP(7/X1!=X1/28)IF(X1!=X1)X1=32;;print(X1-X1);IF(X1==X1)X1=50;;;
936 :  IF(X1/39!=39+40)print(X1+1);print(X1/46);;
937 :  IF(21<11)print(2);IF(51!=X1)X1=68;;LOOP(X1>X1)X1=38;;;print(X1/57);print(X1-4);
938 :  LOOP(X1!=36)print(X1/0);print(78+X1);print(X1+81);;
939 :  IF(37>X1)LOOP(33==X1)X1=81;;print(10*X1);print(X1/75);print(X1+X1);print(60*49);;print(97/read(2););print(X1);
940 :  print(14);print(read(2);/read(1););
941 :  IF((X1==X1)AND(X1==68))LOOP(3!=X1)X1=8;;LOOP(X2<94)X2=100;;print(14/96);;print(read(2);-read(1););print(56*X1*35+X1);
942 :  X1=59;IF(X1==33)print(X1/X1);LOOP(X2>44)X3=20;;;print(73/X2/95);X1=89-read(2);;
943 :  print(read(1);+read(1););
944 :  print(X1+X1+99);
945 :  X1=23;print(30);LOOP(X1!=X1)print(X1*39);X1=14;X1=21;;
946 :  X1=9+89+X1;IF(X1>87)print(X1*X1);LOOP(22==X1)X1=27;;print(98-X1);;print(98*read(2););print(X1);IF(23<60)X1=53;;
947 :  print(42);print(44-37+88);
948 :  print(read(2);/48+1);
949 :  IF(X1+10>72*X1)IF(15!=X1)X1=26;;;
950 :  print(54+69/X1);print(read(1);+27*X1);print(read(2);/X1+20);
951 :  print(X1/76);print(37);LOOP(73*66==92-X1)print(13*24);;
952 :  print(X1);
953 :  IF(X1/43!=34)X1=64;IF(90==62)X1=22;;print(91);LOOP(89<39)X1=12;;;print(X1);
954 :  IF(28==X1)IF(18!=76)X1=43;;LOOP(46<X1)X2=7;;;
955 :  print(38+14*X1/28);print(X1);
956 :  LOOP(9*X1>76)print(64/64);X1=12;LOOP(22==86)X1=82;;print(X1-92);X1=11;;
957 :  X1=83+2+read(2);;print(X1+X1+9);X1=88/56;IF(84+87>X1+91)IF(X1!=46)X1=49;;print(64-X2);IF(40==X1)X1=7;;;
958 :  LOOP(X1!=X1)LOOP(48<41)X1=87;;print(57);print(100+X1);;IF((X1!=46)AND(X1<34))print(X1+X2);IF(3!=X1)X2=96;;print(X2*X1);X1=2;LOOP(X2>X1)X2=86;;;print(X1*6*52);X1=41;
959 :  IF(81>X2)print(32/58);X1=68;;X1=read(1);;
960 :  print(48-X1);IF(X2+49==38-X1)IF(X3!=10)X3=22;;IF(X3<X2)X2=87;;print(85);;
961 :  print(7-X1);LOOP(87/X1!=X1+99)print(21/X1);;IF(13==X1)print(X2+91);LOOP(82==X1)X2=72;;print(X2/73);print(X2-55);IF(9<93)X1=46;;;print(52*40);LOOP(X1!=76)LOOP(80<39)X1=63;;IF(79!=X1)X2=99;;;
962 :  X1=X1-6;
963 :  LOOP(14+59==X1-20)IF(9<X1)X2=97;;;print(X1*98/read(1););IF((27>64)AND(X2>X2))IF(51<X3)X1=5;;;print(X1);X1=25;
964 :  X1=read(2);;print(62);print(read(2);+read(2););print(70);
965 :  X1=X1+39*read(2);;print(X1-44);
966 :  print(35+X2*60);IF(84<65)print(X2);;IF((7<X2)AND(55==33))print(X3-X2);print(X3-98);IF(6>X2)X4=53;;;X1=33-read(2);;
967 :  print(1*read(1););IF(10>X1)X1=75;;
968 :  print(46+read(2););
969 :  print(X1+X1*read(2););
970 :  print(54+79);LOOP(X1<6)print(X1-X1);LOOP(78>35)X1=91;;;print(read(1);/X1-94);IF(X1<X1)LOOP(X2!=74)X1=28;;;print(85*X1-read(1););
971 :  IF(92/77<X1*X1)IF(X1<0)X1=38;;LOOP(X1>90)X1=42;;;print(22*X1/X1+29);print(X1);print(24);
972 :  print(52+4*X1);IF(94!=53)print(36);print(X1);LOOP(X1!=X1)X2=64;;print(X1);;
973 :  X1=11*X1;LOOP(20<84)LOOP(X1<X1)X1=25;;IF(50>100)X1=17;;X1=46;IF(82!=X1)X1=87;;print(61/X1);;X1=47;print(16+96);print(80+95);
974 :  LOOP(X1<X1)IF(X1>X1)X1=96;;X2=66;IF(8>X1)X1=56;;print(72);LOOP(95==60)X2=3;;;X1=48*X1-X2;print(X1);print(49);print(37-read(2););
975 :  print(39);print(89);print(read(1);-50*56);
976 :  print(X1*X1+79*X1);IF(X1/59<64)IF(X2<53)X1=94;;print(80*X2);print(X2);LOOP(53==77)X2=69;;;LOOP(X2/X1>X1+95)print(74+76);print(X2*X2);print(X1/25);;IF(X2+67==X1+59)X2=6;print(18*X3);LOOP(96>77)X2=37;;IF(53!=83)X1=11;;print(32*39);;
977 :  LOOP(X1==70)print(84-40);print(4/X2);;print(X1-X2-X1*X1);print(X1);
978 :  IF(55/35!=93/X1)X2=74;print(80-X1);print(X2+27);print(35/X2);print(32);;LOOP((52!=61)AND(X1==X1))LOOP(89==X1)X1=9;;print(X1+X2);print(79*X1);;print(13+23);print(25);X1=23;
979 :  X1=read(2);;X1=read(1);;print(33*14);
980 :  print(X1/36-91);print(66+read(2););
981 :  print(read(1);*27*8);LOOP(57-X1==X1)print(X1+X1);X1=53;LOOP(69<X1)X1=27;;print(35*12);;IF(X1-76>15/82)X1=52;;print(94*read(2););
982 :  IF(36<84)print(87/7);print(X1/35);print(X1+59);;
983 :  print(54);print(85-read(1););
984 :  X1=9;LOOP(80<X2)X3=12;X1=21;IF(26==X1)X2=43;;;print(79/X1+61);X2=4;print(32);
985 :  IF(71<X1)X1=11;print(X1/36);print(X1);;print(read(2);*41+X1);print(75+30+100);IF(X1==X1)print(39*X1);IF(X1==X1)X1=55;;;LOOP(71==5)LOOP(92==49)X1=76;;X1=16;print(53+X1);;
986 :  print(97/8);print(X1/28);IF(X1==10)IF(20>64)X2=15;;;LOOP(X1>X1)IF(X2==87)X2=95;;LOOP(49!=90)X1=96;;;IF(X1*X1!=X1+X1)X2=45;LOOP(X1<66)X1=18;;IF(X2<41)X1=42;;print(X1*34);;
987 :  print(X1/X1*X1+84);LOOP(X1-48>X1+X1)IF(13<71)X1=74;;IF(30<0)X1=45;;;print(X1);print(89);print(X1);
988 :  print(13);IF(X1/X1<64)IF(X1!=X1)X1=11;;IF(52!=X1)X1=77;;print(93);;print(X1*X1+read(2););IF(45>48)IF(X1==X1)X1=80;;;print(68);
989 :  X1=1;print(96/X1);X1=X1;X1=2;
990 :  IF(X1*100==X1*X2)LOOP(X2!=X1)X3=51;;print(X2*35);IF(X3!=X3)X4=61;;LOOP(93>X4)X4=86;;LOOP(X1>3)X1=74;;;LOOP(39>45)print(48);print(X2*53);X1=58;;X1=read(1);-X2-X2;
991 :  print(X1+X1);
992 :  IF((37==52)OR(X1>8))X1=71;print(96-X1);X1=32;;IF(54>21)print(3/X1);LOOP(40<X1)X1=22;;IF(28<X1)X1=33;;;print(76/60/X1);IF(X1!=14)print(X1-30);print(X1*X2);;LOOP(11>8)print(X1*80);print(X2/X2);;
993 :  IF(X1==54)X1=0;X2=15;;LOOP(X1==X1)LOOP(X1==43)X2=89;;print(X2);print(65);print(X1+73);print(57);;
994 :  print(90);print(read(2);-54+72);X1=75-X1-X1;print(X1);
995 :  IF(72+54!=71/X1)print(65);IF(54!=X1)X1=37;;;LOOP(X1!=69)print(X1/98);;
996 :  print(65);
997 :  print(63+read(1););print(read(1);*X1/84);IF(X1>54)X1=71;;print(X1-X1+95);
998 :  LOOP(X1-29==X1*X1)X1=68;;print(read(1);/71*X1);LOOP(X2+11==X3*X1)X2=42;LOOP(X3<97)X1=79;;print(X1+X2);IF(X2==X3)X4=16;;X2=68;;
999 :  print(X2+64+read(1););print(18/X2/read(1););LOOP(7*63==X1)X2=78;IF(X3<63)X2=0;;LOOP(X1<42)X2=36;;print(X1*X3);;
Max initial depth:  5
Population size:  1000
Crossover rate:  0.6   Mutation rate:  0.7
Random population generated

Generation 0  ------------------------
Epochs without improvement: 0

Best fitness: -480000  best indiv:
[-3] [7, -3, -5] [-3]
[-2] [9, -2, 1] [1]
[-10] [-4, -10, 6] [-4]
[-10] [9, -10, 9] [9]
[4] [-7, 4, -3] [-3]
[-9] [-8, -9, 0] [-8]
[9] [7, 9, 1] [7]
[-9] [-8, -9, 8] [-8]
[-8] [-10, -8, -1] [-8]
[1] [5, 1, -4] [1]
[-8] [2, -8, 8] [2]
[8] [-10, 8, -8] [-8]
[-10] [-4, -10, 5] [-4]
[3] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[-5] [5, -5, -4] [-4]
[-5] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-4] [-2, -4, 2] [-2]
[-10] [2, -10, -10] [-10]
[-10] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-3] [-4, -3, -1] [-3]
[5] [-8, 5, 1] [1]
[-2] [-6, -2, 4] [-2]
[9] [-7, 9, 3] [3]
[-5] [2, -5, -9] [-5]
[-2] [-9, -2, -1] [-2]
[-2] [-10, -2, -7] [-7]
[-9] [-6, -9, -5] [-6]
[-2] [0, -2, -2] [-2]
[-5] [9, -5, 4] [4]
[-4] [0, -4, -2] [-2]
[4] [5, 4, 4] [4]
[9] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[6] [-9, 6, 7] [6]
[3] [4, 3, -2] [3]
[3] [-5, 3, -4] [-4]
[7] [9, 7, -9] [7]
[8] [-1, 8, -3] [-1]
[-6] [-8, -6, -7] [-7]
[-9] [2, -9, 8] [2]
[8] [-6, 8, -8] [-6]
[3] [7, 3, 1] [3]
[5] [4, 5, 6] [5]
[4] [-9, 4, -1] [-1]
[-5] [9, -5, -6] [-5]
[2] [0, 2, 1] [1]
[5] [-7, 5, 9] [5]
[1] [5, 1, 3] [3]
[-10] [2, -10, 9] [2]
[3] [-10, 3, 1] [1]
[-8] [-6, -8, 7] [-6]
[8] [9, 8, 8] [8]
[5] [9, 5, -3] [5]
[-10] [-9, -10, 3] [-9]
[5] [-3, 5, 0] [0]
[6] [-7, 6, -9] [-7]
[-3] [2, -3, -1] [-1]
[-4] [5, -4, 4] [4]
[8] [3, 8, -4] [3]
[3] [4, 3, -7] [3]
[-10] [-9, -10, 5] [-9]
[-10] [0, -10, -1] [-1]
[-7] [1, -7, 4] [1]
[2] [0, 2, 4] [2]
[9] [-5, 9, -3] [-3]
[-5] [7, -5, -8] [-5]
[1] [-1, 1, 3] [1]
[-3] [-2, -3, 7] [-2]
[9] [1, 9, -2] [1]
[-3] [0, -3, 8] [0]
[-3] [-5, -3, -1] [-3]
[-5] [0, -5, 8] [0]
[6] [2, 6, -8] [2]
[8] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[6] [7, 6, -4] [6]
[-4] [5, -4, 0] [0]
[7] [-9, 7, -6] [-6]
[-4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[6] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-3] [-10, -3, 7] [-3]
[-5] [7, -5, -5] [-5]
[-2] [8, -2, -8] [-2]
[-8] [3, -8, -5] [-5]
[-2] [8, -2, -2] [-2]
[-4] [-8, -4, -5] [-5]
[1] [-10, 1, 7] [1]
[-2] [-3, -2, -3] [-3]
[-10] [7, -10, 5] [5]
[9] [8, 9, 0] [8]
[-5] [4, -5, 2] [2]
[-3] [6, -3, 2] [2]
[7] [-9, 7, 6] [6]
[8] [-3, 8, 9] [8]
[-9] [-3, -9, 4] [-3]
[-580] [141, -580, 348] [141]
[-4] [495, -4, 223] [223]
[-700] [825, -700, -622] [-622]
[-86] [-720, -86, -290] [-290]
[597] [857, 597, -359] [597]
[210] [-393, 210, -461] [-393]
[117] [-977, 117, 482] [117]
[506] [-191, 506, -981] [-191]
[-305] [-473, -305, 137] [-305]
[-198] [534, -198, 847] [534]
[-29] [-713, -29, -748] [-713]
[-374] [-977, -374, -854] [-854]
[714] [-166, 714, 460] [460]
[-64] [-858, -64, 546] [-64]
[-378] [-536, -378, -392] [-392]
[457] [864, 457, -172] [457]
[360] [-297, 360, 95] [95]
[-685] [-969, -685, -441] [-685]
[696] [939, 696, 174] [696]
[-70] [198, -70, 851] [198]
[991] [-373, 991, -430] [-373]
[782] [765, 782, -97] [765]
[-235] [708, -235, -238] [-235]
[194] [794, 194, -897] [194]
[-733] [-826, -733, -604] [-733]
[-338] [879, -338, 868] [868]
[814] [309, 814, -14] [309]
[-2] [-169, -2, -980] [-169]
[-239] [856, -239, -206] [-206]
[574] [362, 574, -417] [362]
[-681] [-225, -681, -945] [-681]
[-86] [896, -86, 279] [279]
[777] [-349, 777, 260] [260]
[-945] [-785, -945, 555] [-785]
[-754] [643, -754, 644] [643]
[874] [-640, 874, 551] [551]
[36] [-322, 36, 140] [36]
[269] [-746, 269, 514] [269]
[-224] [-442, -224, 779] [-224]
[950] [593, 950, -41] [593]
[-818] [-336, -818, 652] [-336]
[926] [850, 926, 594] [850]
[-787] [801, -787, 656] [656]
[682] [-670, 682, 980] [682]
[617] [-227, 617, -430] [-227]
[-793] [-103, -793, 50] [-103]
[92] [412, 92, 298] [298]
[-151] [-967, -151, -405] [-405]
[-441] [-113, -441, -297] [-297]
[702] [-49, 702, -147] [-49]
print(read(2);*X1);  =  -480000
AVG fitness:  -986670
Nr of point mutations:  3043
Nr of subtree mutations:  729

Generation 1  ------------------------
Epochs without improvement: 0

Best fitness: -480000  best indiv:
[-3] [7, -3, -5] [-3]
[-2] [9, -2, 1] [1]
[-10] [-4, -10, 6] [-4]
[-10] [9, -10, 9] [9]
[4] [-7, 4, -3] [-3]
[-9] [-8, -9, 0] [-8]
[9] [7, 9, 1] [7]
[-9] [-8, -9, 8] [-8]
[-8] [-10, -8, -1] [-8]
[1] [5, 1, -4] [1]
[-8] [2, -8, 8] [2]
[8] [-10, 8, -8] [-8]
[-10] [-4, -10, 5] [-4]
[3] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[-5] [5, -5, -4] [-4]
[-5] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-4] [-2, -4, 2] [-2]
[-10] [2, -10, -10] [-10]
[-10] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-3] [-4, -3, -1] [-3]
[5] [-8, 5, 1] [1]
[-2] [-6, -2, 4] [-2]
[9] [-7, 9, 3] [3]
[-5] [2, -5, -9] [-5]
[-2] [-9, -2, -1] [-2]
[-2] [-10, -2, -7] [-7]
[-9] [-6, -9, -5] [-6]
[-2] [0, -2, -2] [-2]
[-5] [9, -5, 4] [4]
[-4] [0, -4, -2] [-2]
[4] [5, 4, 4] [4]
[9] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[6] [-9, 6, 7] [6]
[3] [4, 3, -2] [3]
[3] [-5, 3, -4] [-4]
[7] [9, 7, -9] [7]
[8] [-1, 8, -3] [-1]
[-6] [-8, -6, -7] [-7]
[-9] [2, -9, 8] [2]
[8] [-6, 8, -8] [-6]
[3] [7, 3, 1] [3]
[5] [4, 5, 6] [5]
[4] [-9, 4, -1] [-1]
[-5] [9, -5, -6] [-5]
[2] [0, 2, 1] [1]
[5] [-7, 5, 9] [5]
[1] [5, 1, 3] [3]
[-10] [2, -10, 9] [2]
[3] [-10, 3, 1] [1]
[-8] [-6, -8, 7] [-6]
[8] [9, 8, 8] [8]
[5] [9, 5, -3] [5]
[-10] [-9, -10, 3] [-9]
[5] [-3, 5, 0] [0]
[6] [-7, 6, -9] [-7]
[-3] [2, -3, -1] [-1]
[-4] [5, -4, 4] [4]
[8] [3, 8, -4] [3]
[3] [4, 3, -7] [3]
[-10] [-9, -10, 5] [-9]
[-10] [0, -10, -1] [-1]
[-7] [1, -7, 4] [1]
[2] [0, 2, 4] [2]
[9] [-5, 9, -3] [-3]
[-5] [7, -5, -8] [-5]
[1] [-1, 1, 3] [1]
[-3] [-2, -3, 7] [-2]
[9] [1, 9, -2] [1]
[-3] [0, -3, 8] [0]
[-3] [-5, -3, -1] [-3]
[-5] [0, -5, 8] [0]
[6] [2, 6, -8] [2]
[8] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[6] [7, 6, -4] [6]
[-4] [5, -4, 0] [0]
[7] [-9, 7, -6] [-6]
[-4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[6] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-3] [-10, -3, 7] [-3]
[-5] [7, -5, -5] [-5]
[-2] [8, -2, -8] [-2]
[-8] [3, -8, -5] [-5]
[-2] [8, -2, -2] [-2]
[-4] [-8, -4, -5] [-5]
[1] [-10, 1, 7] [1]
[-2] [-3, -2, -3] [-3]
[-10] [7, -10, 5] [5]
[9] [8, 9, 0] [8]
[-5] [4, -5, 2] [2]
[-3] [6, -3, 2] [2]
[7] [-9, 7, 6] [6]
[8] [-3, 8, 9] [8]
[-9] [-3, -9, 4] [-3]
[-580] [141, -580, 348] [141]
[-4] [495, -4, 223] [223]
[-700] [825, -700, -622] [-622]
[-86] [-720, -86, -290] [-290]
[597] [857, 597, -359] [597]
[210] [-393, 210, -461] [-393]
[117] [-977, 117, 482] [117]
[506] [-191, 506, -981] [-191]
[-305] [-473, -305, 137] [-305]
[-198] [534, -198, 847] [534]
[-29] [-713, -29, -748] [-713]
[-374] [-977, -374, -854] [-854]
[714] [-166, 714, 460] [460]
[-64] [-858, -64, 546] [-64]
[-378] [-536, -378, -392] [-392]
[457] [864, 457, -172] [457]
[360] [-297, 360, 95] [95]
[-685] [-969, -685, -441] [-685]
[696] [939, 696, 174] [696]
[-70] [198, -70, 851] [198]
[991] [-373, 991, -430] [-373]
[782] [765, 782, -97] [765]
[-235] [708, -235, -238] [-235]
[194] [794, 194, -897] [194]
[-733] [-826, -733, -604] [-733]
[-338] [879, -338, 868] [868]
[814] [309, 814, -14] [309]
[-2] [-169, -2, -980] [-169]
[-239] [856, -239, -206] [-206]
[574] [362, 574, -417] [362]
[-681] [-225, -681, -945] [-681]
[-86] [896, -86, 279] [279]
[777] [-349, 777, 260] [260]
[-945] [-785, -945, 555] [-785]
[-754] [643, -754, 644] [643]
[874] [-640, 874, 551] [551]
[36] [-322, 36, 140] [36]
[269] [-746, 269, 514] [269]
[-224] [-442, -224, 779] [-224]
[950] [593, 950, -41] [593]
[-818] [-336, -818, 652] [-336]
[926] [850, 926, 594] [850]
[-787] [801, -787, 656] [656]
[682] [-670, 682, 980] [682]
[617] [-227, 617, -430] [-227]
[-793] [-103, -793, 50] [-103]
[92] [412, 92, 298] [298]
[-151] [-967, -151, -405] [-405]
[-441] [-113, -441, -297] [-297]
[702] [-49, 702, -147] [-49]
print(read(2);*X1);  =  -480000
AVG fitness:  -745223
Nr of point mutations:  1648
Nr of subtree mutations:  463

Generation 2  ------------------------
Epochs without improvement: 1

Best fitness: -480000  best indiv:
[-3] [7, -3, -5] [-3]
[-2] [9, -2, 1] [1]
[-10] [-4, -10, 6] [-4]
[-10] [9, -10, 9] [9]
[4] [-7, 4, -3] [-3]
[-9] [-8, -9, 0] [-8]
[9] [7, 9, 1] [7]
[-9] [-8, -9, 8] [-8]
[-8] [-10, -8, -1] [-8]
[1] [5, 1, -4] [1]
[-8] [2, -8, 8] [2]
[8] [-10, 8, -8] [-8]
[-10] [-4, -10, 5] [-4]
[3] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[-5] [5, -5, -4] [-4]
[-5] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-4] [-2, -4, 2] [-2]
[-10] [2, -10, -10] [-10]
[-10] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-3] [-4, -3, -1] [-3]
[5] [-8, 5, 1] [1]
[-2] [-6, -2, 4] [-2]
[9] [-7, 9, 3] [3]
[-5] [2, -5, -9] [-5]
[-2] [-9, -2, -1] [-2]
[-2] [-10, -2, -7] [-7]
[-9] [-6, -9, -5] [-6]
[-2] [0, -2, -2] [-2]
[-5] [9, -5, 4] [4]
[-4] [0, -4, -2] [-2]
[4] [5, 4, 4] [4]
[9] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[6] [-9, 6, 7] [6]
[3] [4, 3, -2] [3]
[3] [-5, 3, -4] [-4]
[7] [9, 7, -9] [7]
[8] [-1, 8, -3] [-1]
[-6] [-8, -6, -7] [-7]
[-9] [2, -9, 8] [2]
[8] [-6, 8, -8] [-6]
[3] [7, 3, 1] [3]
[5] [4, 5, 6] [5]
[4] [-9, 4, -1] [-1]
[-5] [9, -5, -6] [-5]
[2] [0, 2, 1] [1]
[5] [-7, 5, 9] [5]
[1] [5, 1, 3] [3]
[-10] [2, -10, 9] [2]
[3] [-10, 3, 1] [1]
[-8] [-6, -8, 7] [-6]
[8] [9, 8, 8] [8]
[5] [9, 5, -3] [5]
[-10] [-9, -10, 3] [-9]
[5] [-3, 5, 0] [0]
[6] [-7, 6, -9] [-7]
[-3] [2, -3, -1] [-1]
[-4] [5, -4, 4] [4]
[8] [3, 8, -4] [3]
[3] [4, 3, -7] [3]
[-10] [-9, -10, 5] [-9]
[-10] [0, -10, -1] [-1]
[-7] [1, -7, 4] [1]
[2] [0, 2, 4] [2]
[9] [-5, 9, -3] [-3]
[-5] [7, -5, -8] [-5]
[1] [-1, 1, 3] [1]
[-3] [-2, -3, 7] [-2]
[9] [1, 9, -2] [1]
[-3] [0, -3, 8] [0]
[-3] [-5, -3, -1] [-3]
[-5] [0, -5, 8] [0]
[6] [2, 6, -8] [2]
[8] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[6] [7, 6, -4] [6]
[-4] [5, -4, 0] [0]
[7] [-9, 7, -6] [-6]
[-4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[6] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-3] [-10, -3, 7] [-3]
[-5] [7, -5, -5] [-5]
[-2] [8, -2, -8] [-2]
[-8] [3, -8, -5] [-5]
[-2] [8, -2, -2] [-2]
[-4] [-8, -4, -5] [-5]
[1] [-10, 1, 7] [1]
[-2] [-3, -2, -3] [-3]
[-10] [7, -10, 5] [5]
[9] [8, 9, 0] [8]
[-5] [4, -5, 2] [2]
[-3] [6, -3, 2] [2]
[7] [-9, 7, 6] [6]
[8] [-3, 8, 9] [8]
[-9] [-3, -9, 4] [-3]
[-580] [141, -580, 348] [141]
[-4] [495, -4, 223] [223]
[-700] [825, -700, -622] [-622]
[-86] [-720, -86, -290] [-290]
[597] [857, 597, -359] [597]
[210] [-393, 210, -461] [-393]
[117] [-977, 117, 482] [117]
[506] [-191, 506, -981] [-191]
[-305] [-473, -305, 137] [-305]
[-198] [534, -198, 847] [534]
[-29] [-713, -29, -748] [-713]
[-374] [-977, -374, -854] [-854]
[714] [-166, 714, 460] [460]
[-64] [-858, -64, 546] [-64]
[-378] [-536, -378, -392] [-392]
[457] [864, 457, -172] [457]
[360] [-297, 360, 95] [95]
[-685] [-969, -685, -441] [-685]
[696] [939, 696, 174] [696]
[-70] [198, -70, 851] [198]
[991] [-373, 991, -430] [-373]
[782] [765, 782, -97] [765]
[-235] [708, -235, -238] [-235]
[194] [794, 194, -897] [194]
[-733] [-826, -733, -604] [-733]
[-338] [879, -338, 868] [868]
[814] [309, 814, -14] [309]
[-2] [-169, -2, -980] [-169]
[-239] [856, -239, -206] [-206]
[574] [362, 574, -417] [362]
[-681] [-225, -681, -945] [-681]
[-86] [896, -86, 279] [279]
[777] [-349, 777, 260] [260]
[-945] [-785, -945, 555] [-785]
[-754] [643, -754, 644] [643]
[874] [-640, 874, 551] [551]
[36] [-322, 36, 140] [36]
[269] [-746, 269, 514] [269]
[-224] [-442, -224, 779] [-224]
[950] [593, 950, -41] [593]
[-818] [-336, -818, 652] [-336]
[926] [850, 926, 594] [850]
[-787] [801, -787, 656] [656]
[682] [-670, 682, 980] [682]
[617] [-227, 617, -430] [-227]
[-793] [-103, -793, 50] [-103]
[92] [412, 92, 298] [298]
[-151] [-967, -151, -405] [-405]
[-441] [-113, -441, -297] [-297]
[702] [-49, 702, -147] [-49]
print(read(2);*X1);  =  -480000
AVG fitness:  -742689
Nr of point mutations:  1452
Nr of subtree mutations:  444

Generation 3  ------------------------
Epochs without improvement: 2

Best fitness: -480000  best indiv:
[-3] [7, -3, -5] [-3]
[-2] [9, -2, 1] [1]
[-10] [-4, -10, 6] [-4]
[-10] [9, -10, 9] [9]
[4] [-7, 4, -3] [-3]
[-9] [-8, -9, 0] [-8]
[9] [7, 9, 1] [7]
[-9] [-8, -9, 8] [-8]
[-8] [-10, -8, -1] [-8]
[1] [5, 1, -4] [1]
[-8] [2, -8, 8] [2]
[8] [-10, 8, -8] [-8]
[-10] [-4, -10, 5] [-4]
[3] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[-5] [5, -5, -4] [-4]
[-5] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-4] [-2, -4, 2] [-2]
[-10] [2, -10, -10] [-10]
[-10] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-3] [-4, -3, -1] [-3]
[5] [-8, 5, 1] [1]
[-2] [-6, -2, 4] [-2]
[9] [-7, 9, 3] [3]
[-5] [2, -5, -9] [-5]
[-2] [-9, -2, -1] [-2]
[-2] [-10, -2, -7] [-7]
[-9] [-6, -9, -5] [-6]
[-2] [0, -2, -2] [-2]
[-5] [9, -5, 4] [4]
[-4] [0, -4, -2] [-2]
[4] [5, 4, 4] [4]
[9] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[6] [-9, 6, 7] [6]
[3] [4, 3, -2] [3]
[3] [-5, 3, -4] [-4]
[7] [9, 7, -9] [7]
[8] [-1, 8, -3] [-1]
[-6] [-8, -6, -7] [-7]
[-9] [2, -9, 8] [2]
[8] [-6, 8, -8] [-6]
[3] [7, 3, 1] [3]
[5] [4, 5, 6] [5]
[4] [-9, 4, -1] [-1]
[-5] [9, -5, -6] [-5]
[2] [0, 2, 1] [1]
[5] [-7, 5, 9] [5]
[1] [5, 1, 3] [3]
[-10] [2, -10, 9] [2]
[3] [-10, 3, 1] [1]
[-8] [-6, -8, 7] [-6]
[8] [9, 8, 8] [8]
[5] [9, 5, -3] [5]
[-10] [-9, -10, 3] [-9]
[5] [-3, 5, 0] [0]
[6] [-7, 6, -9] [-7]
[-3] [2, -3, -1] [-1]
[-4] [5, -4, 4] [4]
[8] [3, 8, -4] [3]
[3] [4, 3, -7] [3]
[-10] [-9, -10, 5] [-9]
[-10] [0, -10, -1] [-1]
[-7] [1, -7, 4] [1]
[2] [0, 2, 4] [2]
[9] [-5, 9, -3] [-3]
[-5] [7, -5, -8] [-5]
[1] [-1, 1, 3] [1]
[-3] [-2, -3, 7] [-2]
[9] [1, 9, -2] [1]
[-3] [0, -3, 8] [0]
[-3] [-5, -3, -1] [-3]
[-5] [0, -5, 8] [0]
[6] [2, 6, -8] [2]
[8] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[6] [7, 6, -4] [6]
[-4] [5, -4, 0] [0]
[7] [-9, 7, -6] [-6]
[-4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[6] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-3] [-10, -3, 7] [-3]
[-5] [7, -5, -5] [-5]
[-2] [8, -2, -8] [-2]
[-8] [3, -8, -5] [-5]
[-2] [8, -2, -2] [-2]
[-4] [-8, -4, -5] [-5]
[1] [-10, 1, 7] [1]
[-2] [-3, -2, -3] [-3]
[-10] [7, -10, 5] [5]
[9] [8, 9, 0] [8]
[-5] [4, -5, 2] [2]
[-3] [6, -3, 2] [2]
[7] [-9, 7, 6] [6]
[8] [-3, 8, 9] [8]
[-9] [-3, -9, 4] [-3]
[-580] [141, -580, 348] [141]
[-4] [495, -4, 223] [223]
[-700] [825, -700, -622] [-622]
[-86] [-720, -86, -290] [-290]
[597] [857, 597, -359] [597]
[210] [-393, 210, -461] [-393]
[117] [-977, 117, 482] [117]
[506] [-191, 506, -981] [-191]
[-305] [-473, -305, 137] [-305]
[-198] [534, -198, 847] [534]
[-29] [-713, -29, -748] [-713]
[-374] [-977, -374, -854] [-854]
[714] [-166, 714, 460] [460]
[-64] [-858, -64, 546] [-64]
[-378] [-536, -378, -392] [-392]
[457] [864, 457, -172] [457]
[360] [-297, 360, 95] [95]
[-685] [-969, -685, -441] [-685]
[696] [939, 696, 174] [696]
[-70] [198, -70, 851] [198]
[991] [-373, 991, -430] [-373]
[782] [765, 782, -97] [765]
[-235] [708, -235, -238] [-235]
[194] [794, 194, -897] [194]
[-733] [-826, -733, -604] [-733]
[-338] [879, -338, 868] [868]
[814] [309, 814, -14] [309]
[-2] [-169, -2, -980] [-169]
[-239] [856, -239, -206] [-206]
[574] [362, 574, -417] [362]
[-681] [-225, -681, -945] [-681]
[-86] [896, -86, 279] [279]
[777] [-349, 777, 260] [260]
[-945] [-785, -945, 555] [-785]
[-754] [643, -754, 644] [643]
[874] [-640, 874, 551] [551]
[36] [-322, 36, 140] [36]
[269] [-746, 269, 514] [269]
[-224] [-442, -224, 779] [-224]
[950] [593, 950, -41] [593]
[-818] [-336, -818, 652] [-336]
[926] [850, 926, 594] [850]
[-787] [801, -787, 656] [656]
[682] [-670, 682, 980] [682]
[617] [-227, 617, -430] [-227]
[-793] [-103, -793, 50] [-103]
[92] [412, 92, 298] [298]
[-151] [-967, -151, -405] [-405]
[-441] [-113, -441, -297] [-297]
[702] [-49, 702, -147] [-49]
print(read(2);*X7);  =  -480000
AVG fitness:  -703527
Nr of point mutations:  1140
Nr of subtree mutations:  344

Generation 4  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -765764
Nr of point mutations:  760
Nr of subtree mutations:  235

Generation 5  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -624436
Nr of point mutations:  827
Nr of subtree mutations:  251

Generation 6  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -654475
Nr of point mutations:  965
Nr of subtree mutations:  257

Generation 7  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -663520
Nr of point mutations:  987
Nr of subtree mutations:  261

Generation 8  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -586971
Nr of point mutations:  864
Nr of subtree mutations:  237

Generation 9  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -588885
Nr of point mutations:  582
Nr of subtree mutations:  213
450   generated again

Generation 10  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -612177
Nr of point mutations:  719
Nr of subtree mutations:  246

Generation 11  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -559046
Nr of point mutations:  561
Nr of subtree mutations:  204

Generation 12  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -514485
Nr of point mutations:  408
Nr of subtree mutations:  188

Generation 13  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -540358
Nr of point mutations:  339
Nr of subtree mutations:  183

Generation 14  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -510790
Nr of point mutations:  366
Nr of subtree mutations:  195
450   generated again

Generation 15  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -625321
Nr of point mutations:  378
Nr of subtree mutations:  183

Generation 16  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -565596
Nr of point mutations:  366
Nr of subtree mutations:  180

Generation 17  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -529857
Nr of point mutations:  412
Nr of subtree mutations:  165

Generation 18  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -523092
Nr of point mutations:  368
Nr of subtree mutations:  138

Generation 19  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -524045
Nr of point mutations:  353
Nr of subtree mutations:  152
450   generated again

Generation 20  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -572426
Nr of point mutations:  346
Nr of subtree mutations:  153

Generation 21  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -530084
Nr of point mutations:  359
Nr of subtree mutations:  156

Generation 22  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -525778
Nr of point mutations:  363
Nr of subtree mutations:  181

Generation 23  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -528731
Nr of point mutations:  329
Nr of subtree mutations:  169

Generation 24  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -507645
Nr of point mutations:  373
Nr of subtree mutations:  194
450   generated again

Generation 25  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -585938
Nr of point mutations:  357
Nr of subtree mutations:  184

Generation 26  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -547026
Nr of point mutations:  359
Nr of subtree mutations:  181

Generation 27  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -515960
Nr of point mutations:  334
Nr of subtree mutations:  146

Generation 28  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -507405
Nr of point mutations:  359
Nr of subtree mutations:  190

Generation 29  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -512185
Nr of point mutations:  300
Nr of subtree mutations:  163
450   generated again

Generation 30  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -582052
Nr of point mutations:  368
Nr of subtree mutations:  166

Generation 31  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -534420
Nr of point mutations:  322
Nr of subtree mutations:  175

Generation 32  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -512095
Nr of point mutations:  308
Nr of subtree mutations:  162

Generation 33  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -509405
Nr of point mutations:  321
Nr of subtree mutations:  157

Generation 34  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -515580
Nr of point mutations:  344
Nr of subtree mutations:  171
450   generated again

Generation 35  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -570516
Nr of point mutations:  327
Nr of subtree mutations:  179

Generation 36  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -531465
Nr of point mutations:  350
Nr of subtree mutations:  189

Generation 37  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -512395
Nr of point mutations:  308
Nr of subtree mutations:  189

Generation 38  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -510050
Nr of point mutations:  368
Nr of subtree mutations:  143

Generation 39  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -510565
Nr of point mutations:  309
Nr of subtree mutations:  174
450   generated again

Generation 40  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -593045
Nr of point mutations:  324
Nr of subtree mutations:  169

Generation 41  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -537585
Nr of point mutations:  324
Nr of subtree mutations:  164

Generation 42  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -513570
Nr of point mutations:  306
Nr of subtree mutations:  169

Generation 43  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -514760
Nr of point mutations:  327
Nr of subtree mutations:  170

Generation 44  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -516320
Nr of point mutations:  330
Nr of subtree mutations:  168
450   generated again

Generation 45  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -569013
Nr of point mutations:  336
Nr of subtree mutations:  164

Generation 46  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -532225
Nr of point mutations:  303
Nr of subtree mutations:  156

Generation 47  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -514175
Nr of point mutations:  314
Nr of subtree mutations:  160

Generation 48  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -506820
Nr of point mutations:  319
Nr of subtree mutations:  140

Generation 49  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -511700
Nr of point mutations:  307
Nr of subtree mutations:  145
450   generated again

Generation 50  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -573171
Nr of point mutations:  291
Nr of subtree mutations:  173

Generation 51  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -532801
Nr of point mutations:  351
Nr of subtree mutations:  160

Generation 52  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -514335
Nr of point mutations:  301
Nr of subtree mutations:  151

Generation 53  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -506370
Nr of point mutations:  339
Nr of subtree mutations:  174

Generation 54  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -512010
Nr of point mutations:  314
Nr of subtree mutations:  175
450   generated again

Generation 55  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -576258
Nr of point mutations:  320
Nr of subtree mutations:  160

Generation 56  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -533970
Nr of point mutations:  293
Nr of subtree mutations:  159

Generation 57  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -509435
Nr of point mutations:  336
Nr of subtree mutations:  173

Generation 58  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -511890
Nr of point mutations:  307
Nr of subtree mutations:  130

Generation 59  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -511855
Nr of point mutations:  333
Nr of subtree mutations:  173
450   generated again

Generation 60  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -575579
Nr of point mutations:  329
Nr of subtree mutations:  167

Generation 61  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -536540
Nr of point mutations:  316
Nr of subtree mutations:  173

Generation 62  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -511730
Nr of point mutations:  313
Nr of subtree mutations:  149

Generation 63  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -513895
Nr of point mutations:  302
Nr of subtree mutations:  176

Generation 64  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -513660
Nr of point mutations:  340
Nr of subtree mutations:  160
450   generated again

Generation 65  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -567234
Nr of point mutations:  308
Nr of subtree mutations:  169

Generation 66  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -530840
Nr of point mutations:  309
Nr of subtree mutations:  169

Generation 67  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -512240
Nr of point mutations:  363
Nr of subtree mutations:  193

Generation 68  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -511970
Nr of point mutations:  335
Nr of subtree mutations:  168

Generation 69  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -513190
Nr of point mutations:  335
Nr of subtree mutations:  156
450   generated again

Generation 70  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -571935
Nr of point mutations:  291
Nr of subtree mutations:  160

Generation 71  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -528625
Nr of point mutations:  349
Nr of subtree mutations:  204

Generation 72  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -512135
Nr of point mutations:  342
Nr of subtree mutations:  167

Generation 73  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -509510
Nr of point mutations:  339
Nr of subtree mutations:  171

Generation 74  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -514545
Nr of point mutations:  313
Nr of subtree mutations:  140
450   generated again

Generation 75  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -570475
Nr of point mutations:  347
Nr of subtree mutations:  184

Generation 76  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -528045
Nr of point mutations:  319
Nr of subtree mutations:  180

Generation 77  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -512395
Nr of point mutations:  352
Nr of subtree mutations:  149

Generation 78  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -515550
Nr of point mutations:  312
Nr of subtree mutations:  164

Generation 79  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -511755
Nr of point mutations:  343
Nr of subtree mutations:  164
450   generated again

Generation 80  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -609971
Nr of point mutations:  331
Nr of subtree mutations:  170

Generation 81  ------------------------
Epochs without improvement: 1

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -532695
Nr of point mutations:  359
Nr of subtree mutations:  183

Generation 82  ------------------------
Epochs without improvement: 2

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -510240
Nr of point mutations:  331
Nr of subtree mutations:  156

Generation 83  ------------------------
Epochs without improvement: 3

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -511460
Nr of point mutations:  351
Nr of subtree mutations:  162

Generation 84  ------------------------
Epochs without improvement: 4

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -512900
Nr of point mutations:  291
Nr of subtree mutations:  147
450   generated again

Generation 85  ------------------------
Epochs without improvement: 0

Best fitness: -475000  best indiv:
[7] [7, -3, -5] [-3]
[9] [9, -2, 1] [1]
[-4] [-4, -10, 6] [-4]
[9] [9, -10, 9] [9]
[-7] [-7, 4, -3] [-3]
[-8] [-8, -9, 0] [-8]
[7] [7, 9, 1] [7]
[-8] [-8, -9, 8] [-8]
[-10] [-10, -8, -1] [-8]
[5] [5, 1, -4] [1]
[2] [2, -8, 8] [2]
[-10] [-10, 8, -8] [-8]
[-4] [-4, -10, 5] [-4]
[9] [9, 3, 2] [3]
[0] [-7, 0, -3] [-3]
[5] [5, -5, -4] [-4]
[9] [9, -5, 1] [1]
[2] [2, 2, -3] [2]
[-2] [-2, -4, 2] [-2]
[2] [2, -10, -10] [-10]
[1] [1, -10, -4] [-4]
[0] [-2, 0, 2] [0]
[-4] [-4, -3, -1] [-3]
[-8] [-8, 5, 1] [1]
[-6] [-6, -2, 4] [-2]
[-7] [-7, 9, 3] [3]
[2] [2, -5, -9] [-5]
[-9] [-9, -2, -1] [-2]
[-10] [-10, -2, -7] [-7]
[-6] [-6, -9, -5] [-6]
[0] [0, -2, -2] [-2]
[9] [9, -5, 4] [4]
[0] [0, -4, -2] [-2]
[5] [5, 4, 4] [4]
[-1] [-1, 9, -10] [-1]
[0] [-2, 0, 6] [0]
[-9] [-9, 6, 7] [6]
[4] [4, 3, -2] [3]
[-5] [-5, 3, -4] [-4]
[9] [9, 7, -9] [7]
[-1] [-1, 8, -3] [-1]
[-8] [-8, -6, -7] [-7]
[2] [2, -9, 8] [2]
[-6] [-6, 8, -8] [-6]
[7] [7, 3, 1] [3]
[4] [4, 5, 6] [5]
[-9] [-9, 4, -1] [-1]
[9] [9, -5, -6] [-5]
[0] [0, 2, 1] [1]
[-7] [-7, 5, 9] [5]
[5] [5, 1, 3] [3]
[2] [2, -10, 9] [2]
[-10] [-10, 3, 1] [1]
[-6] [-6, -8, 7] [-6]
[9] [9, 8, 8] [8]
[9] [9, 5, -3] [5]
[-9] [-9, -10, 3] [-9]
[-3] [-3, 5, 0] [0]
[-7] [-7, 6, -9] [-7]
[2] [2, -3, -1] [-1]
[5] [5, -4, 4] [4]
[3] [3, 8, -4] [3]
[4] [4, 3, -7] [3]
[-9] [-9, -10, 5] [-9]
[0] [0, -10, -1] [-1]
[1] [1, -7, 4] [1]
[0] [0, 2, 4] [2]
[-5] [-5, 9, -3] [-3]
[7] [7, -5, -8] [-5]
[-1] [-1, 1, 3] [1]
[-2] [-2, -3, 7] [-2]
[1] [1, 9, -2] [1]
[0] [0, -3, 8] [0]
[-5] [-5, -3, -1] [-3]
[0] [0, -5, 8] [0]
[2] [2, 6, -8] [2]
[-2] [-2, 8, -5] [-2]
[-2] [-2, -2, -10] [-2]
[7] [7, 6, -4] [6]
[5] [5, -4, 0] [0]
[-9] [-9, 7, -6] [-6]
[4] [4, -4, -9] [-4]
[-6] [-6, -6, -9] [-6]
[4] [4, 6, -9] [4]
[1] [1, 1, 3] [1]
[-10] [-10, -3, 7] [-3]
[7] [7, -5, -5] [-5]
[8] [8, -2, -8] [-2]
[3] [3, -8, -5] [-5]
[8] [8, -2, -2] [-2]
[-8] [-8, -4, -5] [-5]
[-10] [-10, 1, 7] [1]
[-3] [-3, -2, -3] [-3]
[7] [7, -10, 5] [5]
[8] [8, 9, 0] [8]
[4] [4, -5, 2] [2]
[6] [6, -3, 2] [2]
[-9] [-9, 7, 6] [6]
[-3] [-3, 8, 9] [8]
[-3] [-3, -9, 4] [-3]
[141] [141, -580, 348] [141]
[495] [495, -4, 223] [223]
[825] [825, -700, -622] [-622]
[-720] [-720, -86, -290] [-290]
[857] [857, 597, -359] [597]
[-393] [-393, 210, -461] [-393]
[-977] [-977, 117, 482] [117]
[-191] [-191, 506, -981] [-191]
[-473] [-473, -305, 137] [-305]
[534] [534, -198, 847] [534]
[-713] [-713, -29, -748] [-713]
[-977] [-977, -374, -854] [-854]
[-166] [-166, 714, 460] [460]
[-858] [-858, -64, 546] [-64]
[-536] [-536, -378, -392] [-392]
[864] [864, 457, -172] [457]
[-297] [-297, 360, 95] [95]
[-969] [-969, -685, -441] [-685]
[939] [939, 696, 174] [696]
[198] [198, -70, 851] [198]
[-373] [-373, 991, -430] [-373]
[765] [765, 782, -97] [765]
[708] [708, -235, -238] [-235]
[794] [794, 194, -897] [194]
[-826] [-826, -733, -604] [-733]
[879] [879, -338, 868] [868]
[309] [309, 814, -14] [309]
[-169] [-169, -2, -980] [-169]
[856] [856, -239, -206] [-206]
[362] [362, 574, -417] [362]
[-225] [-225, -681, -945] [-681]
[896] [896, -86, 279] [279]
[-349] [-349, 777, 260] [260]
[-785] [-785, -945, 555] [-785]
[643] [643, -754, 644] [643]
[-640] [-640, 874, 551] [551]
[-322] [-322, 36, 140] [36]
[-746] [-746, 269, 514] [269]
[-442] [-442, -224, 779] [-224]
[593] [593, 950, -41] [593]
[-336] [-336, -818, 652] [-336]
[850] [850, 926, 594] [850]
[801] [801, -787, 656] [656]
[-670] [-670, 682, 980] [682]
[-227] [-227, 617, -430] [-227]
[-103] [-103, -793, 50] [-103]
[412] [412, 92, 298] [298]
[-967] [-967, -151, -405] [-405]
[-113] [-113, -441, -297] [-297]
[-49] [-49, 702, -147] [-49]
print(read(1);*read(2);/read(2););  =  -475000
AVG fitness:  -578732
Nr of point mutations:  304
Nr of subtree mutations:  171

Generation 86  ------------------------
