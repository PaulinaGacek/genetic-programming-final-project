Inputs:  [[1], [2], [3], [4], [5], [6], [8], [9], [10], [11], [15], [100]]
Outputs:  [[789], [789], [789], [789], [789], [789], [789], [789], [789], [789], [789], [789]]
Max initial depth:  5
Population size:  100
Crossover rate:  0.9   Mutation rate:  0.4
Random population generated
Generation 0  ------------------------
Epochs without improvement: 0

Best fitness: -7.589353612167302  best indiv:
[290, 290] [1] [789]
[290, 290] [2] [789]
[290, 290] [3] [789]
[290, 290] [4] [789]
[290, 290] [5] [789]
[290, 290] [6] [789]
[290, 290] [8] [789]
[290, 290] [9] [789]
[290, 290] [10] [789]
[290, 290] [11] [789]
[290, 290] [15] [789]
[290, 290] [100] [789]
LOOP((58-25==25)OR((X3==X4)AND(X5!=22)))X1=58*5;;print(X1);print(X1);LOOP((X2==X1)AND((74==21)OR(3<X4)))print(X4+X1);print(98*57);IF(81==93)IF(95!=X4)X6=60;;;X2=X3;;  =  -7.589353612167302
Generation 1  ------------------------
Epochs without improvement: 0

Best fitness: -7.589353612167302  best indiv:
[290, 290] [1] [789]
[290, 290] [2] [789]
[290, 290] [3] [789]
[290, 290] [4] [789]
[290, 290] [5] [789]
[290, 290] [6] [789]
[290, 290] [8] [789]
[290, 290] [9] [789]
[290, 290] [10] [789]
[290, 290] [11] [789]
[290, 290] [15] [789]
[290, 290] [100] [789]
LOOP((58-25==25)OR((X1==X4)AND(X5!=22)))X1=58*5;;print(X1);print(X1);LOOP((X2==X1)AND((74==21)OR(3<X4)))print(X4+X1);print(98*57);IF(81==93)IF(95!=X4)X6=60;;;X2=X3;;  =  -7.589353612167302
Generation 2  ------------------------
Epochs without improvement: 1

Best fitness: -7.589353612167302  best indiv:
[290, 290] [1] [789]
[290, 290] [2] [789]
[290, 290] [3] [789]
[290, 290] [4] [789]
[290, 290] [5] [789]
[290, 290] [6] [789]
[290, 290] [8] [789]
[290, 290] [9] [789]
[290, 290] [10] [789]
[290, 290] [11] [789]
[290, 290] [15] [789]
[290, 290] [100] [789]
LOOP((58-25==25)OR((X1==X4)AND(X5!=22)))X1=58*5;;print(X1);print(X1);LOOP((X2==X1)AND((74==21)OR(3<X4)))print(X4+X1);print(98*57);IF(81==93)IF(95!=X4)X6=60;;;X2=X3;;  =  -7.589353612167302
Generation 3  ------------------------
Epochs without improvement: 2

Best fitness: -7.589353612167302  best indiv:
[290, 290] [1] [789]
[290, 290] [2] [789]
[290, 290] [3] [789]
[290, 290] [4] [789]
[290, 290] [5] [789]
[290, 290] [6] [789]
[290, 290] [8] [789]
[290, 290] [9] [789]
[290, 290] [10] [789]
[290, 290] [11] [789]
[290, 290] [15] [789]
[290, 290] [100] [789]
LOOP((58-25==25)OR((X3==X4)AND(X5!=22)))X1=58*5;;print(X1);print(X1);LOOP((X2==X1)AND((74==21)OR(3<X4)))print(30);print(98*57);IF(81==93)IF(95!=X4)X6=60;;;X2=X3;;  =  -7.589353612167302
Generation 4  ------------------------
Epochs without improvement: 3

Best fitness: -7.589353612167302  best indiv:
[290, 290] [1] [789]
[290, 290] [2] [789]
[290, 290] [3] [789]
[290, 290] [4] [789]
[290, 290] [5] [789]
[290, 290] [6] [789]
[290, 290] [8] [789]
[290, 290] [9] [789]
[290, 290] [10] [789]
[290, 290] [11] [789]
[290, 290] [15] [789]
[290, 290] [100] [789]
LOOP((58-25==25)OR((X3==X4)AND(X5!=22)))X1=58*5;;print(X1);print(X1);LOOP((X2==X1)AND((74==21)OR(3<X4)))print(30);print(98*57);IF(81==93)IF(95!=X4)X6=60;;;X2=X3;;  =  -7.589353612167302
Generation 5  ------------------------
Epochs without improvement: 4

Best fitness: -7.589353612167302  best indiv:
[290, 290] [1] [789]
[290, 290] [2] [789]
[290, 290] [3] [789]
[290, 290] [4] [789]
[290, 290] [5] [789]
[290, 290] [6] [789]
[290, 290] [8] [789]
[290, 290] [9] [789]
[290, 290] [10] [789]
[290, 290] [11] [789]
[290, 290] [15] [789]
[290, 290] [100] [789]
LOOP((58-25==25)OR((X3==X4)AND(X5!=22)))X1=58*5;;print(X1);print(X1);LOOP((X2==X1)AND((74==21)OR(3<X4)))print(30);print(98*57);IF(81==93)IF(95!=X4)X6=60;;;X2=X3;;  =  -7.589353612167302
45   generated again
Generation 6  ------------------------
Epochs without improvement: 0

Best fitness: -7.589353612167302  best indiv:
[290, 290] [1] [789]
[290, 290] [2] [789]
[290, 290] [3] [789]
[290, 290] [4] [789]
[290, 290] [5] [789]
[290, 290] [6] [789]
[290, 290] [8] [789]
[290, 290] [9] [789]
[290, 290] [10] [789]
[290, 290] [11] [789]
[290, 290] [15] [789]
[290, 290] [100] [789]
LOOP((58-25==25)OR((X3==X4)AND(X5!=22)))X1=58*5;;print(X1);print(X1);LOOP((X2==X1)AND((74==21)OR(3<X4)))print(30);print(98*57);IF(81==93)IF(95!=X4)X6=60;;;X2=X3;;  =  -7.589353612167302
Generation 7  ------------------------
Epochs without improvement: 1

Best fitness: -7.589353612167302  best indiv:
[290, 290] [1] [789]
[290, 290] [2] [789]
[290, 290] [3] [789]
[290, 290] [4] [789]
[290, 290] [5] [789]
[290, 290] [6] [789]
[290, 290] [8] [789]
[290, 290] [9] [789]
[290, 290] [10] [789]
[290, 290] [11] [789]
[290, 290] [15] [789]
[290, 290] [100] [789]
LOOP((58-25==25)OR((X1==X2)AND(X5!=22)))X1=58*5;;print(X1);print(X1);LOOP((X2==X1)AND((55==21)OR(3<X4)))print(X4+X1);print(98*57);IF(81==93)IF(95!=X4)X6=60;;;X2=X3;;  =  -7.589353612167302
Generation 8  ------------------------
Epochs without improvement: 2

Best fitness: -7.574144486692014  best indiv:
[291] [1] [789]
[291] [2] [789]
[291] [3] [789]
[291] [4] [789]
[291] [5] [789]
[291] [6] [789]
[291] [8] [789]
[291] [9] [789]
[291] [10] [789]
[291] [11] [789]
[291] [15] [789]
[291] [100] [789]
print(58*5+X1*X1);X1=53;IF(X7/X1==X1+X1)X1=58*5;;  =  -7.574144486692014
Generation 9  ------------------------
Epochs without improvement: 0

Best fitness: -7.574144486692014  best indiv:
[291] [1] [789]
[291] [2] [789]
[291] [3] [789]
[291] [4] [789]
[291] [5] [789]
[291] [6] [789]
[291] [8] [789]
[291] [9] [789]
[291] [10] [789]
[291] [11] [789]
[291] [15] [789]
[291] [100] [789]
print(58*5+X1*X1);X1=53;IF(X7/X1==X1+X1)X1=58*5;;  =  -7.574144486692014
Generation 10  ------------------------
Epochs without improvement: 1

Best fitness: -2.1140684410646386  best indiv:
[650] [1] [789]
[650] [2] [789]
[650] [3] [789]
[650] [4] [789]
[650] [5] [789]
[650] [6] [789]
[650] [8] [789]
[650] [9] [789]
[650] [10] [789]
[650] [11] [789]
[650] [15] [789]
[650] [100] [789]
print(5*5+X1*25);X1=53;IF(53/X9==62+X1)X1=66*5;;  =  -2.1140684410646386
Generation 11  ------------------------
Epochs without improvement: 0
