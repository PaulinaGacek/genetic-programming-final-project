Inputs:  [[1], [2], [3], [4], [5], [6], [8], [9], [10], [11], [15], [100]]
Outputs:  [[789], [789], [789], [789], [789], [789], [789], [789], [789], [789], [789], [789]]
Max initial depth:  5
Population size:  10
Crossover rate:  0.9   Mutation rate:  0.1
Random population generated
Generation 0  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((1>60)OR(X1!=39)))AND((9==X1)OR((X1<X1)AND(91==X1))))IF(32<X1)LOOP(X1<99)X1=90;;;print(57);LOOP((49!=X1)AND(X1==99))X1=79;;IF(((83!=57)AND(X4==X4))AND(X1!=X1))IF(X1<X2)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 1  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((1>60)OR(X1!=39)))AND((9==X1)OR((X1<X1)AND(91==X1))))IF(32<X1)LOOP(X1<99)X1=90;;;print(57);LOOP((49!=X1)AND(X1==99))X1=79;;IF((53!=48)AND(X1!=X1))IF(X1<X2)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 2  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((1>60)OR(X1!=39)))AND((9==X1)OR((X1<X1)AND(91==X1))))IF(32<X1)LOOP(X1<99)X1=90;;;print(57);LOOP((49!=X1)AND(X1==99))X1=79;;IF((53!=48)AND(X1!=X1))IF(X1<X2)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 3  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((1>60)OR(X1!=39)))AND((9==X1)OR((X1<X1)AND(91==X1))))IF(32<X1)LOOP(X1<99)X1=90;;;print(57);LOOP((49!=X1)AND(X1==99))X1=79;;IF((53!=48)AND(X1!=X1))IF(X1<X2)IF(X2==65)X1=12;;;;X1=28;;  =  -10.585551330798475
Generation 4  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((1>60)AND(X1!=39)))AND((91==X1)OR((X1<X1)AND(91==X1))))IF(32<X1)LOOP(12<99)X1=90;;;print(57);LOOP((49!=X1)AND(X1==99))X1=X1;;IF(((41!=57)AND(X1==X4))AND(X1!=X1))IF(X1<X2)X1=79;;;X1=28;;  =  -10.585551330798475
Generation 5  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<75)AND((1>60)OR(X1!=39)))AND((91==X1)OR((X1<X1)AND(91==X1))))IF(32<X1)LOOP(X1<99)X1=90;;;print(57);LOOP((49!=X1)AND((X1-33<82-97)AND(((82!=X1)OR(X2>X1))OR(9<0))))X1=79;;IF(((83!=57)AND(X4==X4))AND(X1!=X1))IF(X1<X2)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 6  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<75)AND((1>60)OR(X1!=39)))AND((91==X1)OR((X1<X1)AND(91==X1))))IF(32<X1)LOOP(X1<99)X1=90;;;print(57);LOOP((49!=X1)AND((X1-33<82-97)AND(((82!=X1)OR(X2>X1))OR(9<0))))X1=79;;IF(((83!=57)AND(X4==X4))AND(X1!=X1))IF(X1<X2)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 7  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((1>60)AND(X1!=39)))AND((91==X1)OR((X1<X1)AND(91==X1))))IF(32<X1)LOOP(12<99)X1=90;;;print(57);LOOP((49!=X1)AND(X1==99))X1=X1;;IF(((41!=57)AND(X1==X4))AND(X1!=X1))IF(X1<X2)X1=79;;;X1=28;;  =  -10.585551330798475
Generation 8  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<9)AND((9==X1)OR((X9<X1)AND(91==X1))))IF(32<X1)LOOP(X1<99)X1=79;;;print(57);LOOP((49!=X1)AND(X1!=39))X1=79;;IF(X1<9)IF(X1>X2)LOOP(X2==65)X1=12;;;;X1=28;;  =  -10.585551330798475
Generation 9  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<9)AND((9==X1)OR((X9<X1)AND(91==X1))))IF(32<X1)LOOP(((X1==9)AND(X1!=39))AND((9!=X1)OR((X1<X9)AND(91!=X1))))IF(32>X1)LOOP((X3>X6)OR(72>X1))X1=90;;;print(57);LOOP((49!=X1)AND(X1<99))X1=X8;;IF((53!=48)AND(X1!=X9))IF(X1<X1)X1=11;;;X1=28;;;print(57);LOOP((49!=X1)AND(X1!=39))X1=79;;IF(X1<9)IF(X1>X2)LOOP(X2==65)X1=12;;;;X1=28;;  =  -10.585551330798475
Generation 10  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<9)AND((9==X1)OR((X9<X1)AND(91==X1))))IF(32<X1)LOOP(((X1==9)AND(X1!=39))AND((9!=X1)OR((X1<X9)AND(91!=X1))))IF(32>X1)LOOP((X3>X6)OR(72>X1))X1=90;;;print(57);LOOP((49!=X1)AND(X1<99))X1=X8;;IF((53!=48)AND(X1!=X9))IF(X1<X1)X1=11;;;X1=28;;;print(57);LOOP((49!=X1)AND(X1!=39))X1=79;;IF(X1<9)IF(X1>X2)LOOP(X2==65)X1=12;;;;X1=28;;  =  -10.585551330798475
Generation 11  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND(X1!=39))AND((9!=X1)OR((X1<X9)AND(91!=X1))))IF(91==X1)LOOP((X3>X6)OR(72>X1))X1=90;;;print(57);LOOP((49!=X1)AND(X1<99))X1=28;;IF((53!=48)AND(X1!=X9))IF(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 12  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND(X1!=39))AND((49!=X1)OR((X1<X9)AND(91!=X8))))IF(32==X1)LOOP((X3>X6)OR(72>X1))X1=90;;;print(57);LOOP((49!=X1)AND(X1<99))X1=X8;;IF((53!=48)AND(X1!=X9))IF(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 13  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>60)OR(X1==39)))AND((9==X2)OR((X1!=X3)AND(91==100))))IF(32<X1)LOOP((X2!=X6)OR(72>X1))X1=90;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=48)AND(((X1==9)AND(X1!=39))AND((49!=X1)OR((X1<X9)AND(91!=X8)))))LOOP(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 14  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>X1)OR(X6>39)))AND((9==X2)OR((X1<96)OR(91==44))))IF(32<96)LOOP(X10<X1)X1=90;;;print(57);IF(((X6>2)AND(X1<99))AND(X1<99))X1=X2;;IF((53!=48)OR(X1!=X10))LOOP(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 15  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>X1)OR(X6>39)))AND((9==X2)OR((X1<96)OR(91==44))))IF(32<96)LOOP(X10<X1)X1=90;;;print(57);IF(((X6>2)AND(X1<99))AND(X1<99))X1=X2;;IF((53!=48)OR(X1!=X10))LOOP(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 16  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>X1)OR(X6>39)))AND((9==X2)OR((X1<96)OR(91==44))))IF(32<96)LOOP(X10<X1)X1=90;;;print(57);IF(((X6>2)AND(X1<99))AND(X1<99))X1=X2;;IF((53!=48)OR(X1!=X10))LOOP(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 17  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>X1)OR(X6>39)))AND((9==X2)OR((X1<96)OR(91==44))))IF(32<96)LOOP(X10<X1)X1=90;;;print(57);IF(((X6>2)AND(X1<99))AND(X1<99))X1=X2;;IF((53!=48)OR(X1!=X10))LOOP(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 18  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>60)OR(34==39)))AND((X2!=X10)OR((X1!=98)AND(X4==X7))))LOOP(32<X1)LOOP((X2!=X6)OR(72>X1))X1=90;;;print(X1);LOOP((49>2)AND(X1==99))X1=X2;;IF((53==48)AND(X1<X10))X1=X8;;X1=28;;  =  -10.585551330798475
Generation 19  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>60)OR(49>X1)))AND((9==X2)OR((X1!=X3)AND(91==100))))IF(32<X1)LOOP((X2!=X6)OR(72>X1))X1=90;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=48)AND(X1<X10))LOOP(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 20  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>60)OR(49>X1)))AND((9==X2)OR((X1!=X3)AND(91==100))))IF(32<X1)LOOP((X2!=X6)OR((49>2)AND(X1<99)))X1=90;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF(53!=48)LOOP(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 21  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>60)OR(49>X1)))AND((9==X2)OR((X1!=X3)AND(91==100))))IF(32<X1)LOOP((X2!=X6)OR((49>2)AND(X1<99)))X1=90;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF(53!=48)LOOP(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 22  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(9==X2)IF(32<X1)LOOP((X2!=X6)OR(72>X1))X1=90;;;print(X1);LOOP(91==100)X1=X2;;IF((53!=48)AND(X1<X10))LOOP(X1<X1)X1=28;;;X1=28;;  =  -10.585551330798475
Generation 23  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(9==X2)IF(32<X1)LOOP((X2!=X6)OR(72>X1))X1=90;;;print(X1);LOOP(91==100)X1=X2;;IF((53!=48)AND(X1<X10))LOOP(X1<X1)X1=28;;;X1=28;;  =  -10.585551330798475
Generation 24  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<X10)AND(32<X1))LOOP(32<X1)LOOP((X2!=X6)OR(72>X1))X1=90;;;print(X1);IF((X1==48)AND(X1!=X10))LOOP((X2!=X6)OR(72>X1))X1=90;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=48)AND(X1<X10))LOOP(X1<X1)X1=11;;;X1=28;IF((53==48)AND(X8<X10))X1=X8;;X1=28;;  =  -10.585551330798475
Generation 25  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>60)OR(X1==39)))AND(X1<X1))IF((53==48)AND(X1!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=48)AND(X1<X10))LOOP(X1<X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 26  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>60)OR(X1==39)))AND(X1<X1))IF((53==48)AND(X1!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=48)AND(X1<X10))LOOP(X1<X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 27  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>21)OR(X1==39)))AND(X1<X1))IF((53==48)AND(X1!=X10))LOOP((X4!=X6)OR(49>2))X1=X1;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=48)AND(X1<X10))IF(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 28  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>21)OR(X1==39)))AND(X1<X1))IF((53==48)AND(X1!=X10))LOOP((X4!=X6)OR(49>2))X1=X1;;;print(X1);LOOP((49>2)AND(84<99))X1=X2;;LOOP((53!=48)AND(X1<X10))IF(X1<X1)X1=11;;;X1=28;;  =  -10.585551330798475
Generation 29  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X2>60)OR(X1==39)))AND(X1<X1))IF((53==48)AND(X1!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=X6)AND(X1<X10))LOOP(X1<X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 30  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X2>60)OR(X1==39)))AND(X1<X1))IF((53==48)AND(X1!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=X6)AND(X1<X10))LOOP(X1<X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 31  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X2>60)OR(X1==39)))AND(X1<X1))IF((53==48)AND(X1!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=X6)AND(X1<X10))LOOP(X1<X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 32  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X2>60)OR(X1==39)))AND(X1<X1))IF((53==48)AND(X1!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>2)AND(X1<99))X1=X2;;IF((53!=X6)AND(X1<X10))LOOP(X6<X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 33  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1<9)AND((X1>60)OR(X1==39)))AND(X1<X1))IF((X10==48)AND(X1!=X10))LOOP(X1>X10)X1=X1;;;print(X1);LOOP(((7!=48)AND(X1<X10))AND(X1<99))X1=X2;;IF((X1!=X6)AND(X1<X10))LOOP(X1<X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 34  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);IF(((76<X3)AND((X10>60)OR(X1==39)))AND(X1<X1))IF((53==42)OR(X1!=X10))LOOP(X1<X10)X1=X1;;;print(X1);LOOP(((7!=48)AND(X1<X10))AND(X1<99))X1=X2;;IF((X1!=X6)AND(X1<86))LOOP(X1>X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 35  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND((X1>60)OR(46==39)))AND(X1<X1))IF((53==48)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);X1=X1;IF(53!=X1)LOOP(X1<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 36  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND((X1>60)OR(46==39)))AND(X1<X1))IF((53==48)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);X1=X1;IF(53!=X1)LOOP(X1<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 37  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND((((X1==9)AND((X1>60)AND(46==39)))AND(44<X1))OR(46==39)))AND(X1<X1))IF((53==48)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>X3)AND(X1<99))X1=X2;;IF((X2==48)AND(X1<X10))LOOP(X1<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 38  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND((((X1==9)AND((X1>60)AND(46==39)))AND(44<X1))OR(46==39)))AND(X1<X1))IF((53==48)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>X3)AND(X1<99))X1=X2;;IF((X2==48)AND(X1<X10))LOOP(X1<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 39  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((43<9)AND((X1>60)OR(X1==39)))AND(X1==X1))IF(((X1<X10)AND(13<X1))AND(X1!=61))LOOP(((X1>60)OR(46==39))OR(67>X1))X1=90;;;print(X1);LOOP((X2==2)AND(X1<99))X1=X3;;IF((53!=48)AND((X2==48)AND(X1<X10)))IF(X1<X1)X1=X1;;;X1=28;;  =  -10.585551330798475
Generation 40  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND((X1>X1)OR(46==39)))AND(X1<X1))IF((53==48)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>X3)AND(X1<53))X1=X2;;IF((X2==48)AND(X1<X10))LOOP(X1<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 41  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1>60)OR(46==39)))AND(X1<X1))AND((X1>60)OR(X2==39)))AND(X1<X1))IF((53==48)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);IF((49>X3)AND(X1<99))X1=3;;IF((53!=X1)AND(2<56))LOOP(X1<X1)X1=62;;;X1=28;;  =  -10.585551330798475
Generation 42  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1>60)OR(46==39)))AND(X1<X1))AND((X1>60)OR(X2==39)))AND(X1<X1))IF((53==48)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);IF((49>X3)AND(X1<99))X1=3;;IF((53!=X1)AND(2<56))LOOP(X1<X1)X1=62;;;X1=28;;  =  -10.585551330798475
Generation 43  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1>60)OR(46==39)))AND(X1<X1))AND((X1>60)OR(X2==39)))AND(X1<X1))IF((53==48)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);IF((49>X3)AND(X1<99))X1=3;;IF((53!=X1)AND(2<56))LOOP(X1<X1)X1=62;;;X1=28;;  =  -10.585551330798475
Generation 44  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND((X1>X1)OR(46==39)))AND(X1<X1))IF((53==48)AND(83==X9))LOOP((X2!=X6)OR(72>X8))X1=X1;;;print(X1);LOOP((49>X5)AND(X1<X1))X1=X2;;IF(((X1==9)AND((X1>X1)OR(X1<X1)))AND(X1<X1))LOOP(X9<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 45  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==9)AND((X1>X1)OR(46==39)))AND(X1<X1))IF((53==48)AND(83==X9))LOOP((X2!=X6)OR(72>X8))X1=X1;;;print(X1);LOOP((49>X5)AND(X1<X1))X1=X2;;IF(((X1==9)AND((X1>X1)OR(X1<X1)))AND(X1<X1))LOOP(X9<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 46  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1!=60)OR(46==39)))AND(X1<X1))AND((X1>60)OR(72>X1)))AND(X1<X1))X1=X1;;  =  -10.585551330798475
Generation 47  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1!=60)OR(46==39)))AND(X1<X1))AND((X1>60)OR(72>X1)))AND(X1<X1))X1=X1;;  =  -10.585551330798475
Generation 48  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1!=60)OR(46==39)))AND(X1<X1))AND((X1>60)OR(72>X1)))AND(X1<X1))X1=X1;;  =  -10.585551330798475
Generation 49  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1!=60)OR(46==39)))AND(X1<X1))AND((X1>60)OR(72>X1)))AND(X1<X1))X1=X1;;  =  -10.585551330798475
Generation 50  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1>60)OR(93==39)))AND(X7<X1))AND((X4>X1)OR(X1<X1)))AND(X1==X1))IF((39>97)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((49>X3)AND(X1<99))X1=X2;;IF((53!=X1)AND(72>X1))LOOP(X1<X1)X1=69;;;X1=X10;;  =  -10.585551330798475
Generation 51  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((X1==60)AND((X1>X1)OR(46==39)))AND(X1<X1))IF((53==60)AND(83!=X10))LOOP((((53!=X1)AND((X1>60)OR(X1==39)))AND(X1==30))OR(83>97))X1=X10;;;print(X1);X1=X1;IF(46==39)LOOP(30<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 52  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1>60)AND(93>X1)))AND(X7<X1))AND((X4>X1)OR(X1<X1)))AND(X1==X1))IF((39>97)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((30<X1)AND(X1<99))X1=X2;;IF((6!=X1)AND(72>X1))LOOP(17>X1)X1=69;;;X1=X2;;  =  -10.585551330798475
Generation 53  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1>60)AND(93>X1)))AND(X7<X1))AND((X4>X1)OR(X1<X1)))AND(X1==X1))IF((39>97)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((30<X1)AND(X1<99))X1=X2;;IF((6!=X1)AND(72>X1))LOOP(17>X1)X1=69;;;X1=X2;;  =  -10.585551330798475
Generation 54  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1>60)AND(93>X1)))AND(X7<X1))AND((X4>X1)OR(X1<X1)))AND(X1==X1))IF((39>97)AND(83!=X10))LOOP((X2!=X6)OR(72>X1))X1=X1;;;print(X1);LOOP((30<X1)AND(X1<99))X1=X2;;IF((6!=X1)AND(72>X1))LOOP(17>X1)X1=69;;;X1=X2;;  =  -10.585551330798475
Generation 55  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(((((X1==9)AND((X1<60)OR(X4==X1)))AND(X7<X1))AND((X8>X1)OR(X1<X1)))AND(50==X1))IF((39>97)AND(83==X10))LOOP((42!=X6)OR(X8>25))X1=X1;;;print(X1);LOOP((49>X3)AND(X1<99))X1=X2;;IF((53!=X1)AND(72>X1))LOOP(44<X1)X1=69;;;X1=28;;  =  -10.585551330798475
Generation 56  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)X1=69;;  =  -10.585551330798475
Generation 57  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)X1=69;;  =  -10.585551330798475
Generation 58  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)X1=69;;  =  -10.585551330798475
Generation 59  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)X1=69;;  =  -10.585551330798475
Generation 60  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((X1<X1)AND(X1==X8))IF((39>97)AND(83!=X10))LOOP((X6==X6)AND(X3>X1))X1=X1;;;print(X1);LOOP((49>X3)AND(X1>3))X1=X1;;IF((X1!=X1)AND(72>X1))LOOP(X1<X1)X1=69;;;X1=28;;;  =  -10.585551330798475
Generation 61  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((X1<X1)AND(X1==X8))IF((39>97)AND(83!=X10))LOOP((X6==X6)AND(X3>X1))X1=X1;;;print(X1);LOOP((49>X3)AND(X1>3))X1=X1;;IF((X1!=X1)AND(72>X1))LOOP(X1<X1)X1=69;;;X1=28;;;  =  -10.585551330798475
Generation 62  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((X1<X1)AND(X1==X8))IF((39>97)AND(83!=X10))LOOP((X6==X6)AND(X3>X1))X1=X1;;;print(X1);LOOP((49>X3)AND(X1>3))X1=X1;;IF((X1!=X1)AND(72>X1))LOOP(X1<X1)X1=69;;;X1=28;;;  =  -10.585551330798475
Generation 63  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)IF((53>86)AND(83<X10))IF((((53!=X1)AND((X1>95)OR(X1==9)))AND(X1==30))OR(X8!=97))X1=X10;;;print(10);X1=X1;IF(46==39)LOOP(30!=X1)IF((39>97)AND(83!=2))LOOP((42!=X1)OR(3>25))X1=X1;;;print(X1);LOOP(30<X1)X1=69;;IF((53!=12)OR(72!=X1))LOOP(X1<X1)X1=69;;;X1=28;;;X1=28;;  =  -10.585551330798475
Generation 64  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)IF((53>86)AND(83<X10))IF((((53!=X1)AND((X1>95)OR(X1==9)))AND(X1==30))OR(X8!=97))X1=X10;;;print(10);X1=X1;IF(X1==39)LOOP(30!=X1)IF((39>97)AND(83!=2))LOOP((42!=X1)OR(3>25))X1=X1;;;print(X1);LOOP(30<X1)X1=69;;IF((53!=12)OR(72!=X1))LOOP(X1<X1)X1=69;;;X1=28;;;X1=28;;  =  -10.585551330798475
Generation 65  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((49>X3)AND(X1>3))X1=X1;;print(10);X1=X1;IF(46==39)LOOP(30!=X1)IF((39>97)AND(83!=2))LOOP(((49>X1)AND(X1>3))OR(3>25))X1=X1;;;print(X1);LOOP(30<X1)X1=69;;IF((53!=12)OR(72!=X1))LOOP(X1<X1)X1=69;;;X1=28;;;X1=28;;  =  -10.585551330798475
Generation 66  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((49>X3)AND(X1>3))X1=X1;;print(10);X1=X1;IF(46==39)LOOP(30!=X1)IF((39>97)AND(83!=2))LOOP(((49>X1)AND(X1>3))OR(3>25))X1=X1;;;print(X1);LOOP(30<X1)X1=69;;IF((53!=12)OR(72!=X1))LOOP(X1<X1)X1=69;;;X1=28;;;X1=28;;  =  -10.585551330798475
Generation 67  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1==X1)LOOP((49>X3)OR(X10>X1))X1=X1;;;  =  -10.585551330798475
Generation 68  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((X1==X1)AND(X1>X3))X1=X1;;;  =  -10.585551330798475
Generation 69  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1==X1)LOOP(49>X1)X1=X1;;;  =  -10.585551330798475
Generation 70  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((X1==X1)AND(X1>3))X1=X1;;;  =  -10.585551330798475
Generation 71  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((X1<X1)AND(X1==X8))IF((39>X3)AND(83!=X1))LOOP((X6==X6)OR(X3>X2))X1=X1;;;print(X1);LOOP((49>X1)AND(X1>3))X1=X7;;IF((X1!=X7)AND(72>X1))LOOP(X2<X1)X1=69;;;X1=28;;;  =  -10.585551330798475
Generation 72  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((49!=X1)AND(X1>3))X1=28;;;  =  -10.585551330798475
Generation 73  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((49!=X1)AND(X1>3))X1=28;;;  =  -10.585551330798475
Generation 74  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);X1=X8;  =  -10.585551330798475
Generation 75  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);X1=X8;  =  -10.585551330798475
Generation 76  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((X1<X1)AND(X1==X8))IF((27>X3)AND(83!=X1))LOOP((93>X3)OR(X3>X2))X1=X1;;;print(X8);LOOP((49>65)AND(X1>3))X1=X1;;IF((62!=X1)AND(72>X1))LOOP(16<X1)X1=69;;;X1=X1;;;  =  -10.585551330798475
Generation 77  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)X1=X8;;  =  -10.585551330798475
Generation 78  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)X1=X8;;  =  -10.585551330798475
Generation 79  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);X1=X8;  =  -10.585551330798475
Generation 80  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X8<X1)X1=X8;;  =  -10.585551330798475
Generation 81  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);IF(X1<X1)X1=X8;;  =  -10.585551330798475
Generation 82  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);IF(X1<X1)X1=X8;;  =  -10.585551330798475
Generation 83  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);IF(X1<X1)X1=X8;;  =  -10.585551330798475
Generation 84  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X1)LOOP((49!=X1)AND(X1>3))X1=X8;;;  =  -10.585551330798475
Generation 85  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1>3)X1=X8;;  =  -10.585551330798475
Generation 86  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);X1=14;  =  -10.585551330798475
Generation 87  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);X1=X8;  =  -10.585551330798475
Generation 88  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X3)X1=93;;  =  -10.585551330798475
Generation 89  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X3)LOOP(X1<X1)X1=X8;;;  =  -10.585551330798475
Generation 90  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X3)LOOP(X1<X1)X1=93;;;  =  -10.585551330798475
Generation 91  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1!=X3)LOOP(96<X7)X1=93;;;  =  -10.585551330798475
Generation 92  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X3)LOOP(X5<28)IF((49!=X1)OR(X1>X2))X1=82;;;;  =  -10.585551330798475
Generation 93  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X3)LOOP(X5<28)IF((75!=X1)OR(X1>X2))X1=82;;;;  =  -10.585551330798475
Generation 94  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP(X1<X3)LOOP(X1<28)IF((75!=X1)OR(X1>X2))X1=82;;;;  =  -10.585551330798475
Generation 95  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<X3)AND(X1>X1))X1=93;;  =  -10.585551330798475
Generation 96  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<X3)AND(X1>X1))X1=93;;  =  -10.585551330798475
Generation 97  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<X3)AND(X1>X1))X1=93;;  =  -10.585551330798475
Generation 98  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<X3)AND(X1>X1))X1=93;;  =  -10.585551330798475
Generation 99  ------------------------

Best fitness: -10.585551330798475  best indiv:
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
[93] [] [789]
print(93);LOOP((X1<X3)AND(X1>X1))X1=93;;  =  -10.585551330798475
